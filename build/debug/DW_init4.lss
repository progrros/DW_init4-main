
build/debug/DW_init4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005d54  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000250  08005ee4  08005ee4  00015ee4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006134  08006134  00020108  2**0
                  CONTENTS
  4 .ARM          00000000  08006134  08006134  00020108  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006134  08006134  00020108  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006134  08006134  00016134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08006138  08006138  00016138  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000108  20000000  0800613c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020108  2**0
                  CONTENTS
 10 .bss          000003a4  20000108  20000108  00020108  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200004ac  200004ac  00020108  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020108  2**0
                  CONTENTS, READONLY
 13 .comment      00000033  00000000  00000000  00020138  2**0
                  CONTENTS, READONLY
 14 .debug_info   00034a5f  00000000  00000000  0002016b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000080e9  00000000  00000000  00054bca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00001b28  00000000  00000000  0005ccb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001e61b  00000000  00000000  0005e7e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007fef  00000000  00000000  0007cdfb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_loc    0001b189  00000000  00000000  00084dea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_ranges 00001a58  00000000  00000000  0009ff78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000046d8  00000000  00000000  000a19d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .stab         00000024  00000000  00000000  000a60a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .stabstr      0000004e  00000000  00000000  000a60cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000190 <deregister_tm_clones>:
 8000190:	4803      	ldr	r0, [pc, #12]	; (80001a0 <deregister_tm_clones+0x10>)
 8000192:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <deregister_tm_clones+0x14>)
 8000194:	4283      	cmp	r3, r0
 8000196:	d002      	beq.n	800019e <deregister_tm_clones+0xe>
 8000198:	4b03      	ldr	r3, [pc, #12]	; (80001a8 <deregister_tm_clones+0x18>)
 800019a:	b103      	cbz	r3, 800019e <deregister_tm_clones+0xe>
 800019c:	4718      	bx	r3
 800019e:	4770      	bx	lr
 80001a0:	20000108 	.word	0x20000108
 80001a4:	20000108 	.word	0x20000108
 80001a8:	00000000 	.word	0x00000000

080001ac <register_tm_clones>:
 80001ac:	4805      	ldr	r0, [pc, #20]	; (80001c4 <register_tm_clones+0x18>)
 80001ae:	4906      	ldr	r1, [pc, #24]	; (80001c8 <register_tm_clones+0x1c>)
 80001b0:	1a0b      	subs	r3, r1, r0
 80001b2:	0fd9      	lsrs	r1, r3, #31
 80001b4:	eb01 01a3 	add.w	r1, r1, r3, asr #2
 80001b8:	1049      	asrs	r1, r1, #1
 80001ba:	d002      	beq.n	80001c2 <register_tm_clones+0x16>
 80001bc:	4b03      	ldr	r3, [pc, #12]	; (80001cc <register_tm_clones+0x20>)
 80001be:	b103      	cbz	r3, 80001c2 <register_tm_clones+0x16>
 80001c0:	4718      	bx	r3
 80001c2:	4770      	bx	lr
 80001c4:	20000108 	.word	0x20000108
 80001c8:	20000108 	.word	0x20000108
 80001cc:	00000000 	.word	0x00000000

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c06      	ldr	r4, [pc, #24]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b943      	cbnz	r3, 80001ea <__do_global_dtors_aux+0x1a>
 80001d8:	f7ff ffda 	bl	8000190 <deregister_tm_clones>
 80001dc:	4b04      	ldr	r3, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	b113      	cbz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001e0:	4804      	ldr	r0, [pc, #16]	; (80001f4 <__do_global_dtors_aux+0x24>)
 80001e2:	f3af 8000 	nop.w
 80001e6:	2301      	movs	r3, #1
 80001e8:	7023      	strb	r3, [r4, #0]
 80001ea:	bd10      	pop	{r4, pc}
 80001ec:	20000108 	.word	0x20000108
 80001f0:	00000000 	.word	0x00000000
 80001f4:	08005ecc 	.word	0x08005ecc

080001f8 <frame_dummy>:
 80001f8:	b508      	push	{r3, lr}
 80001fa:	4b04      	ldr	r3, [pc, #16]	; (800020c <frame_dummy+0x14>)
 80001fc:	b11b      	cbz	r3, 8000206 <frame_dummy+0xe>
 80001fe:	4904      	ldr	r1, [pc, #16]	; (8000210 <frame_dummy+0x18>)
 8000200:	4804      	ldr	r0, [pc, #16]	; (8000214 <frame_dummy+0x1c>)
 8000202:	f3af 8000 	nop.w
 8000206:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800020a:	e7cf      	b.n	80001ac <register_tm_clones>
 800020c:	00000000 	.word	0x00000000
 8000210:	2000010c 	.word	0x2000010c
 8000214:	08005ecc 	.word	0x08005ecc

08000218 <__assert_func>:
 8000218:	b500      	push	{lr}
 800021a:	4c0b      	ldr	r4, [pc, #44]	; (8000248 <__assert_func+0x30>)
 800021c:	6825      	ldr	r5, [r4, #0]
 800021e:	4614      	mov	r4, r2
 8000220:	68ee      	ldr	r6, [r5, #12]
 8000222:	461a      	mov	r2, r3
 8000224:	b085      	sub	sp, #20
 8000226:	4603      	mov	r3, r0
 8000228:	460d      	mov	r5, r1
 800022a:	b14c      	cbz	r4, 8000240 <__assert_func+0x28>
 800022c:	4907      	ldr	r1, [pc, #28]	; (800024c <__assert_func+0x34>)
 800022e:	9500      	str	r5, [sp, #0]
 8000230:	e9cd 1401 	strd	r1, r4, [sp, #4]
 8000234:	4630      	mov	r0, r6
 8000236:	4906      	ldr	r1, [pc, #24]	; (8000250 <__assert_func+0x38>)
 8000238:	f000 f828 	bl	800028c <fiprintf>
 800023c:	f000 fde0 	bl	8000e00 <abort>
 8000240:	4904      	ldr	r1, [pc, #16]	; (8000254 <__assert_func+0x3c>)
 8000242:	460c      	mov	r4, r1
 8000244:	e7f3      	b.n	800022e <__assert_func+0x16>
 8000246:	bf00      	nop
 8000248:	20000000 	.word	0x20000000
 800024c:	0800606c 	.word	0x0800606c
 8000250:	0800607c 	.word	0x0800607c
 8000254:	08006078 	.word	0x08006078

08000258 <__assert>:
 8000258:	b508      	push	{r3, lr}
 800025a:	4613      	mov	r3, r2
 800025c:	2200      	movs	r2, #0
 800025e:	f7ff ffdb 	bl	8000218 <__assert_func>
 8000262:	bf00      	nop

08000264 <__errno>:
 8000264:	4b01      	ldr	r3, [pc, #4]	; (800026c <__errno+0x8>)
 8000266:	6818      	ldr	r0, [r3, #0]
 8000268:	4770      	bx	lr
 800026a:	bf00      	nop
 800026c:	20000000 	.word	0x20000000

08000270 <_fiprintf_r>:
 8000270:	b40c      	push	{r2, r3}
 8000272:	b500      	push	{lr}
 8000274:	b083      	sub	sp, #12
 8000276:	ab04      	add	r3, sp, #16
 8000278:	f853 2b04 	ldr.w	r2, [r3], #4
 800027c:	9301      	str	r3, [sp, #4]
 800027e:	f000 f905 	bl	800048c <_vfiprintf_r>
 8000282:	b003      	add	sp, #12
 8000284:	f85d eb04 	ldr.w	lr, [sp], #4
 8000288:	b002      	add	sp, #8
 800028a:	4770      	bx	lr

0800028c <fiprintf>:
 800028c:	b40e      	push	{r1, r2, r3}
 800028e:	b510      	push	{r4, lr}
 8000290:	b083      	sub	sp, #12
 8000292:	ab05      	add	r3, sp, #20
 8000294:	4c06      	ldr	r4, [pc, #24]	; (80002b0 <fiprintf+0x24>)
 8000296:	f853 2b04 	ldr.w	r2, [r3], #4
 800029a:	9301      	str	r3, [sp, #4]
 800029c:	4601      	mov	r1, r0
 800029e:	6820      	ldr	r0, [r4, #0]
 80002a0:	f000 f8f4 	bl	800048c <_vfiprintf_r>
 80002a4:	b003      	add	sp, #12
 80002a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80002aa:	b003      	add	sp, #12
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop
 80002b0:	20000000 	.word	0x20000000

080002b4 <__libc_init_array>:
 80002b4:	b570      	push	{r4, r5, r6, lr}
 80002b6:	4e0d      	ldr	r6, [pc, #52]	; (80002ec <__libc_init_array+0x38>)
 80002b8:	4d0d      	ldr	r5, [pc, #52]	; (80002f0 <__libc_init_array+0x3c>)
 80002ba:	1b76      	subs	r6, r6, r5
 80002bc:	10b6      	asrs	r6, r6, #2
 80002be:	d006      	beq.n	80002ce <__libc_init_array+0x1a>
 80002c0:	2400      	movs	r4, #0
 80002c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80002c6:	3401      	adds	r4, #1
 80002c8:	4798      	blx	r3
 80002ca:	42a6      	cmp	r6, r4
 80002cc:	d1f9      	bne.n	80002c2 <__libc_init_array+0xe>
 80002ce:	4e09      	ldr	r6, [pc, #36]	; (80002f4 <__libc_init_array+0x40>)
 80002d0:	4d09      	ldr	r5, [pc, #36]	; (80002f8 <__libc_init_array+0x44>)
 80002d2:	1b76      	subs	r6, r6, r5
 80002d4:	f005 fdfa 	bl	8005ecc <_init>
 80002d8:	10b6      	asrs	r6, r6, #2
 80002da:	d006      	beq.n	80002ea <__libc_init_array+0x36>
 80002dc:	2400      	movs	r4, #0
 80002de:	f855 3b04 	ldr.w	r3, [r5], #4
 80002e2:	3401      	adds	r4, #1
 80002e4:	4798      	blx	r3
 80002e6:	42a6      	cmp	r6, r4
 80002e8:	d1f9      	bne.n	80002de <__libc_init_array+0x2a>
 80002ea:	bd70      	pop	{r4, r5, r6, pc}
 80002ec:	08006134 	.word	0x08006134
 80002f0:	08006134 	.word	0x08006134
 80002f4:	08006138 	.word	0x08006138
 80002f8:	08006134 	.word	0x08006134

080002fc <memcmp>:
 80002fc:	2a03      	cmp	r2, #3
 80002fe:	b570      	push	{r4, r5, r6, lr}
 8000300:	d915      	bls.n	800032e <memcmp+0x32>
 8000302:	ea40 0c01 	orr.w	ip, r0, r1
 8000306:	f01c 0f03 	tst.w	ip, #3
 800030a:	4604      	mov	r4, r0
 800030c:	460b      	mov	r3, r1
 800030e:	d121      	bne.n	8000354 <memcmp+0x58>
 8000310:	4619      	mov	r1, r3
 8000312:	4620      	mov	r0, r4
 8000314:	680e      	ldr	r6, [r1, #0]
 8000316:	6805      	ldr	r5, [r0, #0]
 8000318:	42b5      	cmp	r5, r6
 800031a:	f104 0404 	add.w	r4, r4, #4
 800031e:	f103 0304 	add.w	r3, r3, #4
 8000322:	d117      	bne.n	8000354 <memcmp+0x58>
 8000324:	3a04      	subs	r2, #4
 8000326:	2a03      	cmp	r2, #3
 8000328:	4620      	mov	r0, r4
 800032a:	4619      	mov	r1, r3
 800032c:	d8f0      	bhi.n	8000310 <memcmp+0x14>
 800032e:	1e54      	subs	r4, r2, #1
 8000330:	b1a2      	cbz	r2, 800035c <memcmp+0x60>
 8000332:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8000336:	3901      	subs	r1, #1
 8000338:	e001      	b.n	800033e <memcmp+0x42>
 800033a:	18c3      	adds	r3, r0, r3
 800033c:	d00c      	beq.n	8000358 <memcmp+0x5c>
 800033e:	f81c ef01 	ldrb.w	lr, [ip, #1]!
 8000342:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8000346:	4596      	cmp	lr, r2
 8000348:	eba4 030c 	sub.w	r3, r4, ip
 800034c:	d0f5      	beq.n	800033a <memcmp+0x3e>
 800034e:	ebae 0002 	sub.w	r0, lr, r2
 8000352:	bd70      	pop	{r4, r5, r6, pc}
 8000354:	1e54      	subs	r4, r2, #1
 8000356:	e7ec      	b.n	8000332 <memcmp+0x36>
 8000358:	4618      	mov	r0, r3
 800035a:	bd70      	pop	{r4, r5, r6, pc}
 800035c:	4610      	mov	r0, r2
 800035e:	bd70      	pop	{r4, r5, r6, pc}

08000360 <memset>:
 8000360:	0783      	lsls	r3, r0, #30
 8000362:	b530      	push	{r4, r5, lr}
 8000364:	d048      	beq.n	80003f8 <memset+0x98>
 8000366:	1e54      	subs	r4, r2, #1
 8000368:	2a00      	cmp	r2, #0
 800036a:	d03f      	beq.n	80003ec <memset+0x8c>
 800036c:	b2ca      	uxtb	r2, r1
 800036e:	4603      	mov	r3, r0
 8000370:	e001      	b.n	8000376 <memset+0x16>
 8000372:	3c01      	subs	r4, #1
 8000374:	d33a      	bcc.n	80003ec <memset+0x8c>
 8000376:	f803 2b01 	strb.w	r2, [r3], #1
 800037a:	079d      	lsls	r5, r3, #30
 800037c:	d1f9      	bne.n	8000372 <memset+0x12>
 800037e:	2c03      	cmp	r4, #3
 8000380:	d92d      	bls.n	80003de <memset+0x7e>
 8000382:	b2cd      	uxtb	r5, r1
 8000384:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 8000388:	2c0f      	cmp	r4, #15
 800038a:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 800038e:	d936      	bls.n	80003fe <memset+0x9e>
 8000390:	f1a4 0210 	sub.w	r2, r4, #16
 8000394:	f022 0c0f 	bic.w	ip, r2, #15
 8000398:	f103 0e20 	add.w	lr, r3, #32
 800039c:	44e6      	add	lr, ip
 800039e:	ea4f 1c12 	mov.w	ip, r2, lsr #4
 80003a2:	f103 0210 	add.w	r2, r3, #16
 80003a6:	e942 5504 	strd	r5, r5, [r2, #-16]
 80003aa:	e942 5502 	strd	r5, r5, [r2, #-8]
 80003ae:	3210      	adds	r2, #16
 80003b0:	4572      	cmp	r2, lr
 80003b2:	d1f8      	bne.n	80003a6 <memset+0x46>
 80003b4:	f10c 0201 	add.w	r2, ip, #1
 80003b8:	f014 0f0c 	tst.w	r4, #12
 80003bc:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 80003c0:	f004 0c0f 	and.w	ip, r4, #15
 80003c4:	d013      	beq.n	80003ee <memset+0x8e>
 80003c6:	f1ac 0304 	sub.w	r3, ip, #4
 80003ca:	f023 0303 	bic.w	r3, r3, #3
 80003ce:	3304      	adds	r3, #4
 80003d0:	4413      	add	r3, r2
 80003d2:	f842 5b04 	str.w	r5, [r2], #4
 80003d6:	4293      	cmp	r3, r2
 80003d8:	d1fb      	bne.n	80003d2 <memset+0x72>
 80003da:	f00c 0403 	and.w	r4, ip, #3
 80003de:	b12c      	cbz	r4, 80003ec <memset+0x8c>
 80003e0:	b2ca      	uxtb	r2, r1
 80003e2:	441c      	add	r4, r3
 80003e4:	f803 2b01 	strb.w	r2, [r3], #1
 80003e8:	429c      	cmp	r4, r3
 80003ea:	d1fb      	bne.n	80003e4 <memset+0x84>
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	4664      	mov	r4, ip
 80003f0:	4613      	mov	r3, r2
 80003f2:	2c00      	cmp	r4, #0
 80003f4:	d1f4      	bne.n	80003e0 <memset+0x80>
 80003f6:	e7f9      	b.n	80003ec <memset+0x8c>
 80003f8:	4603      	mov	r3, r0
 80003fa:	4614      	mov	r4, r2
 80003fc:	e7bf      	b.n	800037e <memset+0x1e>
 80003fe:	461a      	mov	r2, r3
 8000400:	46a4      	mov	ip, r4
 8000402:	e7e0      	b.n	80003c6 <memset+0x66>

08000404 <__sfputc_r>:
 8000404:	6893      	ldr	r3, [r2, #8]
 8000406:	3b01      	subs	r3, #1
 8000408:	2b00      	cmp	r3, #0
 800040a:	6093      	str	r3, [r2, #8]
 800040c:	da11      	bge.n	8000432 <__sfputc_r+0x2e>
 800040e:	b410      	push	{r4}
 8000410:	6994      	ldr	r4, [r2, #24]
 8000412:	42a3      	cmp	r3, r4
 8000414:	db09      	blt.n	800042a <__sfputc_r+0x26>
 8000416:	290a      	cmp	r1, #10
 8000418:	d007      	beq.n	800042a <__sfputc_r+0x26>
 800041a:	6813      	ldr	r3, [r2, #0]
 800041c:	1c58      	adds	r0, r3, #1
 800041e:	6010      	str	r0, [r2, #0]
 8000420:	7019      	strb	r1, [r3, #0]
 8000422:	4608      	mov	r0, r1
 8000424:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000428:	4770      	bx	lr
 800042a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800042e:	f000 bc01 	b.w	8000c34 <__swbuf_r>
 8000432:	6813      	ldr	r3, [r2, #0]
 8000434:	1c58      	adds	r0, r3, #1
 8000436:	6010      	str	r0, [r2, #0]
 8000438:	7019      	strb	r1, [r3, #0]
 800043a:	4608      	mov	r0, r1
 800043c:	4770      	bx	lr
 800043e:	bf00      	nop

08000440 <__sfputs_r>:
 8000440:	b19b      	cbz	r3, 800046a <__sfputs_r+0x2a>
 8000442:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000444:	4413      	add	r3, r2
 8000446:	4606      	mov	r6, r0
 8000448:	460f      	mov	r7, r1
 800044a:	1e54      	subs	r4, r2, #1
 800044c:	1e5d      	subs	r5, r3, #1
 800044e:	e001      	b.n	8000454 <__sfputs_r+0x14>
 8000450:	42ac      	cmp	r4, r5
 8000452:	d008      	beq.n	8000466 <__sfputs_r+0x26>
 8000454:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000458:	463a      	mov	r2, r7
 800045a:	4630      	mov	r0, r6
 800045c:	f7ff ffd2 	bl	8000404 <__sfputc_r>
 8000460:	1c43      	adds	r3, r0, #1
 8000462:	d1f5      	bne.n	8000450 <__sfputs_r+0x10>
 8000464:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000466:	2000      	movs	r0, #0
 8000468:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800046a:	2000      	movs	r0, #0
 800046c:	4770      	bx	lr
 800046e:	bf00      	nop

08000470 <__sprint_r>:
 8000470:	6893      	ldr	r3, [r2, #8]
 8000472:	b510      	push	{r4, lr}
 8000474:	4614      	mov	r4, r2
 8000476:	b913      	cbnz	r3, 800047e <__sprint_r+0xe>
 8000478:	6053      	str	r3, [r2, #4]
 800047a:	4618      	mov	r0, r3
 800047c:	bd10      	pop	{r4, pc}
 800047e:	f000 fed7 	bl	8001230 <__sfvwrite_r>
 8000482:	2300      	movs	r3, #0
 8000484:	e9c4 3301 	strd	r3, r3, [r4, #4]
 8000488:	bd10      	pop	{r4, pc}
 800048a:	bf00      	nop

0800048c <_vfiprintf_r>:
 800048c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000490:	4688      	mov	r8, r1
 8000492:	b09f      	sub	sp, #124	; 0x7c
 8000494:	4615      	mov	r5, r2
 8000496:	461c      	mov	r4, r3
 8000498:	4681      	mov	r9, r0
 800049a:	b118      	cbz	r0, 80004a4 <_vfiprintf_r+0x18>
 800049c:	6983      	ldr	r3, [r0, #24]
 800049e:	2b00      	cmp	r3, #0
 80004a0:	f000 80a2 	beq.w	80005e8 <_vfiprintf_r+0x15c>
 80004a4:	4b92      	ldr	r3, [pc, #584]	; (80006f0 <_vfiprintf_r+0x264>)
 80004a6:	4598      	cmp	r8, r3
 80004a8:	f000 80a4 	beq.w	80005f4 <_vfiprintf_r+0x168>
 80004ac:	4b91      	ldr	r3, [pc, #580]	; (80006f4 <_vfiprintf_r+0x268>)
 80004ae:	4598      	cmp	r8, r3
 80004b0:	f000 80b1 	beq.w	8000616 <_vfiprintf_r+0x18a>
 80004b4:	4b90      	ldr	r3, [pc, #576]	; (80006f8 <_vfiprintf_r+0x26c>)
 80004b6:	4598      	cmp	r8, r3
 80004b8:	bf08      	it	eq
 80004ba:	f8d9 800c 	ldreq.w	r8, [r9, #12]
 80004be:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 80004c2:	0718      	lsls	r0, r3, #28
 80004c4:	f140 809d 	bpl.w	8000602 <_vfiprintf_r+0x176>
 80004c8:	f8d8 3010 	ldr.w	r3, [r8, #16]
 80004cc:	2b00      	cmp	r3, #0
 80004ce:	f000 8098 	beq.w	8000602 <_vfiprintf_r+0x176>
 80004d2:	2300      	movs	r3, #0
 80004d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80004d6:	7829      	ldrb	r1, [r5, #0]
 80004d8:	4e88      	ldr	r6, [pc, #544]	; (80006fc <_vfiprintf_r+0x270>)
 80004da:	9405      	str	r4, [sp, #20]
 80004dc:	2320      	movs	r3, #32
 80004de:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80004e2:	2330      	movs	r3, #48	; 0x30
 80004e4:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 80004e8:	2701      	movs	r7, #1
 80004ea:	2900      	cmp	r1, #0
 80004ec:	d074      	beq.n	80005d8 <_vfiprintf_r+0x14c>
 80004ee:	462c      	mov	r4, r5
 80004f0:	460b      	mov	r3, r1
 80004f2:	e004      	b.n	80004fe <_vfiprintf_r+0x72>
 80004f4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80004f8:	2b00      	cmp	r3, #0
 80004fa:	f000 808f 	beq.w	800061c <_vfiprintf_r+0x190>
 80004fe:	2b25      	cmp	r3, #37	; 0x25
 8000500:	d1f8      	bne.n	80004f4 <_vfiprintf_r+0x68>
 8000502:	ebb4 0b05 	subs.w	fp, r4, r5
 8000506:	f040 808c 	bne.w	8000622 <_vfiprintf_r+0x196>
 800050a:	7823      	ldrb	r3, [r4, #0]
 800050c:	2b00      	cmp	r3, #0
 800050e:	d063      	beq.n	80005d8 <_vfiprintf_r+0x14c>
 8000510:	2300      	movs	r3, #0
 8000512:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000516:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800051a:	9306      	str	r3, [sp, #24]
 800051c:	9309      	str	r3, [sp, #36]	; 0x24
 800051e:	f88d 305b 	strb.w	r3, [sp, #91]	; 0x5b
 8000522:	931c      	str	r3, [sp, #112]	; 0x70
 8000524:	3401      	adds	r4, #1
 8000526:	e004      	b.n	8000532 <_vfiprintf_r+0xa6>
 8000528:	9a06      	ldr	r2, [sp, #24]
 800052a:	fa07 f303 	lsl.w	r3, r7, r3
 800052e:	4313      	orrs	r3, r2
 8000530:	9306      	str	r3, [sp, #24]
 8000532:	4625      	mov	r5, r4
 8000534:	2205      	movs	r2, #5
 8000536:	f814 1b01 	ldrb.w	r1, [r4], #1
 800053a:	4630      	mov	r0, r6
 800053c:	f001 f8e8 	bl	8001710 <memchr>
 8000540:	1b83      	subs	r3, r0, r6
 8000542:	2800      	cmp	r0, #0
 8000544:	d1f0      	bne.n	8000528 <_vfiprintf_r+0x9c>
 8000546:	9b06      	ldr	r3, [sp, #24]
 8000548:	06d9      	lsls	r1, r3, #27
 800054a:	bf44      	itt	mi
 800054c:	2220      	movmi	r2, #32
 800054e:	f88d 205b 	strbmi.w	r2, [sp, #91]	; 0x5b
 8000552:	7829      	ldrb	r1, [r5, #0]
 8000554:	071a      	lsls	r2, r3, #28
 8000556:	bf44      	itt	mi
 8000558:	222b      	movmi	r2, #43	; 0x2b
 800055a:	f88d 205b 	strbmi.w	r2, [sp, #91]	; 0x5b
 800055e:	292a      	cmp	r1, #42	; 0x2a
 8000560:	d170      	bne.n	8000644 <_vfiprintf_r+0x1b8>
 8000562:	9a05      	ldr	r2, [sp, #20]
 8000564:	6811      	ldr	r1, [r2, #0]
 8000566:	3204      	adds	r2, #4
 8000568:	2900      	cmp	r1, #0
 800056a:	9205      	str	r2, [sp, #20]
 800056c:	f2c0 809b 	blt.w	80006a6 <_vfiprintf_r+0x21a>
 8000570:	9109      	str	r1, [sp, #36]	; 0x24
 8000572:	7869      	ldrb	r1, [r5, #1]
 8000574:	3501      	adds	r5, #1
 8000576:	292e      	cmp	r1, #46	; 0x2e
 8000578:	d076      	beq.n	8000668 <_vfiprintf_r+0x1dc>
 800057a:	4c61      	ldr	r4, [pc, #388]	; (8000700 <_vfiprintf_r+0x274>)
 800057c:	2203      	movs	r2, #3
 800057e:	4620      	mov	r0, r4
 8000580:	f001 f8c6 	bl	8001710 <memchr>
 8000584:	b138      	cbz	r0, 8000596 <_vfiprintf_r+0x10a>
 8000586:	9b06      	ldr	r3, [sp, #24]
 8000588:	1b00      	subs	r0, r0, r4
 800058a:	2440      	movs	r4, #64	; 0x40
 800058c:	fa04 f000 	lsl.w	r0, r4, r0
 8000590:	4303      	orrs	r3, r0
 8000592:	9306      	str	r3, [sp, #24]
 8000594:	3501      	adds	r5, #1
 8000596:	f815 1b01 	ldrb.w	r1, [r5], #1
 800059a:	485a      	ldr	r0, [pc, #360]	; (8000704 <_vfiprintf_r+0x278>)
 800059c:	f88d 1030 	strb.w	r1, [sp, #48]	; 0x30
 80005a0:	2206      	movs	r2, #6
 80005a2:	f001 f8b5 	bl	8001710 <memchr>
 80005a6:	2800      	cmp	r0, #0
 80005a8:	f000 8083 	beq.w	80006b2 <_vfiprintf_r+0x226>
 80005ac:	4b56      	ldr	r3, [pc, #344]	; (8000708 <_vfiprintf_r+0x27c>)
 80005ae:	2b00      	cmp	r3, #0
 80005b0:	d06d      	beq.n	800068e <_vfiprintf_r+0x202>
 80005b2:	aa05      	add	r2, sp, #20
 80005b4:	9200      	str	r2, [sp, #0]
 80005b6:	4b55      	ldr	r3, [pc, #340]	; (800070c <_vfiprintf_r+0x280>)
 80005b8:	4642      	mov	r2, r8
 80005ba:	a906      	add	r1, sp, #24
 80005bc:	4648      	mov	r0, r9
 80005be:	f3af 8000 	nop.w
 80005c2:	9003      	str	r0, [sp, #12]
 80005c4:	9b03      	ldr	r3, [sp, #12]
 80005c6:	3301      	adds	r3, #1
 80005c8:	d006      	beq.n	80005d8 <_vfiprintf_r+0x14c>
 80005ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80005cc:	9a03      	ldr	r2, [sp, #12]
 80005ce:	7829      	ldrb	r1, [r5, #0]
 80005d0:	4413      	add	r3, r2
 80005d2:	930b      	str	r3, [sp, #44]	; 0x2c
 80005d4:	2900      	cmp	r1, #0
 80005d6:	d18a      	bne.n	80004ee <_vfiprintf_r+0x62>
 80005d8:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 80005dc:	065b      	lsls	r3, r3, #25
 80005de:	d417      	bmi.n	8000610 <_vfiprintf_r+0x184>
 80005e0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80005e2:	b01f      	add	sp, #124	; 0x7c
 80005e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80005e8:	f000 fe02 	bl	80011f0 <__sinit>
 80005ec:	4b40      	ldr	r3, [pc, #256]	; (80006f0 <_vfiprintf_r+0x264>)
 80005ee:	4598      	cmp	r8, r3
 80005f0:	f47f af5c 	bne.w	80004ac <_vfiprintf_r+0x20>
 80005f4:	f8d9 8004 	ldr.w	r8, [r9, #4]
 80005f8:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 80005fc:	0718      	lsls	r0, r3, #28
 80005fe:	f53f af63 	bmi.w	80004c8 <_vfiprintf_r+0x3c>
 8000602:	4641      	mov	r1, r8
 8000604:	4648      	mov	r0, r9
 8000606:	f000 fb79 	bl	8000cfc <__swsetup_r>
 800060a:	2800      	cmp	r0, #0
 800060c:	f43f af61 	beq.w	80004d2 <_vfiprintf_r+0x46>
 8000610:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000614:	e7e5      	b.n	80005e2 <_vfiprintf_r+0x156>
 8000616:	f8d9 8008 	ldr.w	r8, [r9, #8]
 800061a:	e750      	b.n	80004be <_vfiprintf_r+0x32>
 800061c:	ebb4 0b05 	subs.w	fp, r4, r5
 8000620:	d0da      	beq.n	80005d8 <_vfiprintf_r+0x14c>
 8000622:	46aa      	mov	sl, r5
 8000624:	f1c5 0501 	rsb	r5, r5, #1
 8000628:	e003      	b.n	8000632 <_vfiprintf_r+0x1a6>
 800062a:	4593      	cmp	fp, r2
 800062c:	d936      	bls.n	800069c <_vfiprintf_r+0x210>
 800062e:	f81a 1f01 	ldrb.w	r1, [sl, #1]!
 8000632:	4642      	mov	r2, r8
 8000634:	4648      	mov	r0, r9
 8000636:	f7ff fee5 	bl	8000404 <__sfputc_r>
 800063a:	3001      	adds	r0, #1
 800063c:	eb05 020a 	add.w	r2, r5, sl
 8000640:	d1f3      	bne.n	800062a <_vfiprintf_r+0x19e>
 8000642:	e7c9      	b.n	80005d8 <_vfiprintf_r+0x14c>
 8000644:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 8000648:	2a09      	cmp	r2, #9
 800064a:	d894      	bhi.n	8000576 <_vfiprintf_r+0xea>
 800064c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800064e:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8000652:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8000656:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800065a:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 800065e:	2a09      	cmp	r2, #9
 8000660:	d9f5      	bls.n	800064e <_vfiprintf_r+0x1c2>
 8000662:	292e      	cmp	r1, #46	; 0x2e
 8000664:	9309      	str	r3, [sp, #36]	; 0x24
 8000666:	d188      	bne.n	800057a <_vfiprintf_r+0xee>
 8000668:	7869      	ldrb	r1, [r5, #1]
 800066a:	292a      	cmp	r1, #42	; 0x2a
 800066c:	d12b      	bne.n	80006c6 <_vfiprintf_r+0x23a>
 800066e:	9b05      	ldr	r3, [sp, #20]
 8000670:	78a9      	ldrb	r1, [r5, #2]
 8000672:	681a      	ldr	r2, [r3, #0]
 8000674:	9207      	str	r2, [sp, #28]
 8000676:	3304      	adds	r3, #4
 8000678:	2a00      	cmp	r2, #0
 800067a:	f105 0002 	add.w	r0, r5, #2
 800067e:	9305      	str	r3, [sp, #20]
 8000680:	bfb8      	it	lt
 8000682:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000686:	4605      	mov	r5, r0
 8000688:	bfb8      	it	lt
 800068a:	9307      	strlt	r3, [sp, #28]
 800068c:	e775      	b.n	800057a <_vfiprintf_r+0xee>
 800068e:	9b05      	ldr	r3, [sp, #20]
 8000690:	3307      	adds	r3, #7
 8000692:	f023 0307 	bic.w	r3, r3, #7
 8000696:	3308      	adds	r3, #8
 8000698:	9305      	str	r3, [sp, #20]
 800069a:	e796      	b.n	80005ca <_vfiprintf_r+0x13e>
 800069c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800069e:	7823      	ldrb	r3, [r4, #0]
 80006a0:	445a      	add	r2, fp
 80006a2:	920b      	str	r2, [sp, #44]	; 0x2c
 80006a4:	e732      	b.n	800050c <_vfiprintf_r+0x80>
 80006a6:	4249      	negs	r1, r1
 80006a8:	f043 0302 	orr.w	r3, r3, #2
 80006ac:	9109      	str	r1, [sp, #36]	; 0x24
 80006ae:	9306      	str	r3, [sp, #24]
 80006b0:	e75f      	b.n	8000572 <_vfiprintf_r+0xe6>
 80006b2:	aa05      	add	r2, sp, #20
 80006b4:	9200      	str	r2, [sp, #0]
 80006b6:	4b15      	ldr	r3, [pc, #84]	; (800070c <_vfiprintf_r+0x280>)
 80006b8:	4642      	mov	r2, r8
 80006ba:	a906      	add	r1, sp, #24
 80006bc:	4648      	mov	r0, r9
 80006be:	f000 f8cb 	bl	8000858 <_printf_i>
 80006c2:	9003      	str	r0, [sp, #12]
 80006c4:	e77e      	b.n	80005c4 <_vfiprintf_r+0x138>
 80006c6:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 80006ca:	2300      	movs	r3, #0
 80006cc:	2a09      	cmp	r2, #9
 80006ce:	9307      	str	r3, [sp, #28]
 80006d0:	f105 0501 	add.w	r5, r5, #1
 80006d4:	f63f af51 	bhi.w	800057a <_vfiprintf_r+0xee>
 80006d8:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 80006dc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80006e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80006e4:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 80006e8:	2a09      	cmp	r2, #9
 80006ea:	d9f5      	bls.n	80006d8 <_vfiprintf_r+0x24c>
 80006ec:	9307      	str	r3, [sp, #28]
 80006ee:	e744      	b.n	800057a <_vfiprintf_r+0xee>
 80006f0:	08005f28 	.word	0x08005f28
 80006f4:	08005f08 	.word	0x08005f08
 80006f8:	08005ee8 	.word	0x08005ee8
 80006fc:	080060ac 	.word	0x080060ac
 8000700:	080060b4 	.word	0x080060b4
 8000704:	080060b8 	.word	0x080060b8
 8000708:	00000000 	.word	0x00000000
 800070c:	08000441 	.word	0x08000441

08000710 <vfiprintf>:
 8000710:	b410      	push	{r4}
 8000712:	4c05      	ldr	r4, [pc, #20]	; (8000728 <vfiprintf+0x18>)
 8000714:	4684      	mov	ip, r0
 8000716:	4613      	mov	r3, r2
 8000718:	6820      	ldr	r0, [r4, #0]
 800071a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800071e:	460a      	mov	r2, r1
 8000720:	4661      	mov	r1, ip
 8000722:	f7ff beb3 	b.w	800048c <_vfiprintf_r>
 8000726:	bf00      	nop
 8000728:	20000000 	.word	0x20000000

0800072c <_printf_common>:
 800072c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000730:	4692      	mov	sl, r2
 8000732:	461f      	mov	r7, r3
 8000734:	690a      	ldr	r2, [r1, #16]
 8000736:	688b      	ldr	r3, [r1, #8]
 8000738:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 800073c:	429a      	cmp	r2, r3
 800073e:	bfb8      	it	lt
 8000740:	461a      	movlt	r2, r3
 8000742:	f8ca 2000 	str.w	r2, [sl]
 8000746:	f891 3043 	ldrb.w	r3, [r1, #67]	; 0x43
 800074a:	460c      	mov	r4, r1
 800074c:	4606      	mov	r6, r0
 800074e:	b113      	cbz	r3, 8000756 <_printf_common+0x2a>
 8000750:	3201      	adds	r2, #1
 8000752:	f8ca 2000 	str.w	r2, [sl]
 8000756:	6822      	ldr	r2, [r4, #0]
 8000758:	0691      	lsls	r1, r2, #26
 800075a:	d55d      	bpl.n	8000818 <_printf_common+0xec>
 800075c:	f8da 3000 	ldr.w	r3, [sl]
 8000760:	3302      	adds	r3, #2
 8000762:	f8ca 3000 	str.w	r3, [sl]
 8000766:	6822      	ldr	r2, [r4, #0]
 8000768:	f012 0f06 	tst.w	r2, #6
 800076c:	4611      	mov	r1, r2
 800076e:	d11e      	bne.n	80007ae <_printf_common+0x82>
 8000770:	68e1      	ldr	r1, [r4, #12]
 8000772:	1acb      	subs	r3, r1, r3
 8000774:	2b00      	cmp	r3, #0
 8000776:	bfd8      	it	le
 8000778:	4611      	movle	r1, r2
 800077a:	dd18      	ble.n	80007ae <_printf_common+0x82>
 800077c:	f104 0b19 	add.w	fp, r4, #25
 8000780:	f04f 0800 	mov.w	r8, #0
 8000784:	e005      	b.n	8000792 <_printf_common+0x66>
 8000786:	68e5      	ldr	r5, [r4, #12]
 8000788:	f8da 3000 	ldr.w	r3, [sl]
 800078c:	1aed      	subs	r5, r5, r3
 800078e:	4545      	cmp	r5, r8
 8000790:	dd0c      	ble.n	80007ac <_printf_common+0x80>
 8000792:	2301      	movs	r3, #1
 8000794:	465a      	mov	r2, fp
 8000796:	4639      	mov	r1, r7
 8000798:	4630      	mov	r0, r6
 800079a:	47c8      	blx	r9
 800079c:	3001      	adds	r0, #1
 800079e:	f108 0801 	add.w	r8, r8, #1
 80007a2:	d1f0      	bne.n	8000786 <_printf_common+0x5a>
 80007a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80007a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80007ac:	6821      	ldr	r1, [r4, #0]
 80007ae:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80007b2:	3b00      	subs	r3, #0
 80007b4:	bf18      	it	ne
 80007b6:	2301      	movne	r3, #1
 80007b8:	068a      	lsls	r2, r1, #26
 80007ba:	d50a      	bpl.n	80007d2 <_printf_common+0xa6>
 80007bc:	18e1      	adds	r1, r4, r3
 80007be:	1c5a      	adds	r2, r3, #1
 80007c0:	2030      	movs	r0, #48	; 0x30
 80007c2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80007c6:	4422      	add	r2, r4
 80007c8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80007cc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80007d0:	3302      	adds	r3, #2
 80007d2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80007d6:	4639      	mov	r1, r7
 80007d8:	4630      	mov	r0, r6
 80007da:	47c8      	blx	r9
 80007dc:	3001      	adds	r0, #1
 80007de:	d0e1      	beq.n	80007a4 <_printf_common+0x78>
 80007e0:	6823      	ldr	r3, [r4, #0]
 80007e2:	f003 0306 	and.w	r3, r3, #6
 80007e6:	2b04      	cmp	r3, #4
 80007e8:	d01d      	beq.n	8000826 <_printf_common+0xfa>
 80007ea:	68a3      	ldr	r3, [r4, #8]
 80007ec:	6922      	ldr	r2, [r4, #16]
 80007ee:	4293      	cmp	r3, r2
 80007f0:	dd25      	ble.n	800083e <_printf_common+0x112>
 80007f2:	f04f 0800 	mov.w	r8, #0
 80007f6:	1a9b      	subs	r3, r3, r2
 80007f8:	4498      	add	r8, r3
 80007fa:	341a      	adds	r4, #26
 80007fc:	2500      	movs	r5, #0
 80007fe:	e001      	b.n	8000804 <_printf_common+0xd8>
 8000800:	4545      	cmp	r5, r8
 8000802:	da1c      	bge.n	800083e <_printf_common+0x112>
 8000804:	2301      	movs	r3, #1
 8000806:	4622      	mov	r2, r4
 8000808:	4639      	mov	r1, r7
 800080a:	4630      	mov	r0, r6
 800080c:	47c8      	blx	r9
 800080e:	3001      	adds	r0, #1
 8000810:	f105 0501 	add.w	r5, r5, #1
 8000814:	d1f4      	bne.n	8000800 <_printf_common+0xd4>
 8000816:	e7c5      	b.n	80007a4 <_printf_common+0x78>
 8000818:	f012 0f06 	tst.w	r2, #6
 800081c:	d012      	beq.n	8000844 <_printf_common+0x118>
 800081e:	3b00      	subs	r3, #0
 8000820:	bf18      	it	ne
 8000822:	2301      	movne	r3, #1
 8000824:	e7d5      	b.n	80007d2 <_printf_common+0xa6>
 8000826:	f8da 3000 	ldr.w	r3, [sl]
 800082a:	68e1      	ldr	r1, [r4, #12]
 800082c:	6922      	ldr	r2, [r4, #16]
 800082e:	1ac9      	subs	r1, r1, r3
 8000830:	68a3      	ldr	r3, [r4, #8]
 8000832:	4293      	cmp	r3, r2
 8000834:	ea21 78e1 	bic.w	r8, r1, r1, asr #31
 8000838:	dcdd      	bgt.n	80007f6 <_printf_common+0xca>
 800083a:	2900      	cmp	r1, #0
 800083c:	dcdd      	bgt.n	80007fa <_printf_common+0xce>
 800083e:	2000      	movs	r0, #0
 8000840:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000844:	68e1      	ldr	r1, [r4, #12]
 8000846:	f8da 3000 	ldr.w	r3, [sl]
 800084a:	1acb      	subs	r3, r1, r3
 800084c:	2b00      	cmp	r3, #0
 800084e:	bfd8      	it	le
 8000850:	4611      	movle	r1, r2
 8000852:	dc93      	bgt.n	800077c <_printf_common+0x50>
 8000854:	e7ab      	b.n	80007ae <_printf_common+0x82>
 8000856:	bf00      	nop

08000858 <_printf_i>:
 8000858:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800085c:	460c      	mov	r4, r1
 800085e:	b084      	sub	sp, #16
 8000860:	4690      	mov	r8, r2
 8000862:	7e22      	ldrb	r2, [r4, #24]
 8000864:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000866:	4607      	mov	r7, r0
 8000868:	4699      	mov	r9, r3
 800086a:	f104 0043 	add.w	r0, r4, #67	; 0x43
 800086e:	2a00      	cmp	r2, #0
 8000870:	d033      	beq.n	80008da <_printf_i+0x82>
 8000872:	f1a2 0358 	sub.w	r3, r2, #88	; 0x58
 8000876:	b2dd      	uxtb	r5, r3
 8000878:	2d20      	cmp	r5, #32
 800087a:	d867      	bhi.n	800094c <_printf_i+0xf4>
 800087c:	2b20      	cmp	r3, #32
 800087e:	d865      	bhi.n	800094c <_printf_i+0xf4>
 8000880:	e8df f013 	tbh	[pc, r3, lsl #1]
 8000884:	006400de 	.word	0x006400de
 8000888:	00640064 	.word	0x00640064
 800088c:	00640064 	.word	0x00640064
 8000890:	00640064 	.word	0x00640064
 8000894:	00640064 	.word	0x00640064
 8000898:	00a30064 	.word	0x00a30064
 800089c:	0064006e 	.word	0x0064006e
 80008a0:	00640064 	.word	0x00640064
 80008a4:	006e0064 	.word	0x006e0064
 80008a8:	00640064 	.word	0x00640064
 80008ac:	00640064 	.word	0x00640064
 80008b0:	007f0021 	.word	0x007f0021
 80008b4:	006400c0 	.word	0x006400c0
 80008b8:	00ae0064 	.word	0x00ae0064
 80008bc:	007f0064 	.word	0x007f0064
 80008c0:	00640064 	.word	0x00640064
 80008c4:	00e5      	.short	0x00e5
 80008c6:	6823      	ldr	r3, [r4, #0]
 80008c8:	061a      	lsls	r2, r3, #24
 80008ca:	f140 8104 	bpl.w	8000ad6 <_printf_i+0x27e>
 80008ce:	680b      	ldr	r3, [r1, #0]
 80008d0:	6962      	ldr	r2, [r4, #20]
 80008d2:	1d1d      	adds	r5, r3, #4
 80008d4:	600d      	str	r5, [r1, #0]
 80008d6:	681b      	ldr	r3, [r3, #0]
 80008d8:	601a      	str	r2, [r3, #0]
 80008da:	2300      	movs	r3, #0
 80008dc:	4682      	mov	sl, r0
 80008de:	6123      	str	r3, [r4, #16]
 80008e0:	f8cd 9000 	str.w	r9, [sp]
 80008e4:	4643      	mov	r3, r8
 80008e6:	aa03      	add	r2, sp, #12
 80008e8:	4621      	mov	r1, r4
 80008ea:	4638      	mov	r0, r7
 80008ec:	f7ff ff1e 	bl	800072c <_printf_common>
 80008f0:	3001      	adds	r0, #1
 80008f2:	d020      	beq.n	8000936 <_printf_i+0xde>
 80008f4:	6923      	ldr	r3, [r4, #16]
 80008f6:	4652      	mov	r2, sl
 80008f8:	4641      	mov	r1, r8
 80008fa:	4638      	mov	r0, r7
 80008fc:	47c8      	blx	r9
 80008fe:	3001      	adds	r0, #1
 8000900:	d019      	beq.n	8000936 <_printf_i+0xde>
 8000902:	6823      	ldr	r3, [r4, #0]
 8000904:	68e0      	ldr	r0, [r4, #12]
 8000906:	9e03      	ldr	r6, [sp, #12]
 8000908:	079b      	lsls	r3, r3, #30
 800090a:	d519      	bpl.n	8000940 <_printf_i+0xe8>
 800090c:	1b83      	subs	r3, r0, r6
 800090e:	2b00      	cmp	r3, #0
 8000910:	dd16      	ble.n	8000940 <_printf_i+0xe8>
 8000912:	f104 0a19 	add.w	sl, r4, #25
 8000916:	2500      	movs	r5, #0
 8000918:	e004      	b.n	8000924 <_printf_i+0xcc>
 800091a:	68e0      	ldr	r0, [r4, #12]
 800091c:	9e03      	ldr	r6, [sp, #12]
 800091e:	1b83      	subs	r3, r0, r6
 8000920:	42ab      	cmp	r3, r5
 8000922:	dd0d      	ble.n	8000940 <_printf_i+0xe8>
 8000924:	2301      	movs	r3, #1
 8000926:	4652      	mov	r2, sl
 8000928:	4641      	mov	r1, r8
 800092a:	4638      	mov	r0, r7
 800092c:	47c8      	blx	r9
 800092e:	3001      	adds	r0, #1
 8000930:	f105 0501 	add.w	r5, r5, #1
 8000934:	d1f1      	bne.n	800091a <_printf_i+0xc2>
 8000936:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800093a:	b004      	add	sp, #16
 800093c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000940:	42b0      	cmp	r0, r6
 8000942:	bfb8      	it	lt
 8000944:	4630      	movlt	r0, r6
 8000946:	b004      	add	sp, #16
 8000948:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800094c:	2301      	movs	r3, #1
 800094e:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8000952:	6123      	str	r3, [r4, #16]
 8000954:	f104 0a42 	add.w	sl, r4, #66	; 0x42
 8000958:	2300      	movs	r3, #0
 800095a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800095e:	e7bf      	b.n	80008e0 <_printf_i+0x88>
 8000960:	6823      	ldr	r3, [r4, #0]
 8000962:	061a      	lsls	r2, r3, #24
 8000964:	d402      	bmi.n	800096c <_printf_i+0x114>
 8000966:	065e      	lsls	r6, r3, #25
 8000968:	f100 80c1 	bmi.w	8000aee <_printf_i+0x296>
 800096c:	680d      	ldr	r5, [r1, #0]
 800096e:	682a      	ldr	r2, [r5, #0]
 8000970:	3504      	adds	r5, #4
 8000972:	600d      	str	r5, [r1, #0]
 8000974:	4615      	mov	r5, r2
 8000976:	2a00      	cmp	r2, #0
 8000978:	db6b      	blt.n	8000a52 <_printf_i+0x1fa>
 800097a:	f8df c184 	ldr.w	ip, [pc, #388]	; 8000b00 <_printf_i+0x2a8>
 800097e:	260a      	movs	r6, #10
 8000980:	e010      	b.n	80009a4 <_printf_i+0x14c>
 8000982:	6823      	ldr	r3, [r4, #0]
 8000984:	061d      	lsls	r5, r3, #24
 8000986:	f140 809c 	bpl.w	8000ac2 <_printf_i+0x26a>
 800098a:	680b      	ldr	r3, [r1, #0]
 800098c:	1d1d      	adds	r5, r3, #4
 800098e:	600d      	str	r5, [r1, #0]
 8000990:	681d      	ldr	r5, [r3, #0]
 8000992:	f8df c16c 	ldr.w	ip, [pc, #364]	; 8000b00 <_printf_i+0x2a8>
 8000996:	2a6f      	cmp	r2, #111	; 0x6f
 8000998:	bf0c      	ite	eq
 800099a:	2608      	moveq	r6, #8
 800099c:	260a      	movne	r6, #10
 800099e:	2300      	movs	r3, #0
 80009a0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80009a4:	6862      	ldr	r2, [r4, #4]
 80009a6:	60a2      	str	r2, [r4, #8]
 80009a8:	2a00      	cmp	r2, #0
 80009aa:	db7f      	blt.n	8000aac <_printf_i+0x254>
 80009ac:	6823      	ldr	r3, [r4, #0]
 80009ae:	f023 0304 	bic.w	r3, r3, #4
 80009b2:	6023      	str	r3, [r4, #0]
 80009b4:	2d00      	cmp	r5, #0
 80009b6:	d15b      	bne.n	8000a70 <_printf_i+0x218>
 80009b8:	2a00      	cmp	r2, #0
 80009ba:	d179      	bne.n	8000ab0 <_printf_i+0x258>
 80009bc:	4682      	mov	sl, r0
 80009be:	2e08      	cmp	r6, #8
 80009c0:	d065      	beq.n	8000a8e <_printf_i+0x236>
 80009c2:	eba0 000a 	sub.w	r0, r0, sl
 80009c6:	6120      	str	r0, [r4, #16]
 80009c8:	e78a      	b.n	80008e0 <_printf_i+0x88>
 80009ca:	680b      	ldr	r3, [r1, #0]
 80009cc:	2201      	movs	r2, #1
 80009ce:	6818      	ldr	r0, [r3, #0]
 80009d0:	3304      	adds	r3, #4
 80009d2:	600b      	str	r3, [r1, #0]
 80009d4:	f104 0a42 	add.w	sl, r4, #66	; 0x42
 80009d8:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
 80009dc:	6122      	str	r2, [r4, #16]
 80009de:	e7bb      	b.n	8000958 <_printf_i+0x100>
 80009e0:	680b      	ldr	r3, [r1, #0]
 80009e2:	6862      	ldr	r2, [r4, #4]
 80009e4:	1d18      	adds	r0, r3, #4
 80009e6:	6008      	str	r0, [r1, #0]
 80009e8:	f8d3 a000 	ldr.w	sl, [r3]
 80009ec:	2100      	movs	r1, #0
 80009ee:	4650      	mov	r0, sl
 80009f0:	f000 fe8e 	bl	8001710 <memchr>
 80009f4:	2800      	cmp	r0, #0
 80009f6:	f000 8081 	beq.w	8000afc <_printf_i+0x2a4>
 80009fa:	eba0 000a 	sub.w	r0, r0, sl
 80009fe:	6060      	str	r0, [r4, #4]
 8000a00:	6120      	str	r0, [r4, #16]
 8000a02:	e7a9      	b.n	8000958 <_printf_i+0x100>
 8000a04:	6823      	ldr	r3, [r4, #0]
 8000a06:	f043 0320 	orr.w	r3, r3, #32
 8000a0a:	6023      	str	r3, [r4, #0]
 8000a0c:	2278      	movs	r2, #120	; 0x78
 8000a0e:	f8df c0f4 	ldr.w	ip, [pc, #244]	; 8000b04 <_printf_i+0x2ac>
 8000a12:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8000a16:	680a      	ldr	r2, [r1, #0]
 8000a18:	1d15      	adds	r5, r2, #4
 8000a1a:	600d      	str	r5, [r1, #0]
 8000a1c:	061d      	lsls	r5, r3, #24
 8000a1e:	d443      	bmi.n	8000aa8 <_printf_i+0x250>
 8000a20:	0659      	lsls	r1, r3, #25
 8000a22:	d541      	bpl.n	8000aa8 <_printf_i+0x250>
 8000a24:	8815      	ldrh	r5, [r2, #0]
 8000a26:	07de      	lsls	r6, r3, #31
 8000a28:	bf44      	itt	mi
 8000a2a:	f043 0320 	orrmi.w	r3, r3, #32
 8000a2e:	6023      	strmi	r3, [r4, #0]
 8000a30:	2d00      	cmp	r5, #0
 8000a32:	d144      	bne.n	8000abe <_printf_i+0x266>
 8000a34:	6823      	ldr	r3, [r4, #0]
 8000a36:	f023 0320 	bic.w	r3, r3, #32
 8000a3a:	6023      	str	r3, [r4, #0]
 8000a3c:	2610      	movs	r6, #16
 8000a3e:	e7ae      	b.n	800099e <_printf_i+0x146>
 8000a40:	2358      	movs	r3, #88	; 0x58
 8000a42:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000a46:	f8df c0b8 	ldr.w	ip, [pc, #184]	; 8000b00 <_printf_i+0x2a8>
 8000a4a:	6823      	ldr	r3, [r4, #0]
 8000a4c:	e7e3      	b.n	8000a16 <_printf_i+0x1be>
 8000a4e:	6823      	ldr	r3, [r4, #0]
 8000a50:	e7dc      	b.n	8000a0c <_printf_i+0x1b4>
 8000a52:	6862      	ldr	r2, [r4, #4]
 8000a54:	60a2      	str	r2, [r4, #8]
 8000a56:	212d      	movs	r1, #45	; 0x2d
 8000a58:	2a00      	cmp	r2, #0
 8000a5a:	f1c5 0500 	rsb	r5, r5, #0
 8000a5e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000a62:	db02      	blt.n	8000a6a <_printf_i+0x212>
 8000a64:	f023 0304 	bic.w	r3, r3, #4
 8000a68:	6023      	str	r3, [r4, #0]
 8000a6a:	f8df c094 	ldr.w	ip, [pc, #148]	; 8000b00 <_printf_i+0x2a8>
 8000a6e:	260a      	movs	r6, #10
 8000a70:	4682      	mov	sl, r0
 8000a72:	fbb5 f3f6 	udiv	r3, r5, r6
 8000a76:	fb06 5113 	mls	r1, r6, r3, r5
 8000a7a:	462a      	mov	r2, r5
 8000a7c:	f81c 1001 	ldrb.w	r1, [ip, r1]
 8000a80:	f80a 1d01 	strb.w	r1, [sl, #-1]!
 8000a84:	42b2      	cmp	r2, r6
 8000a86:	461d      	mov	r5, r3
 8000a88:	d2f3      	bcs.n	8000a72 <_printf_i+0x21a>
 8000a8a:	2e08      	cmp	r6, #8
 8000a8c:	d199      	bne.n	80009c2 <_printf_i+0x16a>
 8000a8e:	6823      	ldr	r3, [r4, #0]
 8000a90:	07d9      	lsls	r1, r3, #31
 8000a92:	d596      	bpl.n	80009c2 <_printf_i+0x16a>
 8000a94:	6862      	ldr	r2, [r4, #4]
 8000a96:	6923      	ldr	r3, [r4, #16]
 8000a98:	429a      	cmp	r2, r3
 8000a9a:	dc92      	bgt.n	80009c2 <_printf_i+0x16a>
 8000a9c:	2330      	movs	r3, #48	; 0x30
 8000a9e:	f80a 3c01 	strb.w	r3, [sl, #-1]
 8000aa2:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8000aa6:	e78c      	b.n	80009c2 <_printf_i+0x16a>
 8000aa8:	6815      	ldr	r5, [r2, #0]
 8000aaa:	e7bc      	b.n	8000a26 <_printf_i+0x1ce>
 8000aac:	2d00      	cmp	r5, #0
 8000aae:	d1df      	bne.n	8000a70 <_printf_i+0x218>
 8000ab0:	f89c 3000 	ldrb.w	r3, [ip]
 8000ab4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000ab8:	f104 0a42 	add.w	sl, r4, #66	; 0x42
 8000abc:	e77f      	b.n	80009be <_printf_i+0x166>
 8000abe:	2610      	movs	r6, #16
 8000ac0:	e76d      	b.n	800099e <_printf_i+0x146>
 8000ac2:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000ac6:	680b      	ldr	r3, [r1, #0]
 8000ac8:	f103 0504 	add.w	r5, r3, #4
 8000acc:	600d      	str	r5, [r1, #0]
 8000ace:	bf0c      	ite	eq
 8000ad0:	681d      	ldreq	r5, [r3, #0]
 8000ad2:	881d      	ldrhne	r5, [r3, #0]
 8000ad4:	e75d      	b.n	8000992 <_printf_i+0x13a>
 8000ad6:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000ada:	680b      	ldr	r3, [r1, #0]
 8000adc:	6962      	ldr	r2, [r4, #20]
 8000ade:	f103 0504 	add.w	r5, r3, #4
 8000ae2:	600d      	str	r5, [r1, #0]
 8000ae4:	681b      	ldr	r3, [r3, #0]
 8000ae6:	bf14      	ite	ne
 8000ae8:	801a      	strhne	r2, [r3, #0]
 8000aea:	601a      	streq	r2, [r3, #0]
 8000aec:	e6f5      	b.n	80008da <_printf_i+0x82>
 8000aee:	680a      	ldr	r2, [r1, #0]
 8000af0:	f9b2 5000 	ldrsh.w	r5, [r2]
 8000af4:	3204      	adds	r2, #4
 8000af6:	600a      	str	r2, [r1, #0]
 8000af8:	462a      	mov	r2, r5
 8000afa:	e73c      	b.n	8000976 <_printf_i+0x11e>
 8000afc:	6860      	ldr	r0, [r4, #4]
 8000afe:	e77f      	b.n	8000a00 <_printf_i+0x1a8>
 8000b00:	080060c0 	.word	0x080060c0
 8000b04:	080060d4 	.word	0x080060d4

08000b08 <srand>:
 8000b08:	b538      	push	{r3, r4, r5, lr}
 8000b0a:	4b12      	ldr	r3, [pc, #72]	; (8000b54 <srand+0x4c>)
 8000b0c:	681d      	ldr	r5, [r3, #0]
 8000b0e:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8000b10:	4604      	mov	r4, r0
 8000b12:	b11a      	cbz	r2, 8000b1c <srand+0x14>
 8000b14:	2300      	movs	r3, #0
 8000b16:	e9c2 4304 	strd	r4, r3, [r2, #16]
 8000b1a:	bd38      	pop	{r3, r4, r5, pc}
 8000b1c:	2018      	movs	r0, #24
 8000b1e:	f000 fde7 	bl	80016f0 <malloc>
 8000b22:	4602      	mov	r2, r0
 8000b24:	63a8      	str	r0, [r5, #56]	; 0x38
 8000b26:	b178      	cbz	r0, 8000b48 <srand+0x40>
 8000b28:	2001      	movs	r0, #1
 8000b2a:	2100      	movs	r1, #0
 8000b2c:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8000b30:	4b09      	ldr	r3, [pc, #36]	; (8000b58 <srand+0x50>)
 8000b32:	480a      	ldr	r0, [pc, #40]	; (8000b5c <srand+0x54>)
 8000b34:	490a      	ldr	r1, [pc, #40]	; (8000b60 <srand+0x58>)
 8000b36:	6091      	str	r1, [r2, #8]
 8000b38:	e9c2 0300 	strd	r0, r3, [r2]
 8000b3c:	230b      	movs	r3, #11
 8000b3e:	8193      	strh	r3, [r2, #12]
 8000b40:	2300      	movs	r3, #0
 8000b42:	e9c2 4304 	strd	r4, r3, [r2, #16]
 8000b46:	bd38      	pop	{r3, r4, r5, pc}
 8000b48:	4b06      	ldr	r3, [pc, #24]	; (8000b64 <srand+0x5c>)
 8000b4a:	4807      	ldr	r0, [pc, #28]	; (8000b68 <srand+0x60>)
 8000b4c:	2142      	movs	r1, #66	; 0x42
 8000b4e:	f7ff fb63 	bl	8000218 <__assert_func>
 8000b52:	bf00      	nop
 8000b54:	20000000 	.word	0x20000000
 8000b58:	e66d1234 	.word	0xe66d1234
 8000b5c:	abcd330e 	.word	0xabcd330e
 8000b60:	0005deec 	.word	0x0005deec
 8000b64:	080060e8 	.word	0x080060e8
 8000b68:	08006100 	.word	0x08006100

08000b6c <rand>:
 8000b6c:	4b1c      	ldr	r3, [pc, #112]	; (8000be0 <rand+0x74>)
 8000b6e:	b510      	push	{r4, lr}
 8000b70:	681c      	ldr	r4, [r3, #0]
 8000b72:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8000b74:	b18a      	cbz	r2, 8000b9a <rand+0x2e>
 8000b76:	6913      	ldr	r3, [r2, #16]
 8000b78:	491a      	ldr	r1, [pc, #104]	; (8000be4 <rand+0x78>)
 8000b7a:	6954      	ldr	r4, [r2, #20]
 8000b7c:	481a      	ldr	r0, [pc, #104]	; (8000be8 <rand+0x7c>)
 8000b7e:	fb03 f101 	mul.w	r1, r3, r1
 8000b82:	fb00 1104 	mla	r1, r0, r4, r1
 8000b86:	fba3 3000 	umull	r3, r0, r3, r0
 8000b8a:	3301      	adds	r3, #1
 8000b8c:	eb41 0100 	adc.w	r1, r1, r0
 8000b90:	e9c2 3104 	strd	r3, r1, [r2, #16]
 8000b94:	f021 4000 	bic.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bd10      	pop	{r4, pc}
 8000b9a:	2018      	movs	r0, #24
 8000b9c:	f000 fda8 	bl	80016f0 <malloc>
 8000ba0:	4602      	mov	r2, r0
 8000ba2:	63a0      	str	r0, [r4, #56]	; 0x38
 8000ba4:	b188      	cbz	r0, 8000bca <rand+0x5e>
 8000ba6:	4c11      	ldr	r4, [pc, #68]	; (8000bec <rand+0x80>)
 8000ba8:	4b11      	ldr	r3, [pc, #68]	; (8000bf0 <rand+0x84>)
 8000baa:	480e      	ldr	r0, [pc, #56]	; (8000be4 <rand+0x78>)
 8000bac:	4911      	ldr	r1, [pc, #68]	; (8000bf4 <rand+0x88>)
 8000bae:	6091      	str	r1, [r2, #8]
 8000bb0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8000bd8 <rand+0x6c>
 8000bb4:	e9c2 4300 	strd	r4, r3, [r2]
 8000bb8:	230b      	movs	r3, #11
 8000bba:	8193      	strh	r3, [r2, #12]
 8000bbc:	4b0e      	ldr	r3, [pc, #56]	; (8000bf8 <rand+0x8c>)
 8000bbe:	4601      	mov	r1, r0
 8000bc0:	ed82 7b04 	vstr	d7, [r2, #16]
 8000bc4:	e9c2 3104 	strd	r3, r1, [r2, #16]
 8000bc8:	bd10      	pop	{r4, pc}
 8000bca:	4b0c      	ldr	r3, [pc, #48]	; (8000bfc <rand+0x90>)
 8000bcc:	480c      	ldr	r0, [pc, #48]	; (8000c00 <rand+0x94>)
 8000bce:	214e      	movs	r1, #78	; 0x4e
 8000bd0:	f7ff fb22 	bl	8000218 <__assert_func>
 8000bd4:	f3af 8000 	nop.w
 8000bd8:	00000001 	.word	0x00000001
 8000bdc:	00000000 	.word	0x00000000
 8000be0:	20000000 	.word	0x20000000
 8000be4:	5851f42d 	.word	0x5851f42d
 8000be8:	4c957f2d 	.word	0x4c957f2d
 8000bec:	abcd330e 	.word	0xabcd330e
 8000bf0:	e66d1234 	.word	0xe66d1234
 8000bf4:	0005deec 	.word	0x0005deec
 8000bf8:	4c957f2e 	.word	0x4c957f2e
 8000bfc:	080060e8 	.word	0x080060e8
 8000c00:	08006100 	.word	0x08006100

08000c04 <time>:
 8000c04:	b510      	push	{r4, lr}
 8000c06:	4b0a      	ldr	r3, [pc, #40]	; (8000c30 <time+0x2c>)
 8000c08:	b084      	sub	sp, #16
 8000c0a:	4669      	mov	r1, sp
 8000c0c:	4604      	mov	r4, r0
 8000c0e:	2200      	movs	r2, #0
 8000c10:	6818      	ldr	r0, [r3, #0]
 8000c12:	f000 fcc9 	bl	80015a8 <_gettimeofday_r>
 8000c16:	2800      	cmp	r0, #0
 8000c18:	bfae      	itee	ge
 8000c1a:	e9dd 0100 	ldrdge	r0, r1, [sp]
 8000c1e:	f04f 30ff 	movlt.w	r0, #4294967295	; 0xffffffff
 8000c22:	f04f 31ff 	movlt.w	r1, #4294967295	; 0xffffffff
 8000c26:	b10c      	cbz	r4, 8000c2c <time+0x28>
 8000c28:	e9c4 0100 	strd	r0, r1, [r4]
 8000c2c:	b004      	add	sp, #16
 8000c2e:	bd10      	pop	{r4, pc}
 8000c30:	20000000 	.word	0x20000000

08000c34 <__swbuf_r>:
 8000c34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c36:	460d      	mov	r5, r1
 8000c38:	4614      	mov	r4, r2
 8000c3a:	4606      	mov	r6, r0
 8000c3c:	b108      	cbz	r0, 8000c42 <__swbuf_r+0xe>
 8000c3e:	6983      	ldr	r3, [r0, #24]
 8000c40:	b343      	cbz	r3, 8000c94 <__swbuf_r+0x60>
 8000c42:	4b25      	ldr	r3, [pc, #148]	; (8000cd8 <__swbuf_r+0xa4>)
 8000c44:	429c      	cmp	r4, r3
 8000c46:	d02a      	beq.n	8000c9e <__swbuf_r+0x6a>
 8000c48:	4b24      	ldr	r3, [pc, #144]	; (8000cdc <__swbuf_r+0xa8>)
 8000c4a:	429c      	cmp	r4, r3
 8000c4c:	d029      	beq.n	8000ca2 <__swbuf_r+0x6e>
 8000c4e:	4b24      	ldr	r3, [pc, #144]	; (8000ce0 <__swbuf_r+0xac>)
 8000c50:	429c      	cmp	r4, r3
 8000c52:	bf08      	it	eq
 8000c54:	68f4      	ldreq	r4, [r6, #12]
 8000c56:	89a3      	ldrh	r3, [r4, #12]
 8000c58:	69a2      	ldr	r2, [r4, #24]
 8000c5a:	60a2      	str	r2, [r4, #8]
 8000c5c:	071a      	lsls	r2, r3, #28
 8000c5e:	d522      	bpl.n	8000ca6 <__swbuf_r+0x72>
 8000c60:	6923      	ldr	r3, [r4, #16]
 8000c62:	b303      	cbz	r3, 8000ca6 <__swbuf_r+0x72>
 8000c64:	6822      	ldr	r2, [r4, #0]
 8000c66:	6961      	ldr	r1, [r4, #20]
 8000c68:	1ad3      	subs	r3, r2, r3
 8000c6a:	b2ed      	uxtb	r5, r5
 8000c6c:	4299      	cmp	r1, r3
 8000c6e:	462f      	mov	r7, r5
 8000c70:	dd29      	ble.n	8000cc6 <__swbuf_r+0x92>
 8000c72:	3301      	adds	r3, #1
 8000c74:	68a1      	ldr	r1, [r4, #8]
 8000c76:	3901      	subs	r1, #1
 8000c78:	60a1      	str	r1, [r4, #8]
 8000c7a:	1c51      	adds	r1, r2, #1
 8000c7c:	6021      	str	r1, [r4, #0]
 8000c7e:	7015      	strb	r5, [r2, #0]
 8000c80:	6962      	ldr	r2, [r4, #20]
 8000c82:	429a      	cmp	r2, r3
 8000c84:	d016      	beq.n	8000cb4 <__swbuf_r+0x80>
 8000c86:	89a3      	ldrh	r3, [r4, #12]
 8000c88:	07db      	lsls	r3, r3, #31
 8000c8a:	d501      	bpl.n	8000c90 <__swbuf_r+0x5c>
 8000c8c:	2d0a      	cmp	r5, #10
 8000c8e:	d011      	beq.n	8000cb4 <__swbuf_r+0x80>
 8000c90:	4638      	mov	r0, r7
 8000c92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c94:	f000 faac 	bl	80011f0 <__sinit>
 8000c98:	4b0f      	ldr	r3, [pc, #60]	; (8000cd8 <__swbuf_r+0xa4>)
 8000c9a:	429c      	cmp	r4, r3
 8000c9c:	d1d4      	bne.n	8000c48 <__swbuf_r+0x14>
 8000c9e:	6874      	ldr	r4, [r6, #4]
 8000ca0:	e7d9      	b.n	8000c56 <__swbuf_r+0x22>
 8000ca2:	68b4      	ldr	r4, [r6, #8]
 8000ca4:	e7d7      	b.n	8000c56 <__swbuf_r+0x22>
 8000ca6:	4621      	mov	r1, r4
 8000ca8:	4630      	mov	r0, r6
 8000caa:	f000 f827 	bl	8000cfc <__swsetup_r>
 8000cae:	b938      	cbnz	r0, 8000cc0 <__swbuf_r+0x8c>
 8000cb0:	6923      	ldr	r3, [r4, #16]
 8000cb2:	e7d7      	b.n	8000c64 <__swbuf_r+0x30>
 8000cb4:	4621      	mov	r1, r4
 8000cb6:	4630      	mov	r0, r6
 8000cb8:	f000 f934 	bl	8000f24 <_fflush_r>
 8000cbc:	2800      	cmp	r0, #0
 8000cbe:	d0e7      	beq.n	8000c90 <__swbuf_r+0x5c>
 8000cc0:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000cc4:	e7e4      	b.n	8000c90 <__swbuf_r+0x5c>
 8000cc6:	4621      	mov	r1, r4
 8000cc8:	4630      	mov	r0, r6
 8000cca:	f000 f92b 	bl	8000f24 <_fflush_r>
 8000cce:	2800      	cmp	r0, #0
 8000cd0:	d1f6      	bne.n	8000cc0 <__swbuf_r+0x8c>
 8000cd2:	6822      	ldr	r2, [r4, #0]
 8000cd4:	2301      	movs	r3, #1
 8000cd6:	e7cd      	b.n	8000c74 <__swbuf_r+0x40>
 8000cd8:	08005f28 	.word	0x08005f28
 8000cdc:	08005f08 	.word	0x08005f08
 8000ce0:	08005ee8 	.word	0x08005ee8

08000ce4 <__swbuf>:
 8000ce4:	b410      	push	{r4}
 8000ce6:	4c04      	ldr	r4, [pc, #16]	; (8000cf8 <__swbuf+0x14>)
 8000ce8:	4603      	mov	r3, r0
 8000cea:	460a      	mov	r2, r1
 8000cec:	6820      	ldr	r0, [r4, #0]
 8000cee:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cf2:	4619      	mov	r1, r3
 8000cf4:	f7ff bf9e 	b.w	8000c34 <__swbuf_r>
 8000cf8:	20000000 	.word	0x20000000

08000cfc <__swsetup_r>:
 8000cfc:	4b3c      	ldr	r3, [pc, #240]	; (8000df0 <__swsetup_r+0xf4>)
 8000cfe:	b570      	push	{r4, r5, r6, lr}
 8000d00:	681d      	ldr	r5, [r3, #0]
 8000d02:	4606      	mov	r6, r0
 8000d04:	460c      	mov	r4, r1
 8000d06:	b10d      	cbz	r5, 8000d0c <__swsetup_r+0x10>
 8000d08:	69ab      	ldr	r3, [r5, #24]
 8000d0a:	b1e3      	cbz	r3, 8000d46 <__swsetup_r+0x4a>
 8000d0c:	4b39      	ldr	r3, [pc, #228]	; (8000df4 <__swsetup_r+0xf8>)
 8000d0e:	429c      	cmp	r4, r3
 8000d10:	d01f      	beq.n	8000d52 <__swsetup_r+0x56>
 8000d12:	4b39      	ldr	r3, [pc, #228]	; (8000df8 <__swsetup_r+0xfc>)
 8000d14:	429c      	cmp	r4, r3
 8000d16:	d04d      	beq.n	8000db4 <__swsetup_r+0xb8>
 8000d18:	4b38      	ldr	r3, [pc, #224]	; (8000dfc <__swsetup_r+0x100>)
 8000d1a:	429c      	cmp	r4, r3
 8000d1c:	bf08      	it	eq
 8000d1e:	68ec      	ldreq	r4, [r5, #12]
 8000d20:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d24:	0718      	lsls	r0, r3, #28
 8000d26:	b29a      	uxth	r2, r3
 8000d28:	d519      	bpl.n	8000d5e <__swsetup_r+0x62>
 8000d2a:	6921      	ldr	r1, [r4, #16]
 8000d2c:	b311      	cbz	r1, 8000d74 <__swsetup_r+0x78>
 8000d2e:	f012 0001 	ands.w	r0, r2, #1
 8000d32:	d02f      	beq.n	8000d94 <__swsetup_r+0x98>
 8000d34:	2000      	movs	r0, #0
 8000d36:	60a0      	str	r0, [r4, #8]
 8000d38:	6960      	ldr	r0, [r4, #20]
 8000d3a:	4240      	negs	r0, r0
 8000d3c:	61a0      	str	r0, [r4, #24]
 8000d3e:	2900      	cmp	r1, #0
 8000d40:	d02e      	beq.n	8000da0 <__swsetup_r+0xa4>
 8000d42:	2000      	movs	r0, #0
 8000d44:	bd70      	pop	{r4, r5, r6, pc}
 8000d46:	4628      	mov	r0, r5
 8000d48:	f000 fa52 	bl	80011f0 <__sinit>
 8000d4c:	4b29      	ldr	r3, [pc, #164]	; (8000df4 <__swsetup_r+0xf8>)
 8000d4e:	429c      	cmp	r4, r3
 8000d50:	d1df      	bne.n	8000d12 <__swsetup_r+0x16>
 8000d52:	686c      	ldr	r4, [r5, #4]
 8000d54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d58:	0718      	lsls	r0, r3, #28
 8000d5a:	b29a      	uxth	r2, r3
 8000d5c:	d4e5      	bmi.n	8000d2a <__swsetup_r+0x2e>
 8000d5e:	06d1      	lsls	r1, r2, #27
 8000d60:	d53e      	bpl.n	8000de0 <__swsetup_r+0xe4>
 8000d62:	0752      	lsls	r2, r2, #29
 8000d64:	d428      	bmi.n	8000db8 <__swsetup_r+0xbc>
 8000d66:	6921      	ldr	r1, [r4, #16]
 8000d68:	f043 0308 	orr.w	r3, r3, #8
 8000d6c:	81a3      	strh	r3, [r4, #12]
 8000d6e:	b29a      	uxth	r2, r3
 8000d70:	2900      	cmp	r1, #0
 8000d72:	d1dc      	bne.n	8000d2e <__swsetup_r+0x32>
 8000d74:	f402 7020 	and.w	r0, r2, #640	; 0x280
 8000d78:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8000d7c:	d0d7      	beq.n	8000d2e <__swsetup_r+0x32>
 8000d7e:	4621      	mov	r1, r4
 8000d80:	4630      	mov	r0, r6
 8000d82:	f000 fc27 	bl	80015d4 <__smakebuf_r>
 8000d86:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d8a:	6921      	ldr	r1, [r4, #16]
 8000d8c:	b29a      	uxth	r2, r3
 8000d8e:	f012 0001 	ands.w	r0, r2, #1
 8000d92:	d1cf      	bne.n	8000d34 <__swsetup_r+0x38>
 8000d94:	0795      	lsls	r5, r2, #30
 8000d96:	bf58      	it	pl
 8000d98:	6960      	ldrpl	r0, [r4, #20]
 8000d9a:	60a0      	str	r0, [r4, #8]
 8000d9c:	2900      	cmp	r1, #0
 8000d9e:	d1d0      	bne.n	8000d42 <__swsetup_r+0x46>
 8000da0:	0612      	lsls	r2, r2, #24
 8000da2:	bf58      	it	pl
 8000da4:	4608      	movpl	r0, r1
 8000da6:	d5cd      	bpl.n	8000d44 <__swsetup_r+0x48>
 8000da8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000dac:	81a3      	strh	r3, [r4, #12]
 8000dae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000db2:	bd70      	pop	{r4, r5, r6, pc}
 8000db4:	68ac      	ldr	r4, [r5, #8]
 8000db6:	e7b3      	b.n	8000d20 <__swsetup_r+0x24>
 8000db8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000dba:	b151      	cbz	r1, 8000dd2 <__swsetup_r+0xd6>
 8000dbc:	f104 0244 	add.w	r2, r4, #68	; 0x44
 8000dc0:	4291      	cmp	r1, r2
 8000dc2:	d004      	beq.n	8000dce <__swsetup_r+0xd2>
 8000dc4:	4630      	mov	r0, r6
 8000dc6:	f000 fe09 	bl	80019dc <_free_r>
 8000dca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000dce:	2200      	movs	r2, #0
 8000dd0:	6362      	str	r2, [r4, #52]	; 0x34
 8000dd2:	6921      	ldr	r1, [r4, #16]
 8000dd4:	2200      	movs	r2, #0
 8000dd6:	e9c4 1200 	strd	r1, r2, [r4]
 8000dda:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000dde:	e7c3      	b.n	8000d68 <__swsetup_r+0x6c>
 8000de0:	2209      	movs	r2, #9
 8000de2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000de6:	6032      	str	r2, [r6, #0]
 8000de8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000dec:	81a3      	strh	r3, [r4, #12]
 8000dee:	bd70      	pop	{r4, r5, r6, pc}
 8000df0:	20000000 	.word	0x20000000
 8000df4:	08005f28 	.word	0x08005f28
 8000df8:	08005f08 	.word	0x08005f08
 8000dfc:	08005ee8 	.word	0x08005ee8

08000e00 <abort>:
 8000e00:	b508      	push	{r3, lr}
 8000e02:	2006      	movs	r0, #6
 8000e04:	f000 ff74 	bl	8001cf0 <raise>
 8000e08:	2001      	movs	r0, #1
 8000e0a:	f004 ff17 	bl	8005c3c <_exit>
 8000e0e:	bf00      	nop

08000e10 <__sflush_r>:
 8000e10:	898b      	ldrh	r3, [r1, #12]
 8000e12:	071a      	lsls	r2, r3, #28
 8000e14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e18:	460c      	mov	r4, r1
 8000e1a:	4680      	mov	r8, r0
 8000e1c:	d43f      	bmi.n	8000e9e <__sflush_r+0x8e>
 8000e1e:	684a      	ldr	r2, [r1, #4]
 8000e20:	2a00      	cmp	r2, #0
 8000e22:	dd58      	ble.n	8000ed6 <__sflush_r+0xc6>
 8000e24:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e26:	2e00      	cmp	r6, #0
 8000e28:	d052      	beq.n	8000ed0 <__sflush_r+0xc0>
 8000e2a:	2200      	movs	r2, #0
 8000e2c:	f8d8 5000 	ldr.w	r5, [r8]
 8000e30:	f8c8 2000 	str.w	r2, [r8]
 8000e34:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
 8000e38:	d151      	bne.n	8000ede <__sflush_r+0xce>
 8000e3a:	2301      	movs	r3, #1
 8000e3c:	6a21      	ldr	r1, [r4, #32]
 8000e3e:	4640      	mov	r0, r8
 8000e40:	47b0      	blx	r6
 8000e42:	1c43      	adds	r3, r0, #1
 8000e44:	d05e      	beq.n	8000f04 <__sflush_r+0xf4>
 8000e46:	89a3      	ldrh	r3, [r4, #12]
 8000e48:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e4a:	075f      	lsls	r7, r3, #29
 8000e4c:	d505      	bpl.n	8000e5a <__sflush_r+0x4a>
 8000e4e:	6863      	ldr	r3, [r4, #4]
 8000e50:	1ac0      	subs	r0, r0, r3
 8000e52:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000e54:	b10b      	cbz	r3, 8000e5a <__sflush_r+0x4a>
 8000e56:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000e58:	1ac0      	subs	r0, r0, r3
 8000e5a:	6a21      	ldr	r1, [r4, #32]
 8000e5c:	4602      	mov	r2, r0
 8000e5e:	2300      	movs	r3, #0
 8000e60:	4640      	mov	r0, r8
 8000e62:	47b0      	blx	r6
 8000e64:	1c41      	adds	r1, r0, #1
 8000e66:	d13c      	bne.n	8000ee2 <__sflush_r+0xd2>
 8000e68:	f8d8 3000 	ldr.w	r3, [r8]
 8000e6c:	2b00      	cmp	r3, #0
 8000e6e:	d038      	beq.n	8000ee2 <__sflush_r+0xd2>
 8000e70:	2b1d      	cmp	r3, #29
 8000e72:	d001      	beq.n	8000e78 <__sflush_r+0x68>
 8000e74:	2b16      	cmp	r3, #22
 8000e76:	d14d      	bne.n	8000f14 <__sflush_r+0x104>
 8000e78:	6923      	ldr	r3, [r4, #16]
 8000e7a:	2200      	movs	r2, #0
 8000e7c:	e9c4 3200 	strd	r3, r2, [r4]
 8000e80:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000e82:	f8c8 5000 	str.w	r5, [r8]
 8000e86:	b319      	cbz	r1, 8000ed0 <__sflush_r+0xc0>
 8000e88:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000e8c:	4299      	cmp	r1, r3
 8000e8e:	d002      	beq.n	8000e96 <__sflush_r+0x86>
 8000e90:	4640      	mov	r0, r8
 8000e92:	f000 fda3 	bl	80019dc <_free_r>
 8000e96:	2000      	movs	r0, #0
 8000e98:	6360      	str	r0, [r4, #52]	; 0x34
 8000e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e9e:	690e      	ldr	r6, [r1, #16]
 8000ea0:	b1b6      	cbz	r6, 8000ed0 <__sflush_r+0xc0>
 8000ea2:	680d      	ldr	r5, [r1, #0]
 8000ea4:	600e      	str	r6, [r1, #0]
 8000ea6:	079a      	lsls	r2, r3, #30
 8000ea8:	bf0c      	ite	eq
 8000eaa:	694b      	ldreq	r3, [r1, #20]
 8000eac:	2300      	movne	r3, #0
 8000eae:	1bad      	subs	r5, r5, r6
 8000eb0:	608b      	str	r3, [r1, #8]
 8000eb2:	e00b      	b.n	8000ecc <__sflush_r+0xbc>
 8000eb4:	462b      	mov	r3, r5
 8000eb6:	4632      	mov	r2, r6
 8000eb8:	6a21      	ldr	r1, [r4, #32]
 8000eba:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 8000ebc:	4640      	mov	r0, r8
 8000ebe:	47b8      	blx	r7
 8000ec0:	f1b0 0c00 	subs.w	ip, r0, #0
 8000ec4:	eba5 050c 	sub.w	r5, r5, ip
 8000ec8:	4466      	add	r6, ip
 8000eca:	dd13      	ble.n	8000ef4 <__sflush_r+0xe4>
 8000ecc:	2d00      	cmp	r5, #0
 8000ece:	dcf1      	bgt.n	8000eb4 <__sflush_r+0xa4>
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ed6:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8000ed8:	2a00      	cmp	r2, #0
 8000eda:	dca3      	bgt.n	8000e24 <__sflush_r+0x14>
 8000edc:	e7f8      	b.n	8000ed0 <__sflush_r+0xc0>
 8000ede:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000ee0:	e7b3      	b.n	8000e4a <__sflush_r+0x3a>
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	6063      	str	r3, [r4, #4]
 8000ee6:	6923      	ldr	r3, [r4, #16]
 8000ee8:	6023      	str	r3, [r4, #0]
 8000eea:	89a3      	ldrh	r3, [r4, #12]
 8000eec:	04db      	lsls	r3, r3, #19
 8000eee:	d5c7      	bpl.n	8000e80 <__sflush_r+0x70>
 8000ef0:	6560      	str	r0, [r4, #84]	; 0x54
 8000ef2:	e7c5      	b.n	8000e80 <__sflush_r+0x70>
 8000ef4:	89a3      	ldrh	r3, [r4, #12]
 8000ef6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000efa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000efe:	81a3      	strh	r3, [r4, #12]
 8000f00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f04:	f8d8 3000 	ldr.w	r3, [r8]
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	d09c      	beq.n	8000e46 <__sflush_r+0x36>
 8000f0c:	2b1d      	cmp	r3, #29
 8000f0e:	d006      	beq.n	8000f1e <__sflush_r+0x10e>
 8000f10:	2b16      	cmp	r3, #22
 8000f12:	d004      	beq.n	8000f1e <__sflush_r+0x10e>
 8000f14:	89a3      	ldrh	r3, [r4, #12]
 8000f16:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f1a:	81a3      	strh	r3, [r4, #12]
 8000f1c:	e7d9      	b.n	8000ed2 <__sflush_r+0xc2>
 8000f1e:	f8c8 5000 	str.w	r5, [r8]
 8000f22:	e7d5      	b.n	8000ed0 <__sflush_r+0xc0>

08000f24 <_fflush_r>:
 8000f24:	b538      	push	{r3, r4, r5, lr}
 8000f26:	690b      	ldr	r3, [r1, #16]
 8000f28:	b1bb      	cbz	r3, 8000f5a <_fflush_r+0x36>
 8000f2a:	460d      	mov	r5, r1
 8000f2c:	4604      	mov	r4, r0
 8000f2e:	b108      	cbz	r0, 8000f34 <_fflush_r+0x10>
 8000f30:	6983      	ldr	r3, [r0, #24]
 8000f32:	b1b3      	cbz	r3, 8000f62 <_fflush_r+0x3e>
 8000f34:	4b0d      	ldr	r3, [pc, #52]	; (8000f6c <_fflush_r+0x48>)
 8000f36:	429d      	cmp	r5, r3
 8000f38:	d011      	beq.n	8000f5e <_fflush_r+0x3a>
 8000f3a:	4b0d      	ldr	r3, [pc, #52]	; (8000f70 <_fflush_r+0x4c>)
 8000f3c:	429d      	cmp	r5, r3
 8000f3e:	d013      	beq.n	8000f68 <_fflush_r+0x44>
 8000f40:	4b0c      	ldr	r3, [pc, #48]	; (8000f74 <_fflush_r+0x50>)
 8000f42:	429d      	cmp	r5, r3
 8000f44:	bf08      	it	eq
 8000f46:	68e5      	ldreq	r5, [r4, #12]
 8000f48:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
 8000f4c:	b12b      	cbz	r3, 8000f5a <_fflush_r+0x36>
 8000f4e:	4629      	mov	r1, r5
 8000f50:	4620      	mov	r0, r4
 8000f52:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000f56:	f7ff bf5b 	b.w	8000e10 <__sflush_r>
 8000f5a:	2000      	movs	r0, #0
 8000f5c:	bd38      	pop	{r3, r4, r5, pc}
 8000f5e:	6865      	ldr	r5, [r4, #4]
 8000f60:	e7f2      	b.n	8000f48 <_fflush_r+0x24>
 8000f62:	f000 f945 	bl	80011f0 <__sinit>
 8000f66:	e7e5      	b.n	8000f34 <_fflush_r+0x10>
 8000f68:	68a5      	ldr	r5, [r4, #8]
 8000f6a:	e7ed      	b.n	8000f48 <_fflush_r+0x24>
 8000f6c:	08005f28 	.word	0x08005f28
 8000f70:	08005f08 	.word	0x08005f08
 8000f74:	08005ee8 	.word	0x08005ee8

08000f78 <fflush>:
 8000f78:	b538      	push	{r3, r4, r5, lr}
 8000f7a:	b340      	cbz	r0, 8000fce <fflush+0x56>
 8000f7c:	6903      	ldr	r3, [r0, #16]
 8000f7e:	4604      	mov	r4, r0
 8000f80:	b1e3      	cbz	r3, 8000fbc <fflush+0x44>
 8000f82:	4b17      	ldr	r3, [pc, #92]	; (8000fe0 <fflush+0x68>)
 8000f84:	681d      	ldr	r5, [r3, #0]
 8000f86:	b10d      	cbz	r5, 8000f8c <fflush+0x14>
 8000f88:	69ab      	ldr	r3, [r5, #24]
 8000f8a:	b1cb      	cbz	r3, 8000fc0 <fflush+0x48>
 8000f8c:	4b15      	ldr	r3, [pc, #84]	; (8000fe4 <fflush+0x6c>)
 8000f8e:	429c      	cmp	r4, r3
 8000f90:	d00f      	beq.n	8000fb2 <fflush+0x3a>
 8000f92:	4b15      	ldr	r3, [pc, #84]	; (8000fe8 <fflush+0x70>)
 8000f94:	429c      	cmp	r4, r3
 8000f96:	d021      	beq.n	8000fdc <fflush+0x64>
 8000f98:	4b14      	ldr	r3, [pc, #80]	; (8000fec <fflush+0x74>)
 8000f9a:	429c      	cmp	r4, r3
 8000f9c:	bf08      	it	eq
 8000f9e:	68ec      	ldreq	r4, [r5, #12]
 8000fa0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fa4:	b153      	cbz	r3, 8000fbc <fflush+0x44>
 8000fa6:	4621      	mov	r1, r4
 8000fa8:	4628      	mov	r0, r5
 8000faa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000fae:	f7ff bf2f 	b.w	8000e10 <__sflush_r>
 8000fb2:	686c      	ldr	r4, [r5, #4]
 8000fb4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	d1f4      	bne.n	8000fa6 <fflush+0x2e>
 8000fbc:	2000      	movs	r0, #0
 8000fbe:	bd38      	pop	{r3, r4, r5, pc}
 8000fc0:	4628      	mov	r0, r5
 8000fc2:	f000 f915 	bl	80011f0 <__sinit>
 8000fc6:	4b07      	ldr	r3, [pc, #28]	; (8000fe4 <fflush+0x6c>)
 8000fc8:	429c      	cmp	r4, r3
 8000fca:	d1e2      	bne.n	8000f92 <fflush+0x1a>
 8000fcc:	e7f1      	b.n	8000fb2 <fflush+0x3a>
 8000fce:	4b08      	ldr	r3, [pc, #32]	; (8000ff0 <fflush+0x78>)
 8000fd0:	4908      	ldr	r1, [pc, #32]	; (8000ff4 <fflush+0x7c>)
 8000fd2:	6818      	ldr	r0, [r3, #0]
 8000fd4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000fd8:	f000 bac2 	b.w	8001560 <_fwalk_reent>
 8000fdc:	68ac      	ldr	r4, [r5, #8]
 8000fde:	e7df      	b.n	8000fa0 <fflush+0x28>
 8000fe0:	20000000 	.word	0x20000000
 8000fe4:	08005f28 	.word	0x08005f28
 8000fe8:	08005f08 	.word	0x08005f08
 8000fec:	08005ee8 	.word	0x08005ee8
 8000ff0:	08005ee4 	.word	0x08005ee4
 8000ff4:	08000f25 	.word	0x08000f25

08000ff8 <__fp_lock>:
 8000ff8:	2000      	movs	r0, #0
 8000ffa:	4770      	bx	lr

08000ffc <_cleanup_r>:
 8000ffc:	4901      	ldr	r1, [pc, #4]	; (8001004 <_cleanup_r+0x8>)
 8000ffe:	f000 baaf 	b.w	8001560 <_fwalk_reent>
 8001002:	bf00      	nop
 8001004:	08000f25 	.word	0x08000f25

08001008 <__fp_unlock>:
 8001008:	2000      	movs	r0, #0
 800100a:	4770      	bx	lr

0800100c <__sfmoreglue>:
 800100c:	b570      	push	{r4, r5, r6, lr}
 800100e:	2268      	movs	r2, #104	; 0x68
 8001010:	1e4d      	subs	r5, r1, #1
 8001012:	fb02 f505 	mul.w	r5, r2, r5
 8001016:	460e      	mov	r6, r1
 8001018:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800101c:	f000 fd40 	bl	8001aa0 <_malloc_r>
 8001020:	4604      	mov	r4, r0
 8001022:	b140      	cbz	r0, 8001036 <__sfmoreglue+0x2a>
 8001024:	2100      	movs	r1, #0
 8001026:	300c      	adds	r0, #12
 8001028:	e9c4 1600 	strd	r1, r6, [r4]
 800102c:	60a0      	str	r0, [r4, #8]
 800102e:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8001032:	f7ff f995 	bl	8000360 <memset>
 8001036:	4620      	mov	r0, r4
 8001038:	bd70      	pop	{r4, r5, r6, pc}
 800103a:	bf00      	nop

0800103c <__sfp>:
 800103c:	4b27      	ldr	r3, [pc, #156]	; (80010dc <__sfp+0xa0>)
 800103e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001042:	681e      	ldr	r6, [r3, #0]
 8001044:	69b3      	ldr	r3, [r6, #24]
 8001046:	4607      	mov	r7, r0
 8001048:	b353      	cbz	r3, 80010a0 <__sfp+0x64>
 800104a:	3648      	adds	r6, #72	; 0x48
 800104c:	f04f 0804 	mov.w	r8, #4
 8001050:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8001054:	3b01      	subs	r3, #1
 8001056:	d504      	bpl.n	8001062 <__sfp+0x26>
 8001058:	e01e      	b.n	8001098 <__sfp+0x5c>
 800105a:	1c5a      	adds	r2, r3, #1
 800105c:	f104 0468 	add.w	r4, r4, #104	; 0x68
 8001060:	d01a      	beq.n	8001098 <__sfp+0x5c>
 8001062:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001066:	3b01      	subs	r3, #1
 8001068:	2d00      	cmp	r5, #0
 800106a:	d1f6      	bne.n	800105a <__sfp+0x1e>
 800106c:	4b1c      	ldr	r3, [pc, #112]	; (80010e0 <__sfp+0xa4>)
 800106e:	6665      	str	r5, [r4, #100]	; 0x64
 8001070:	e9c4 5500 	strd	r5, r5, [r4]
 8001074:	e9c4 5302 	strd	r5, r3, [r4, #8]
 8001078:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800107c:	61a5      	str	r5, [r4, #24]
 800107e:	2208      	movs	r2, #8
 8001080:	4629      	mov	r1, r5
 8001082:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001086:	f7ff f96b 	bl	8000360 <memset>
 800108a:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800108e:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8001092:	4620      	mov	r0, r4
 8001094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001098:	6835      	ldr	r5, [r6, #0]
 800109a:	b12d      	cbz	r5, 80010a8 <__sfp+0x6c>
 800109c:	462e      	mov	r6, r5
 800109e:	e7d7      	b.n	8001050 <__sfp+0x14>
 80010a0:	4630      	mov	r0, r6
 80010a2:	f000 f81f 	bl	80010e4 <__sinit.part.0>
 80010a6:	e7d0      	b.n	800104a <__sfp+0xe>
 80010a8:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
 80010ac:	4638      	mov	r0, r7
 80010ae:	f000 fcf7 	bl	8001aa0 <_malloc_r>
 80010b2:	4604      	mov	r4, r0
 80010b4:	b168      	cbz	r0, 80010d2 <__sfp+0x96>
 80010b6:	6005      	str	r5, [r0, #0]
 80010b8:	f8c0 8004 	str.w	r8, [r0, #4]
 80010bc:	300c      	adds	r0, #12
 80010be:	4629      	mov	r1, r5
 80010c0:	60a0      	str	r0, [r4, #8]
 80010c2:	4625      	mov	r5, r4
 80010c4:	f44f 72d0 	mov.w	r2, #416	; 0x1a0
 80010c8:	f7ff f94a 	bl	8000360 <memset>
 80010cc:	6034      	str	r4, [r6, #0]
 80010ce:	462e      	mov	r6, r5
 80010d0:	e7be      	b.n	8001050 <__sfp+0x14>
 80010d2:	230c      	movs	r3, #12
 80010d4:	6030      	str	r0, [r6, #0]
 80010d6:	603b      	str	r3, [r7, #0]
 80010d8:	e7db      	b.n	8001092 <__sfp+0x56>
 80010da:	bf00      	nop
 80010dc:	08005ee4 	.word	0x08005ee4
 80010e0:	ffff0001 	.word	0xffff0001

080010e4 <__sinit.part.0>:
 80010e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80010e8:	4b34      	ldr	r3, [pc, #208]	; (80011bc <__sinit.part.0+0xd8>)
 80010ea:	4935      	ldr	r1, [pc, #212]	; (80011c0 <__sinit.part.0+0xdc>)
 80010ec:	681a      	ldr	r2, [r3, #0]
 80010ee:	6281      	str	r1, [r0, #40]	; 0x28
 80010f0:	4290      	cmp	r0, r2
 80010f2:	f04f 0300 	mov.w	r3, #0
 80010f6:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80010fa:	6503      	str	r3, [r0, #80]	; 0x50
 80010fc:	bf04      	itt	eq
 80010fe:	2301      	moveq	r3, #1
 8001100:	6183      	streq	r3, [r0, #24]
 8001102:	4605      	mov	r5, r0
 8001104:	f7ff ff9a 	bl	800103c <__sfp>
 8001108:	6068      	str	r0, [r5, #4]
 800110a:	4628      	mov	r0, r5
 800110c:	f7ff ff96 	bl	800103c <__sfp>
 8001110:	60a8      	str	r0, [r5, #8]
 8001112:	4628      	mov	r0, r5
 8001114:	f7ff ff92 	bl	800103c <__sfp>
 8001118:	686f      	ldr	r7, [r5, #4]
 800111a:	60e8      	str	r0, [r5, #12]
 800111c:	2400      	movs	r4, #0
 800111e:	2304      	movs	r3, #4
 8001120:	e9c7 4302 	strd	r4, r3, [r7, #8]
 8001124:	2208      	movs	r2, #8
 8001126:	4621      	mov	r1, r4
 8001128:	e9c7 4400 	strd	r4, r4, [r7]
 800112c:	e9c7 4404 	strd	r4, r4, [r7, #16]
 8001130:	667c      	str	r4, [r7, #100]	; 0x64
 8001132:	61bc      	str	r4, [r7, #24]
 8001134:	f107 005c 	add.w	r0, r7, #92	; 0x5c
 8001138:	f7ff f912 	bl	8000360 <memset>
 800113c:	f8df b08c 	ldr.w	fp, [pc, #140]	; 80011cc <__sinit.part.0+0xe8>
 8001140:	68ae      	ldr	r6, [r5, #8]
 8001142:	f8df a08c 	ldr.w	sl, [pc, #140]	; 80011d0 <__sinit.part.0+0xec>
 8001146:	f8df 908c 	ldr.w	r9, [pc, #140]	; 80011d4 <__sinit.part.0+0xf0>
 800114a:	f8df 808c 	ldr.w	r8, [pc, #140]	; 80011d8 <__sinit.part.0+0xf4>
 800114e:	4b1d      	ldr	r3, [pc, #116]	; (80011c4 <__sinit.part.0+0xe0>)
 8001150:	f8c7 a028 	str.w	sl, [r7, #40]	; 0x28
 8001154:	e9c7 7b08 	strd	r7, fp, [r7, #32]
 8001158:	f8c7 902c 	str.w	r9, [r7, #44]	; 0x2c
 800115c:	f8c7 8030 	str.w	r8, [r7, #48]	; 0x30
 8001160:	2208      	movs	r2, #8
 8001162:	60f3      	str	r3, [r6, #12]
 8001164:	e9c6 4400 	strd	r4, r4, [r6]
 8001168:	e9c6 4404 	strd	r4, r4, [r6, #16]
 800116c:	6674      	str	r4, [r6, #100]	; 0x64
 800116e:	60b4      	str	r4, [r6, #8]
 8001170:	61b4      	str	r4, [r6, #24]
 8001172:	4621      	mov	r1, r4
 8001174:	f106 005c 	add.w	r0, r6, #92	; 0x5c
 8001178:	f7ff f8f2 	bl	8000360 <memset>
 800117c:	e9c6 6b08 	strd	r6, fp, [r6, #32]
 8001180:	e9c6 a90a 	strd	sl, r9, [r6, #40]	; 0x28
 8001184:	f8c6 8030 	str.w	r8, [r6, #48]	; 0x30
 8001188:	68ee      	ldr	r6, [r5, #12]
 800118a:	4b0f      	ldr	r3, [pc, #60]	; (80011c8 <__sinit.part.0+0xe4>)
 800118c:	60f3      	str	r3, [r6, #12]
 800118e:	e9c6 4400 	strd	r4, r4, [r6]
 8001192:	e9c6 4404 	strd	r4, r4, [r6, #16]
 8001196:	6674      	str	r4, [r6, #100]	; 0x64
 8001198:	60b4      	str	r4, [r6, #8]
 800119a:	61b4      	str	r4, [r6, #24]
 800119c:	4621      	mov	r1, r4
 800119e:	2208      	movs	r2, #8
 80011a0:	f106 005c 	add.w	r0, r6, #92	; 0x5c
 80011a4:	f7ff f8dc 	bl	8000360 <memset>
 80011a8:	2301      	movs	r3, #1
 80011aa:	e9c6 6b08 	strd	r6, fp, [r6, #32]
 80011ae:	e9c6 980b 	strd	r9, r8, [r6, #44]	; 0x2c
 80011b2:	f8c6 a028 	str.w	sl, [r6, #40]	; 0x28
 80011b6:	61ab      	str	r3, [r5, #24]
 80011b8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80011bc:	08005ee4 	.word	0x08005ee4
 80011c0:	08000ffd 	.word	0x08000ffd
 80011c4:	00010009 	.word	0x00010009
 80011c8:	00020012 	.word	0x00020012
 80011cc:	08001e61 	.word	0x08001e61
 80011d0:	08001e89 	.word	0x08001e89
 80011d4:	08001ec9 	.word	0x08001ec9
 80011d8:	08001ee9 	.word	0x08001ee9

080011dc <_cleanup>:
 80011dc:	4b02      	ldr	r3, [pc, #8]	; (80011e8 <_cleanup+0xc>)
 80011de:	4903      	ldr	r1, [pc, #12]	; (80011ec <_cleanup+0x10>)
 80011e0:	6818      	ldr	r0, [r3, #0]
 80011e2:	f000 b9bd 	b.w	8001560 <_fwalk_reent>
 80011e6:	bf00      	nop
 80011e8:	08005ee4 	.word	0x08005ee4
 80011ec:	08000f25 	.word	0x08000f25

080011f0 <__sinit>:
 80011f0:	6983      	ldr	r3, [r0, #24]
 80011f2:	b903      	cbnz	r3, 80011f6 <__sinit+0x6>
 80011f4:	e776      	b.n	80010e4 <__sinit.part.0>
 80011f6:	4770      	bx	lr

080011f8 <__sfp_lock_acquire>:
 80011f8:	4770      	bx	lr
 80011fa:	bf00      	nop

080011fc <__sfp_lock_release>:
 80011fc:	4770      	bx	lr
 80011fe:	bf00      	nop

08001200 <__sinit_lock_acquire>:
 8001200:	4770      	bx	lr
 8001202:	bf00      	nop

08001204 <__sinit_lock_release>:
 8001204:	4770      	bx	lr
 8001206:	bf00      	nop

08001208 <__fp_lock_all>:
 8001208:	4b02      	ldr	r3, [pc, #8]	; (8001214 <__fp_lock_all+0xc>)
 800120a:	4903      	ldr	r1, [pc, #12]	; (8001218 <__fp_lock_all+0x10>)
 800120c:	6818      	ldr	r0, [r3, #0]
 800120e:	f000 b987 	b.w	8001520 <_fwalk>
 8001212:	bf00      	nop
 8001214:	20000000 	.word	0x20000000
 8001218:	08000ff9 	.word	0x08000ff9

0800121c <__fp_unlock_all>:
 800121c:	4b02      	ldr	r3, [pc, #8]	; (8001228 <__fp_unlock_all+0xc>)
 800121e:	4903      	ldr	r1, [pc, #12]	; (800122c <__fp_unlock_all+0x10>)
 8001220:	6818      	ldr	r0, [r3, #0]
 8001222:	f000 b97d 	b.w	8001520 <_fwalk>
 8001226:	bf00      	nop
 8001228:	20000000 	.word	0x20000000
 800122c:	08001009 	.word	0x08001009

08001230 <__sfvwrite_r>:
 8001230:	6893      	ldr	r3, [r2, #8]
 8001232:	2b00      	cmp	r3, #0
 8001234:	f000 8085 	beq.w	8001342 <__sfvwrite_r+0x112>
 8001238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800123c:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
 8001240:	460c      	mov	r4, r1
 8001242:	0719      	lsls	r1, r3, #28
 8001244:	4680      	mov	r8, r0
 8001246:	b083      	sub	sp, #12
 8001248:	4617      	mov	r7, r2
 800124a:	b298      	uxth	r0, r3
 800124c:	d525      	bpl.n	800129a <__sfvwrite_r+0x6a>
 800124e:	6923      	ldr	r3, [r4, #16]
 8001250:	b31b      	cbz	r3, 800129a <__sfvwrite_r+0x6a>
 8001252:	f010 0302 	ands.w	r3, r0, #2
 8001256:	683d      	ldr	r5, [r7, #0]
 8001258:	d02d      	beq.n	80012b6 <__sfvwrite_r+0x86>
 800125a:	f04f 0a00 	mov.w	sl, #0
 800125e:	f8df b2bc 	ldr.w	fp, [pc, #700]	; 800151c <__sfvwrite_r+0x2ec>
 8001262:	4656      	mov	r6, sl
 8001264:	46b9      	mov	r9, r7
 8001266:	455e      	cmp	r6, fp
 8001268:	4633      	mov	r3, r6
 800126a:	4652      	mov	r2, sl
 800126c:	bf28      	it	cs
 800126e:	465b      	movcs	r3, fp
 8001270:	4640      	mov	r0, r8
 8001272:	2e00      	cmp	r6, #0
 8001274:	d052      	beq.n	800131c <__sfvwrite_r+0xec>
 8001276:	6a21      	ldr	r1, [r4, #32]
 8001278:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 800127a:	47b8      	blx	r7
 800127c:	2800      	cmp	r0, #0
 800127e:	dd56      	ble.n	800132e <__sfvwrite_r+0xfe>
 8001280:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8001284:	1a1b      	subs	r3, r3, r0
 8001286:	4482      	add	sl, r0
 8001288:	1a36      	subs	r6, r6, r0
 800128a:	f8c9 3008 	str.w	r3, [r9, #8]
 800128e:	2b00      	cmp	r3, #0
 8001290:	d1e9      	bne.n	8001266 <__sfvwrite_r+0x36>
 8001292:	2000      	movs	r0, #0
 8001294:	b003      	add	sp, #12
 8001296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800129a:	4621      	mov	r1, r4
 800129c:	4640      	mov	r0, r8
 800129e:	f7ff fd2d 	bl	8000cfc <__swsetup_r>
 80012a2:	2800      	cmp	r0, #0
 80012a4:	f040 8136 	bne.w	8001514 <__sfvwrite_r+0x2e4>
 80012a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012ac:	683d      	ldr	r5, [r7, #0]
 80012ae:	b298      	uxth	r0, r3
 80012b0:	f010 0302 	ands.w	r3, r0, #2
 80012b4:	d1d1      	bne.n	800125a <__sfvwrite_r+0x2a>
 80012b6:	f010 0901 	ands.w	r9, r0, #1
 80012ba:	d144      	bne.n	8001346 <__sfvwrite_r+0x116>
 80012bc:	464e      	mov	r6, r9
 80012be:	9700      	str	r7, [sp, #0]
 80012c0:	b346      	cbz	r6, 8001314 <__sfvwrite_r+0xe4>
 80012c2:	0582      	lsls	r2, r0, #22
 80012c4:	f8d4 b008 	ldr.w	fp, [r4, #8]
 80012c8:	f140 8083 	bpl.w	80013d2 <__sfvwrite_r+0x1a2>
 80012cc:	45b3      	cmp	fp, r6
 80012ce:	465a      	mov	r2, fp
 80012d0:	f200 80b2 	bhi.w	8001438 <__sfvwrite_r+0x208>
 80012d4:	f410 6f90 	tst.w	r0, #1152	; 0x480
 80012d8:	f040 80bf 	bne.w	800145a <__sfvwrite_r+0x22a>
 80012dc:	6820      	ldr	r0, [r4, #0]
 80012de:	9201      	str	r2, [sp, #4]
 80012e0:	4649      	mov	r1, r9
 80012e2:	f000 faff 	bl	80018e4 <memmove>
 80012e6:	68a3      	ldr	r3, [r4, #8]
 80012e8:	9a01      	ldr	r2, [sp, #4]
 80012ea:	eba3 010b 	sub.w	r1, r3, fp
 80012ee:	6823      	ldr	r3, [r4, #0]
 80012f0:	60a1      	str	r1, [r4, #8]
 80012f2:	4413      	add	r3, r2
 80012f4:	46b2      	mov	sl, r6
 80012f6:	6023      	str	r3, [r4, #0]
 80012f8:	2600      	movs	r6, #0
 80012fa:	9b00      	ldr	r3, [sp, #0]
 80012fc:	6898      	ldr	r0, [r3, #8]
 80012fe:	eba0 000a 	sub.w	r0, r0, sl
 8001302:	44d1      	add	r9, sl
 8001304:	6098      	str	r0, [r3, #8]
 8001306:	2800      	cmp	r0, #0
 8001308:	d0c3      	beq.n	8001292 <__sfvwrite_r+0x62>
 800130a:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 800130e:	b280      	uxth	r0, r0
 8001310:	2e00      	cmp	r6, #0
 8001312:	d1d6      	bne.n	80012c2 <__sfvwrite_r+0x92>
 8001314:	e9d5 9600 	ldrd	r9, r6, [r5]
 8001318:	3508      	adds	r5, #8
 800131a:	e7d1      	b.n	80012c0 <__sfvwrite_r+0x90>
 800131c:	e9d5 a600 	ldrd	sl, r6, [r5]
 8001320:	3508      	adds	r5, #8
 8001322:	e7a0      	b.n	8001266 <__sfvwrite_r+0x36>
 8001324:	4621      	mov	r1, r4
 8001326:	4640      	mov	r0, r8
 8001328:	f7ff fdfc 	bl	8000f24 <_fflush_r>
 800132c:	b380      	cbz	r0, 8001390 <__sfvwrite_r+0x160>
 800132e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001332:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001336:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800133a:	81a3      	strh	r3, [r4, #12]
 800133c:	b003      	add	sp, #12
 800133e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001342:	2000      	movs	r0, #0
 8001344:	4770      	bx	lr
 8001346:	461e      	mov	r6, r3
 8001348:	46aa      	mov	sl, r5
 800134a:	4699      	mov	r9, r3
 800134c:	4618      	mov	r0, r3
 800134e:	461d      	mov	r5, r3
 8001350:	9700      	str	r7, [sp, #0]
 8001352:	b356      	cbz	r6, 80013aa <__sfvwrite_r+0x17a>
 8001354:	b388      	cbz	r0, 80013ba <__sfvwrite_r+0x18a>
 8001356:	464a      	mov	r2, r9
 8001358:	e9d4 1304 	ldrd	r1, r3, [r4, #16]
 800135c:	6820      	ldr	r0, [r4, #0]
 800135e:	42b2      	cmp	r2, r6
 8001360:	bf28      	it	cs
 8001362:	4632      	movcs	r2, r6
 8001364:	4288      	cmp	r0, r1
 8001366:	d905      	bls.n	8001374 <__sfvwrite_r+0x144>
 8001368:	68a1      	ldr	r1, [r4, #8]
 800136a:	eb03 0b01 	add.w	fp, r3, r1
 800136e:	455a      	cmp	r2, fp
 8001370:	f300 80a6 	bgt.w	80014c0 <__sfvwrite_r+0x290>
 8001374:	4293      	cmp	r3, r2
 8001376:	dc63      	bgt.n	8001440 <__sfvwrite_r+0x210>
 8001378:	6a21      	ldr	r1, [r4, #32]
 800137a:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 800137c:	462a      	mov	r2, r5
 800137e:	4640      	mov	r0, r8
 8001380:	47b8      	blx	r7
 8001382:	f1b0 0b00 	subs.w	fp, r0, #0
 8001386:	ddd2      	ble.n	800132e <__sfvwrite_r+0xfe>
 8001388:	ebb9 090b 	subs.w	r9, r9, fp
 800138c:	d0ca      	beq.n	8001324 <__sfvwrite_r+0xf4>
 800138e:	2001      	movs	r0, #1
 8001390:	9a00      	ldr	r2, [sp, #0]
 8001392:	6893      	ldr	r3, [r2, #8]
 8001394:	eba3 030b 	sub.w	r3, r3, fp
 8001398:	445d      	add	r5, fp
 800139a:	eba6 060b 	sub.w	r6, r6, fp
 800139e:	6093      	str	r3, [r2, #8]
 80013a0:	2b00      	cmp	r3, #0
 80013a2:	f43f af76 	beq.w	8001292 <__sfvwrite_r+0x62>
 80013a6:	2e00      	cmp	r6, #0
 80013a8:	d1d4      	bne.n	8001354 <__sfvwrite_r+0x124>
 80013aa:	f10a 0308 	add.w	r3, sl, #8
 80013ae:	e953 5602 	ldrd	r5, r6, [r3, #-8]
 80013b2:	469a      	mov	sl, r3
 80013b4:	3308      	adds	r3, #8
 80013b6:	2e00      	cmp	r6, #0
 80013b8:	d0f9      	beq.n	80013ae <__sfvwrite_r+0x17e>
 80013ba:	4632      	mov	r2, r6
 80013bc:	210a      	movs	r1, #10
 80013be:	4628      	mov	r0, r5
 80013c0:	f000 f9a6 	bl	8001710 <memchr>
 80013c4:	2800      	cmp	r0, #0
 80013c6:	f000 809c 	beq.w	8001502 <__sfvwrite_r+0x2d2>
 80013ca:	3001      	adds	r0, #1
 80013cc:	eba0 0905 	sub.w	r9, r0, r5
 80013d0:	e7c1      	b.n	8001356 <__sfvwrite_r+0x126>
 80013d2:	6820      	ldr	r0, [r4, #0]
 80013d4:	6923      	ldr	r3, [r4, #16]
 80013d6:	4298      	cmp	r0, r3
 80013d8:	d816      	bhi.n	8001408 <__sfvwrite_r+0x1d8>
 80013da:	6963      	ldr	r3, [r4, #20]
 80013dc:	42b3      	cmp	r3, r6
 80013de:	d813      	bhi.n	8001408 <__sfvwrite_r+0x1d8>
 80013e0:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 80013e4:	42b2      	cmp	r2, r6
 80013e6:	bf28      	it	cs
 80013e8:	4632      	movcs	r2, r6
 80013ea:	6a21      	ldr	r1, [r4, #32]
 80013ec:	fb92 f2f3 	sdiv	r2, r2, r3
 80013f0:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 80013f2:	fb02 f303 	mul.w	r3, r2, r3
 80013f6:	4640      	mov	r0, r8
 80013f8:	464a      	mov	r2, r9
 80013fa:	47b8      	blx	r7
 80013fc:	f1b0 0a00 	subs.w	sl, r0, #0
 8001400:	dd95      	ble.n	800132e <__sfvwrite_r+0xfe>
 8001402:	eba6 060a 	sub.w	r6, r6, sl
 8001406:	e778      	b.n	80012fa <__sfvwrite_r+0xca>
 8001408:	45b3      	cmp	fp, r6
 800140a:	46da      	mov	sl, fp
 800140c:	bf28      	it	cs
 800140e:	46b2      	movcs	sl, r6
 8001410:	4652      	mov	r2, sl
 8001412:	4649      	mov	r1, r9
 8001414:	f000 fa66 	bl	80018e4 <memmove>
 8001418:	68a3      	ldr	r3, [r4, #8]
 800141a:	6822      	ldr	r2, [r4, #0]
 800141c:	eba3 030a 	sub.w	r3, r3, sl
 8001420:	4452      	add	r2, sl
 8001422:	60a3      	str	r3, [r4, #8]
 8001424:	6022      	str	r2, [r4, #0]
 8001426:	2b00      	cmp	r3, #0
 8001428:	d1eb      	bne.n	8001402 <__sfvwrite_r+0x1d2>
 800142a:	4621      	mov	r1, r4
 800142c:	4640      	mov	r0, r8
 800142e:	f7ff fd79 	bl	8000f24 <_fflush_r>
 8001432:	2800      	cmp	r0, #0
 8001434:	d0e5      	beq.n	8001402 <__sfvwrite_r+0x1d2>
 8001436:	e77a      	b.n	800132e <__sfvwrite_r+0xfe>
 8001438:	6820      	ldr	r0, [r4, #0]
 800143a:	46b3      	mov	fp, r6
 800143c:	4632      	mov	r2, r6
 800143e:	e74e      	b.n	80012de <__sfvwrite_r+0xae>
 8001440:	4629      	mov	r1, r5
 8001442:	9201      	str	r2, [sp, #4]
 8001444:	f000 fa4e 	bl	80018e4 <memmove>
 8001448:	9a01      	ldr	r2, [sp, #4]
 800144a:	68a3      	ldr	r3, [r4, #8]
 800144c:	1a9b      	subs	r3, r3, r2
 800144e:	60a3      	str	r3, [r4, #8]
 8001450:	6823      	ldr	r3, [r4, #0]
 8001452:	4413      	add	r3, r2
 8001454:	6023      	str	r3, [r4, #0]
 8001456:	4693      	mov	fp, r2
 8001458:	e796      	b.n	8001388 <__sfvwrite_r+0x158>
 800145a:	6823      	ldr	r3, [r4, #0]
 800145c:	6921      	ldr	r1, [r4, #16]
 800145e:	eba3 0b01 	sub.w	fp, r3, r1
 8001462:	6963      	ldr	r3, [r4, #20]
 8001464:	eb03 0a43 	add.w	sl, r3, r3, lsl #1
 8001468:	eb0a 7ada 	add.w	sl, sl, sl, lsr #31
 800146c:	f10b 0301 	add.w	r3, fp, #1
 8001470:	ea4f 0a6a 	mov.w	sl, sl, asr #1
 8001474:	4433      	add	r3, r6
 8001476:	4553      	cmp	r3, sl
 8001478:	4652      	mov	r2, sl
 800147a:	bf84      	itt	hi
 800147c:	469a      	movhi	sl, r3
 800147e:	4652      	movhi	r2, sl
 8001480:	0543      	lsls	r3, r0, #21
 8001482:	d52c      	bpl.n	80014de <__sfvwrite_r+0x2ae>
 8001484:	4611      	mov	r1, r2
 8001486:	4640      	mov	r0, r8
 8001488:	f000 fb0a 	bl	8001aa0 <_malloc_r>
 800148c:	2800      	cmp	r0, #0
 800148e:	d03b      	beq.n	8001508 <__sfvwrite_r+0x2d8>
 8001490:	465a      	mov	r2, fp
 8001492:	6921      	ldr	r1, [r4, #16]
 8001494:	9001      	str	r0, [sp, #4]
 8001496:	f000 f98b 	bl	80017b0 <memcpy>
 800149a:	89a2      	ldrh	r2, [r4, #12]
 800149c:	9b01      	ldr	r3, [sp, #4]
 800149e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 80014a2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80014a6:	81a2      	strh	r2, [r4, #12]
 80014a8:	eb03 000b 	add.w	r0, r3, fp
 80014ac:	6123      	str	r3, [r4, #16]
 80014ae:	ebaa 030b 	sub.w	r3, sl, fp
 80014b2:	f8c4 a014 	str.w	sl, [r4, #20]
 80014b6:	60a3      	str	r3, [r4, #8]
 80014b8:	6020      	str	r0, [r4, #0]
 80014ba:	46b3      	mov	fp, r6
 80014bc:	4632      	mov	r2, r6
 80014be:	e70e      	b.n	80012de <__sfvwrite_r+0xae>
 80014c0:	4629      	mov	r1, r5
 80014c2:	465a      	mov	r2, fp
 80014c4:	f000 fa0e 	bl	80018e4 <memmove>
 80014c8:	6823      	ldr	r3, [r4, #0]
 80014ca:	445b      	add	r3, fp
 80014cc:	6023      	str	r3, [r4, #0]
 80014ce:	4621      	mov	r1, r4
 80014d0:	4640      	mov	r0, r8
 80014d2:	f7ff fd27 	bl	8000f24 <_fflush_r>
 80014d6:	2800      	cmp	r0, #0
 80014d8:	f43f af56 	beq.w	8001388 <__sfvwrite_r+0x158>
 80014dc:	e727      	b.n	800132e <__sfvwrite_r+0xfe>
 80014de:	4640      	mov	r0, r8
 80014e0:	f000 fb38 	bl	8001b54 <_realloc_r>
 80014e4:	4603      	mov	r3, r0
 80014e6:	2800      	cmp	r0, #0
 80014e8:	d1de      	bne.n	80014a8 <__sfvwrite_r+0x278>
 80014ea:	6921      	ldr	r1, [r4, #16]
 80014ec:	4640      	mov	r0, r8
 80014ee:	f000 fa75 	bl	80019dc <_free_r>
 80014f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014f6:	220c      	movs	r2, #12
 80014f8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80014fc:	f8c8 2000 	str.w	r2, [r8]
 8001500:	e717      	b.n	8001332 <__sfvwrite_r+0x102>
 8001502:	1c72      	adds	r2, r6, #1
 8001504:	4691      	mov	r9, r2
 8001506:	e727      	b.n	8001358 <__sfvwrite_r+0x128>
 8001508:	220c      	movs	r2, #12
 800150a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800150e:	f8c8 2000 	str.w	r2, [r8]
 8001512:	e70e      	b.n	8001332 <__sfvwrite_r+0x102>
 8001514:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001518:	e6bc      	b.n	8001294 <__sfvwrite_r+0x64>
 800151a:	bf00      	nop
 800151c:	7ffffc00 	.word	0x7ffffc00

08001520 <_fwalk>:
 8001520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001524:	4688      	mov	r8, r1
 8001526:	f100 0748 	add.w	r7, r0, #72	; 0x48
 800152a:	2600      	movs	r6, #0
 800152c:	e9d7 5401 	ldrd	r5, r4, [r7, #4]
 8001530:	3d01      	subs	r5, #1
 8001532:	d40f      	bmi.n	8001554 <_fwalk+0x34>
 8001534:	89a3      	ldrh	r3, [r4, #12]
 8001536:	2b01      	cmp	r3, #1
 8001538:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 800153c:	d906      	bls.n	800154c <_fwalk+0x2c>
 800153e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8001542:	3301      	adds	r3, #1
 8001544:	4620      	mov	r0, r4
 8001546:	d001      	beq.n	800154c <_fwalk+0x2c>
 8001548:	47c0      	blx	r8
 800154a:	4306      	orrs	r6, r0
 800154c:	1c6b      	adds	r3, r5, #1
 800154e:	f104 0468 	add.w	r4, r4, #104	; 0x68
 8001552:	d1ef      	bne.n	8001534 <_fwalk+0x14>
 8001554:	683f      	ldr	r7, [r7, #0]
 8001556:	2f00      	cmp	r7, #0
 8001558:	d1e8      	bne.n	800152c <_fwalk+0xc>
 800155a:	4630      	mov	r0, r6
 800155c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001560 <_fwalk_reent>:
 8001560:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001564:	4607      	mov	r7, r0
 8001566:	4688      	mov	r8, r1
 8001568:	f100 0648 	add.w	r6, r0, #72	; 0x48
 800156c:	f04f 0900 	mov.w	r9, #0
 8001570:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
 8001574:	3d01      	subs	r5, #1
 8001576:	d411      	bmi.n	800159c <_fwalk_reent+0x3c>
 8001578:	89a3      	ldrh	r3, [r4, #12]
 800157a:	2b01      	cmp	r3, #1
 800157c:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8001580:	d908      	bls.n	8001594 <_fwalk_reent+0x34>
 8001582:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8001586:	3301      	adds	r3, #1
 8001588:	4621      	mov	r1, r4
 800158a:	d003      	beq.n	8001594 <_fwalk_reent+0x34>
 800158c:	4638      	mov	r0, r7
 800158e:	47c0      	blx	r8
 8001590:	ea49 0900 	orr.w	r9, r9, r0
 8001594:	1c6b      	adds	r3, r5, #1
 8001596:	f104 0468 	add.w	r4, r4, #104	; 0x68
 800159a:	d1ed      	bne.n	8001578 <_fwalk_reent+0x18>
 800159c:	6836      	ldr	r6, [r6, #0]
 800159e:	2e00      	cmp	r6, #0
 80015a0:	d1e6      	bne.n	8001570 <_fwalk_reent+0x10>
 80015a2:	4648      	mov	r0, r9
 80015a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080015a8 <_gettimeofday_r>:
 80015a8:	b570      	push	{r4, r5, r6, lr}
 80015aa:	460c      	mov	r4, r1
 80015ac:	4d08      	ldr	r5, [pc, #32]	; (80015d0 <_gettimeofday_r+0x28>)
 80015ae:	4603      	mov	r3, r0
 80015b0:	2600      	movs	r6, #0
 80015b2:	4620      	mov	r0, r4
 80015b4:	4611      	mov	r1, r2
 80015b6:	461c      	mov	r4, r3
 80015b8:	602e      	str	r6, [r5, #0]
 80015ba:	f000 fd23 	bl	8002004 <_gettimeofday>
 80015be:	1c43      	adds	r3, r0, #1
 80015c0:	d000      	beq.n	80015c4 <_gettimeofday_r+0x1c>
 80015c2:	bd70      	pop	{r4, r5, r6, pc}
 80015c4:	682b      	ldr	r3, [r5, #0]
 80015c6:	2b00      	cmp	r3, #0
 80015c8:	d0fb      	beq.n	80015c2 <_gettimeofday_r+0x1a>
 80015ca:	6023      	str	r3, [r4, #0]
 80015cc:	bd70      	pop	{r4, r5, r6, pc}
 80015ce:	bf00      	nop
 80015d0:	2000012c 	.word	0x2000012c

080015d4 <__smakebuf_r>:
 80015d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015d6:	898b      	ldrh	r3, [r1, #12]
 80015d8:	460c      	mov	r4, r1
 80015da:	0799      	lsls	r1, r3, #30
 80015dc:	b097      	sub	sp, #92	; 0x5c
 80015de:	d507      	bpl.n	80015f0 <__smakebuf_r+0x1c>
 80015e0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80015e4:	2201      	movs	r2, #1
 80015e6:	e9c4 3204 	strd	r3, r2, [r4, #16]
 80015ea:	6023      	str	r3, [r4, #0]
 80015ec:	b017      	add	sp, #92	; 0x5c
 80015ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015f0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80015f4:	2900      	cmp	r1, #0
 80015f6:	4605      	mov	r5, r0
 80015f8:	db2d      	blt.n	8001656 <__smakebuf_r+0x82>
 80015fa:	466a      	mov	r2, sp
 80015fc:	f000 fca0 	bl	8001f40 <_fstat_r>
 8001600:	2800      	cmp	r0, #0
 8001602:	db27      	blt.n	8001654 <__smakebuf_r+0x80>
 8001604:	9e01      	ldr	r6, [sp, #4]
 8001606:	f406 4670 	and.w	r6, r6, #61440	; 0xf000
 800160a:	f44f 6780 	mov.w	r7, #1024	; 0x400
 800160e:	f5a6 5600 	sub.w	r6, r6, #8192	; 0x2000
 8001612:	fab6 f686 	clz	r6, r6
 8001616:	4639      	mov	r1, r7
 8001618:	4628      	mov	r0, r5
 800161a:	0976      	lsrs	r6, r6, #5
 800161c:	f000 fa40 	bl	8001aa0 <_malloc_r>
 8001620:	b330      	cbz	r0, 8001670 <__smakebuf_r+0x9c>
 8001622:	89a3      	ldrh	r3, [r4, #12]
 8001624:	4a1a      	ldr	r2, [pc, #104]	; (8001690 <__smakebuf_r+0xbc>)
 8001626:	62aa      	str	r2, [r5, #40]	; 0x28
 8001628:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800162c:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001630:	81a3      	strh	r3, [r4, #12]
 8001632:	6020      	str	r0, [r4, #0]
 8001634:	2e00      	cmp	r6, #0
 8001636:	d0d9      	beq.n	80015ec <__smakebuf_r+0x18>
 8001638:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800163c:	4628      	mov	r0, r5
 800163e:	f000 fc95 	bl	8001f6c <_isatty_r>
 8001642:	2800      	cmp	r0, #0
 8001644:	d0d2      	beq.n	80015ec <__smakebuf_r+0x18>
 8001646:	89a3      	ldrh	r3, [r4, #12]
 8001648:	f023 0303 	bic.w	r3, r3, #3
 800164c:	f043 0301 	orr.w	r3, r3, #1
 8001650:	81a3      	strh	r3, [r4, #12]
 8001652:	e7cb      	b.n	80015ec <__smakebuf_r+0x18>
 8001654:	89a3      	ldrh	r3, [r4, #12]
 8001656:	f013 0f80 	tst.w	r3, #128	; 0x80
 800165a:	bf14      	ite	ne
 800165c:	2740      	movne	r7, #64	; 0x40
 800165e:	f44f 6780 	moveq.w	r7, #1024	; 0x400
 8001662:	4639      	mov	r1, r7
 8001664:	4628      	mov	r0, r5
 8001666:	2600      	movs	r6, #0
 8001668:	f000 fa1a 	bl	8001aa0 <_malloc_r>
 800166c:	2800      	cmp	r0, #0
 800166e:	d1d8      	bne.n	8001622 <__smakebuf_r+0x4e>
 8001670:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001674:	059a      	lsls	r2, r3, #22
 8001676:	d4b9      	bmi.n	80015ec <__smakebuf_r+0x18>
 8001678:	f023 0303 	bic.w	r3, r3, #3
 800167c:	f104 0247 	add.w	r2, r4, #71	; 0x47
 8001680:	f043 0302 	orr.w	r3, r3, #2
 8001684:	2101      	movs	r1, #1
 8001686:	e9c4 2104 	strd	r2, r1, [r4, #16]
 800168a:	81a3      	strh	r3, [r4, #12]
 800168c:	6022      	str	r2, [r4, #0]
 800168e:	e7ad      	b.n	80015ec <__smakebuf_r+0x18>
 8001690:	08000ffd 	.word	0x08000ffd

08001694 <__swhatbuf_r>:
 8001694:	b570      	push	{r4, r5, r6, lr}
 8001696:	460c      	mov	r4, r1
 8001698:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800169c:	2900      	cmp	r1, #0
 800169e:	b096      	sub	sp, #88	; 0x58
 80016a0:	4616      	mov	r6, r2
 80016a2:	461d      	mov	r5, r3
 80016a4:	db13      	blt.n	80016ce <__swhatbuf_r+0x3a>
 80016a6:	466a      	mov	r2, sp
 80016a8:	f000 fc4a 	bl	8001f40 <_fstat_r>
 80016ac:	2800      	cmp	r0, #0
 80016ae:	db0e      	blt.n	80016ce <__swhatbuf_r+0x3a>
 80016b0:	9901      	ldr	r1, [sp, #4]
 80016b2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80016b6:	f5a1 5100 	sub.w	r1, r1, #8192	; 0x2000
 80016ba:	fab1 f181 	clz	r1, r1
 80016be:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80016c2:	0949      	lsrs	r1, r1, #5
 80016c4:	2000      	movs	r0, #0
 80016c6:	6029      	str	r1, [r5, #0]
 80016c8:	6033      	str	r3, [r6, #0]
 80016ca:	b016      	add	sp, #88	; 0x58
 80016cc:	bd70      	pop	{r4, r5, r6, pc}
 80016ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80016d2:	2200      	movs	r2, #0
 80016d4:	061b      	lsls	r3, r3, #24
 80016d6:	602a      	str	r2, [r5, #0]
 80016d8:	d504      	bpl.n	80016e4 <__swhatbuf_r+0x50>
 80016da:	2340      	movs	r3, #64	; 0x40
 80016dc:	2000      	movs	r0, #0
 80016de:	6033      	str	r3, [r6, #0]
 80016e0:	b016      	add	sp, #88	; 0x58
 80016e2:	bd70      	pop	{r4, r5, r6, pc}
 80016e4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80016e8:	2000      	movs	r0, #0
 80016ea:	6033      	str	r3, [r6, #0]
 80016ec:	b016      	add	sp, #88	; 0x58
 80016ee:	bd70      	pop	{r4, r5, r6, pc}

080016f0 <malloc>:
 80016f0:	4b02      	ldr	r3, [pc, #8]	; (80016fc <malloc+0xc>)
 80016f2:	4601      	mov	r1, r0
 80016f4:	6818      	ldr	r0, [r3, #0]
 80016f6:	f000 b9d3 	b.w	8001aa0 <_malloc_r>
 80016fa:	bf00      	nop
 80016fc:	20000000 	.word	0x20000000

08001700 <free>:
 8001700:	4b02      	ldr	r3, [pc, #8]	; (800170c <free+0xc>)
 8001702:	4601      	mov	r1, r0
 8001704:	6818      	ldr	r0, [r3, #0]
 8001706:	f000 b969 	b.w	80019dc <_free_r>
 800170a:	bf00      	nop
 800170c:	20000000 	.word	0x20000000

08001710 <memchr>:
 8001710:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8001714:	2a10      	cmp	r2, #16
 8001716:	db2b      	blt.n	8001770 <memchr+0x60>
 8001718:	f010 0f07 	tst.w	r0, #7
 800171c:	d008      	beq.n	8001730 <memchr+0x20>
 800171e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8001722:	3a01      	subs	r2, #1
 8001724:	428b      	cmp	r3, r1
 8001726:	d02d      	beq.n	8001784 <memchr+0x74>
 8001728:	f010 0f07 	tst.w	r0, #7
 800172c:	b342      	cbz	r2, 8001780 <memchr+0x70>
 800172e:	d1f6      	bne.n	800171e <memchr+0xe>
 8001730:	b4f0      	push	{r4, r5, r6, r7}
 8001732:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8001736:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800173a:	f022 0407 	bic.w	r4, r2, #7
 800173e:	f07f 0700 	mvns.w	r7, #0
 8001742:	2300      	movs	r3, #0
 8001744:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8001748:	3c08      	subs	r4, #8
 800174a:	ea85 0501 	eor.w	r5, r5, r1
 800174e:	ea86 0601 	eor.w	r6, r6, r1
 8001752:	fa85 f547 	uadd8	r5, r5, r7
 8001756:	faa3 f587 	sel	r5, r3, r7
 800175a:	fa86 f647 	uadd8	r6, r6, r7
 800175e:	faa5 f687 	sel	r6, r5, r7
 8001762:	b98e      	cbnz	r6, 8001788 <memchr+0x78>
 8001764:	d1ee      	bne.n	8001744 <memchr+0x34>
 8001766:	bcf0      	pop	{r4, r5, r6, r7}
 8001768:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800176c:	f002 0207 	and.w	r2, r2, #7
 8001770:	b132      	cbz	r2, 8001780 <memchr+0x70>
 8001772:	f810 3b01 	ldrb.w	r3, [r0], #1
 8001776:	3a01      	subs	r2, #1
 8001778:	ea83 0301 	eor.w	r3, r3, r1
 800177c:	b113      	cbz	r3, 8001784 <memchr+0x74>
 800177e:	d1f8      	bne.n	8001772 <memchr+0x62>
 8001780:	2000      	movs	r0, #0
 8001782:	4770      	bx	lr
 8001784:	3801      	subs	r0, #1
 8001786:	4770      	bx	lr
 8001788:	2d00      	cmp	r5, #0
 800178a:	bf06      	itte	eq
 800178c:	4635      	moveq	r5, r6
 800178e:	3803      	subeq	r0, #3
 8001790:	3807      	subne	r0, #7
 8001792:	f015 0f01 	tst.w	r5, #1
 8001796:	d107      	bne.n	80017a8 <memchr+0x98>
 8001798:	3001      	adds	r0, #1
 800179a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800179e:	bf02      	ittt	eq
 80017a0:	3001      	addeq	r0, #1
 80017a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80017a6:	3001      	addeq	r0, #1
 80017a8:	bcf0      	pop	{r4, r5, r6, r7}
 80017aa:	3801      	subs	r0, #1
 80017ac:	4770      	bx	lr
 80017ae:	bf00      	nop

080017b0 <memcpy>:
 80017b0:	4684      	mov	ip, r0
 80017b2:	ea41 0300 	orr.w	r3, r1, r0
 80017b6:	f013 0303 	ands.w	r3, r3, #3
 80017ba:	d16d      	bne.n	8001898 <memcpy+0xe8>
 80017bc:	3a40      	subs	r2, #64	; 0x40
 80017be:	d341      	bcc.n	8001844 <memcpy+0x94>
 80017c0:	f851 3b04 	ldr.w	r3, [r1], #4
 80017c4:	f840 3b04 	str.w	r3, [r0], #4
 80017c8:	f851 3b04 	ldr.w	r3, [r1], #4
 80017cc:	f840 3b04 	str.w	r3, [r0], #4
 80017d0:	f851 3b04 	ldr.w	r3, [r1], #4
 80017d4:	f840 3b04 	str.w	r3, [r0], #4
 80017d8:	f851 3b04 	ldr.w	r3, [r1], #4
 80017dc:	f840 3b04 	str.w	r3, [r0], #4
 80017e0:	f851 3b04 	ldr.w	r3, [r1], #4
 80017e4:	f840 3b04 	str.w	r3, [r0], #4
 80017e8:	f851 3b04 	ldr.w	r3, [r1], #4
 80017ec:	f840 3b04 	str.w	r3, [r0], #4
 80017f0:	f851 3b04 	ldr.w	r3, [r1], #4
 80017f4:	f840 3b04 	str.w	r3, [r0], #4
 80017f8:	f851 3b04 	ldr.w	r3, [r1], #4
 80017fc:	f840 3b04 	str.w	r3, [r0], #4
 8001800:	f851 3b04 	ldr.w	r3, [r1], #4
 8001804:	f840 3b04 	str.w	r3, [r0], #4
 8001808:	f851 3b04 	ldr.w	r3, [r1], #4
 800180c:	f840 3b04 	str.w	r3, [r0], #4
 8001810:	f851 3b04 	ldr.w	r3, [r1], #4
 8001814:	f840 3b04 	str.w	r3, [r0], #4
 8001818:	f851 3b04 	ldr.w	r3, [r1], #4
 800181c:	f840 3b04 	str.w	r3, [r0], #4
 8001820:	f851 3b04 	ldr.w	r3, [r1], #4
 8001824:	f840 3b04 	str.w	r3, [r0], #4
 8001828:	f851 3b04 	ldr.w	r3, [r1], #4
 800182c:	f840 3b04 	str.w	r3, [r0], #4
 8001830:	f851 3b04 	ldr.w	r3, [r1], #4
 8001834:	f840 3b04 	str.w	r3, [r0], #4
 8001838:	f851 3b04 	ldr.w	r3, [r1], #4
 800183c:	f840 3b04 	str.w	r3, [r0], #4
 8001840:	3a40      	subs	r2, #64	; 0x40
 8001842:	d2bd      	bcs.n	80017c0 <memcpy+0x10>
 8001844:	3230      	adds	r2, #48	; 0x30
 8001846:	d311      	bcc.n	800186c <memcpy+0xbc>
 8001848:	f851 3b04 	ldr.w	r3, [r1], #4
 800184c:	f840 3b04 	str.w	r3, [r0], #4
 8001850:	f851 3b04 	ldr.w	r3, [r1], #4
 8001854:	f840 3b04 	str.w	r3, [r0], #4
 8001858:	f851 3b04 	ldr.w	r3, [r1], #4
 800185c:	f840 3b04 	str.w	r3, [r0], #4
 8001860:	f851 3b04 	ldr.w	r3, [r1], #4
 8001864:	f840 3b04 	str.w	r3, [r0], #4
 8001868:	3a10      	subs	r2, #16
 800186a:	d2ed      	bcs.n	8001848 <memcpy+0x98>
 800186c:	320c      	adds	r2, #12
 800186e:	d305      	bcc.n	800187c <memcpy+0xcc>
 8001870:	f851 3b04 	ldr.w	r3, [r1], #4
 8001874:	f840 3b04 	str.w	r3, [r0], #4
 8001878:	3a04      	subs	r2, #4
 800187a:	d2f9      	bcs.n	8001870 <memcpy+0xc0>
 800187c:	3204      	adds	r2, #4
 800187e:	d008      	beq.n	8001892 <memcpy+0xe2>
 8001880:	07d2      	lsls	r2, r2, #31
 8001882:	bf1c      	itt	ne
 8001884:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8001888:	f800 3b01 	strbne.w	r3, [r0], #1
 800188c:	d301      	bcc.n	8001892 <memcpy+0xe2>
 800188e:	880b      	ldrh	r3, [r1, #0]
 8001890:	8003      	strh	r3, [r0, #0]
 8001892:	4660      	mov	r0, ip
 8001894:	4770      	bx	lr
 8001896:	bf00      	nop
 8001898:	2a08      	cmp	r2, #8
 800189a:	d313      	bcc.n	80018c4 <memcpy+0x114>
 800189c:	078b      	lsls	r3, r1, #30
 800189e:	d08d      	beq.n	80017bc <memcpy+0xc>
 80018a0:	f010 0303 	ands.w	r3, r0, #3
 80018a4:	d08a      	beq.n	80017bc <memcpy+0xc>
 80018a6:	f1c3 0304 	rsb	r3, r3, #4
 80018aa:	1ad2      	subs	r2, r2, r3
 80018ac:	07db      	lsls	r3, r3, #31
 80018ae:	bf1c      	itt	ne
 80018b0:	f811 3b01 	ldrbne.w	r3, [r1], #1
 80018b4:	f800 3b01 	strbne.w	r3, [r0], #1
 80018b8:	d380      	bcc.n	80017bc <memcpy+0xc>
 80018ba:	f831 3b02 	ldrh.w	r3, [r1], #2
 80018be:	f820 3b02 	strh.w	r3, [r0], #2
 80018c2:	e77b      	b.n	80017bc <memcpy+0xc>
 80018c4:	3a04      	subs	r2, #4
 80018c6:	d3d9      	bcc.n	800187c <memcpy+0xcc>
 80018c8:	3a01      	subs	r2, #1
 80018ca:	f811 3b01 	ldrb.w	r3, [r1], #1
 80018ce:	f800 3b01 	strb.w	r3, [r0], #1
 80018d2:	d2f9      	bcs.n	80018c8 <memcpy+0x118>
 80018d4:	780b      	ldrb	r3, [r1, #0]
 80018d6:	7003      	strb	r3, [r0, #0]
 80018d8:	784b      	ldrb	r3, [r1, #1]
 80018da:	7043      	strb	r3, [r0, #1]
 80018dc:	788b      	ldrb	r3, [r1, #2]
 80018de:	7083      	strb	r3, [r0, #2]
 80018e0:	4660      	mov	r0, ip
 80018e2:	4770      	bx	lr

080018e4 <memmove>:
 80018e4:	4288      	cmp	r0, r1
 80018e6:	d90d      	bls.n	8001904 <memmove+0x20>
 80018e8:	188b      	adds	r3, r1, r2
 80018ea:	4283      	cmp	r3, r0
 80018ec:	d90a      	bls.n	8001904 <memmove+0x20>
 80018ee:	eb00 0c02 	add.w	ip, r0, r2
 80018f2:	b1ba      	cbz	r2, 8001924 <memmove+0x40>
 80018f4:	4662      	mov	r2, ip
 80018f6:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
 80018fa:	f802 cd01 	strb.w	ip, [r2, #-1]!
 80018fe:	4299      	cmp	r1, r3
 8001900:	d1f9      	bne.n	80018f6 <memmove+0x12>
 8001902:	4770      	bx	lr
 8001904:	2a0f      	cmp	r2, #15
 8001906:	d80e      	bhi.n	8001926 <memmove+0x42>
 8001908:	4603      	mov	r3, r0
 800190a:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 800190e:	b14a      	cbz	r2, 8001924 <memmove+0x40>
 8001910:	f10c 0c01 	add.w	ip, ip, #1
 8001914:	3b01      	subs	r3, #1
 8001916:	448c      	add	ip, r1
 8001918:	f811 2b01 	ldrb.w	r2, [r1], #1
 800191c:	f803 2f01 	strb.w	r2, [r3, #1]!
 8001920:	4561      	cmp	r1, ip
 8001922:	d1f9      	bne.n	8001918 <memmove+0x34>
 8001924:	4770      	bx	lr
 8001926:	ea40 0301 	orr.w	r3, r0, r1
 800192a:	079b      	lsls	r3, r3, #30
 800192c:	d150      	bne.n	80019d0 <memmove+0xec>
 800192e:	f1a2 0310 	sub.w	r3, r2, #16
 8001932:	b570      	push	{r4, r5, r6, lr}
 8001934:	f101 0c20 	add.w	ip, r1, #32
 8001938:	f023 050f 	bic.w	r5, r3, #15
 800193c:	f101 0e10 	add.w	lr, r1, #16
 8001940:	f100 0410 	add.w	r4, r0, #16
 8001944:	44ac      	add	ip, r5
 8001946:	091b      	lsrs	r3, r3, #4
 8001948:	f85e 5c10 	ldr.w	r5, [lr, #-16]
 800194c:	f844 5c10 	str.w	r5, [r4, #-16]
 8001950:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
 8001954:	f844 5c0c 	str.w	r5, [r4, #-12]
 8001958:	f85e 5c08 	ldr.w	r5, [lr, #-8]
 800195c:	f844 5c08 	str.w	r5, [r4, #-8]
 8001960:	f85e 5c04 	ldr.w	r5, [lr, #-4]
 8001964:	f844 5c04 	str.w	r5, [r4, #-4]
 8001968:	f10e 0e10 	add.w	lr, lr, #16
 800196c:	45e6      	cmp	lr, ip
 800196e:	f104 0410 	add.w	r4, r4, #16
 8001972:	d1e9      	bne.n	8001948 <memmove+0x64>
 8001974:	3301      	adds	r3, #1
 8001976:	f012 0f0c 	tst.w	r2, #12
 800197a:	eb01 1103 	add.w	r1, r1, r3, lsl #4
 800197e:	f002 040f 	and.w	r4, r2, #15
 8001982:	eb00 1303 	add.w	r3, r0, r3, lsl #4
 8001986:	d027      	beq.n	80019d8 <memmove+0xf4>
 8001988:	3c04      	subs	r4, #4
 800198a:	f024 0603 	bic.w	r6, r4, #3
 800198e:	ea4f 0c94 	mov.w	ip, r4, lsr #2
 8001992:	441e      	add	r6, r3
 8001994:	1f1c      	subs	r4, r3, #4
 8001996:	468e      	mov	lr, r1
 8001998:	f85e 5b04 	ldr.w	r5, [lr], #4
 800199c:	f844 5f04 	str.w	r5, [r4, #4]!
 80019a0:	42b4      	cmp	r4, r6
 80019a2:	d1f9      	bne.n	8001998 <memmove+0xb4>
 80019a4:	f10c 0401 	add.w	r4, ip, #1
 80019a8:	f002 0203 	and.w	r2, r2, #3
 80019ac:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80019b0:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 80019b4:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 80019b8:	b14a      	cbz	r2, 80019ce <memmove+0xea>
 80019ba:	f10c 0c01 	add.w	ip, ip, #1
 80019be:	3b01      	subs	r3, #1
 80019c0:	448c      	add	ip, r1
 80019c2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80019c6:	f803 2f01 	strb.w	r2, [r3, #1]!
 80019ca:	4561      	cmp	r1, ip
 80019cc:	d1f9      	bne.n	80019c2 <memmove+0xde>
 80019ce:	bd70      	pop	{r4, r5, r6, pc}
 80019d0:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 80019d4:	4603      	mov	r3, r0
 80019d6:	e79b      	b.n	8001910 <memmove+0x2c>
 80019d8:	4622      	mov	r2, r4
 80019da:	e7eb      	b.n	80019b4 <memmove+0xd0>

080019dc <_free_r>:
 80019dc:	2900      	cmp	r1, #0
 80019de:	d058      	beq.n	8001a92 <_free_r+0xb6>
 80019e0:	b530      	push	{r4, r5, lr}
 80019e2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80019e6:	b083      	sub	sp, #12
 80019e8:	2b00      	cmp	r3, #0
 80019ea:	f1a1 0404 	sub.w	r4, r1, #4
 80019ee:	bfb8      	it	lt
 80019f0:	18e4      	addlt	r4, r4, r3
 80019f2:	9001      	str	r0, [sp, #4]
 80019f4:	f000 fae2 	bl	8001fbc <__malloc_lock>
 80019f8:	4a28      	ldr	r2, [pc, #160]	; (8001a9c <_free_r+0xc0>)
 80019fa:	9801      	ldr	r0, [sp, #4]
 80019fc:	6813      	ldr	r3, [r2, #0]
 80019fe:	b133      	cbz	r3, 8001a0e <_free_r+0x32>
 8001a00:	42a3      	cmp	r3, r4
 8001a02:	d90d      	bls.n	8001a20 <_free_r+0x44>
 8001a04:	6821      	ldr	r1, [r4, #0]
 8001a06:	eb04 0c01 	add.w	ip, r4, r1
 8001a0a:	4563      	cmp	r3, ip
 8001a0c:	d02f      	beq.n	8001a6e <_free_r+0x92>
 8001a0e:	6063      	str	r3, [r4, #4]
 8001a10:	6014      	str	r4, [r2, #0]
 8001a12:	b003      	add	sp, #12
 8001a14:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001a18:	f000 bad2 	b.w	8001fc0 <__malloc_unlock>
 8001a1c:	42a3      	cmp	r3, r4
 8001a1e:	d810      	bhi.n	8001a42 <_free_r+0x66>
 8001a20:	461a      	mov	r2, r3
 8001a22:	685b      	ldr	r3, [r3, #4]
 8001a24:	2b00      	cmp	r3, #0
 8001a26:	d1f9      	bne.n	8001a1c <_free_r+0x40>
 8001a28:	6811      	ldr	r1, [r2, #0]
 8001a2a:	eb02 0c01 	add.w	ip, r2, r1
 8001a2e:	4564      	cmp	r4, ip
 8001a30:	d019      	beq.n	8001a66 <_free_r+0x8a>
 8001a32:	d32f      	bcc.n	8001a94 <_free_r+0xb8>
 8001a34:	6063      	str	r3, [r4, #4]
 8001a36:	6054      	str	r4, [r2, #4]
 8001a38:	b003      	add	sp, #12
 8001a3a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001a3e:	f000 babf 	b.w	8001fc0 <__malloc_unlock>
 8001a42:	6811      	ldr	r1, [r2, #0]
 8001a44:	eb02 0c01 	add.w	ip, r2, r1
 8001a48:	45a4      	cmp	ip, r4
 8001a4a:	d016      	beq.n	8001a7a <_free_r+0x9e>
 8001a4c:	d822      	bhi.n	8001a94 <_free_r+0xb8>
 8001a4e:	6821      	ldr	r1, [r4, #0]
 8001a50:	eb04 0c01 	add.w	ip, r4, r1
 8001a54:	4563      	cmp	r3, ip
 8001a56:	d1ed      	bne.n	8001a34 <_free_r+0x58>
 8001a58:	681d      	ldr	r5, [r3, #0]
 8001a5a:	685b      	ldr	r3, [r3, #4]
 8001a5c:	4429      	add	r1, r5
 8001a5e:	e9c4 1300 	strd	r1, r3, [r4]
 8001a62:	6054      	str	r4, [r2, #4]
 8001a64:	e7d5      	b.n	8001a12 <_free_r+0x36>
 8001a66:	6823      	ldr	r3, [r4, #0]
 8001a68:	4419      	add	r1, r3
 8001a6a:	6011      	str	r1, [r2, #0]
 8001a6c:	e7d1      	b.n	8001a12 <_free_r+0x36>
 8001a6e:	681d      	ldr	r5, [r3, #0]
 8001a70:	685b      	ldr	r3, [r3, #4]
 8001a72:	4429      	add	r1, r5
 8001a74:	e9c4 1300 	strd	r1, r3, [r4]
 8001a78:	e7ca      	b.n	8001a10 <_free_r+0x34>
 8001a7a:	6824      	ldr	r4, [r4, #0]
 8001a7c:	4421      	add	r1, r4
 8001a7e:	1854      	adds	r4, r2, r1
 8001a80:	42a3      	cmp	r3, r4
 8001a82:	6011      	str	r1, [r2, #0]
 8001a84:	d1c5      	bne.n	8001a12 <_free_r+0x36>
 8001a86:	e9d3 4300 	ldrd	r4, r3, [r3]
 8001a8a:	4421      	add	r1, r4
 8001a8c:	e9c2 1300 	strd	r1, r3, [r2]
 8001a90:	e7bf      	b.n	8001a12 <_free_r+0x36>
 8001a92:	4770      	bx	lr
 8001a94:	230c      	movs	r3, #12
 8001a96:	6003      	str	r3, [r0, #0]
 8001a98:	e7bb      	b.n	8001a12 <_free_r+0x36>
 8001a9a:	bf00      	nop
 8001a9c:	20000124 	.word	0x20000124

08001aa0 <_malloc_r>:
 8001aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001aa2:	1ccd      	adds	r5, r1, #3
 8001aa4:	f025 0503 	bic.w	r5, r5, #3
 8001aa8:	3508      	adds	r5, #8
 8001aaa:	2d0c      	cmp	r5, #12
 8001aac:	bf38      	it	cc
 8001aae:	250c      	movcc	r5, #12
 8001ab0:	2d00      	cmp	r5, #0
 8001ab2:	4606      	mov	r6, r0
 8001ab4:	db23      	blt.n	8001afe <_malloc_r+0x5e>
 8001ab6:	42a9      	cmp	r1, r5
 8001ab8:	d821      	bhi.n	8001afe <_malloc_r+0x5e>
 8001aba:	4f25      	ldr	r7, [pc, #148]	; (8001b50 <_malloc_r+0xb0>)
 8001abc:	f000 fa7e 	bl	8001fbc <__malloc_lock>
 8001ac0:	683a      	ldr	r2, [r7, #0]
 8001ac2:	b322      	cbz	r2, 8001b0e <_malloc_r+0x6e>
 8001ac4:	4614      	mov	r4, r2
 8001ac6:	e003      	b.n	8001ad0 <_malloc_r+0x30>
 8001ac8:	6863      	ldr	r3, [r4, #4]
 8001aca:	4622      	mov	r2, r4
 8001acc:	b1fb      	cbz	r3, 8001b0e <_malloc_r+0x6e>
 8001ace:	461c      	mov	r4, r3
 8001ad0:	6823      	ldr	r3, [r4, #0]
 8001ad2:	1b5b      	subs	r3, r3, r5
 8001ad4:	d4f8      	bmi.n	8001ac8 <_malloc_r+0x28>
 8001ad6:	2b0b      	cmp	r3, #11
 8001ad8:	d815      	bhi.n	8001b06 <_malloc_r+0x66>
 8001ada:	6863      	ldr	r3, [r4, #4]
 8001adc:	4294      	cmp	r4, r2
 8001ade:	bf0c      	ite	eq
 8001ae0:	603b      	streq	r3, [r7, #0]
 8001ae2:	6053      	strne	r3, [r2, #4]
 8001ae4:	4630      	mov	r0, r6
 8001ae6:	f000 fa6b 	bl	8001fc0 <__malloc_unlock>
 8001aea:	f104 000b 	add.w	r0, r4, #11
 8001aee:	1d23      	adds	r3, r4, #4
 8001af0:	f020 0007 	bic.w	r0, r0, #7
 8001af4:	1ac2      	subs	r2, r0, r3
 8001af6:	d001      	beq.n	8001afc <_malloc_r+0x5c>
 8001af8:	1a1b      	subs	r3, r3, r0
 8001afa:	50a3      	str	r3, [r4, r2]
 8001afc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001afe:	230c      	movs	r3, #12
 8001b00:	6033      	str	r3, [r6, #0]
 8001b02:	2000      	movs	r0, #0
 8001b04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b06:	6023      	str	r3, [r4, #0]
 8001b08:	441c      	add	r4, r3
 8001b0a:	6025      	str	r5, [r4, #0]
 8001b0c:	e7ea      	b.n	8001ae4 <_malloc_r+0x44>
 8001b0e:	6879      	ldr	r1, [r7, #4]
 8001b10:	b1c9      	cbz	r1, 8001b46 <_malloc_r+0xa6>
 8001b12:	4629      	mov	r1, r5
 8001b14:	4630      	mov	r0, r6
 8001b16:	f000 f845 	bl	8001ba4 <_sbrk_r>
 8001b1a:	1c43      	adds	r3, r0, #1
 8001b1c:	d00c      	beq.n	8001b38 <_malloc_r+0x98>
 8001b1e:	1cc4      	adds	r4, r0, #3
 8001b20:	f024 0403 	bic.w	r4, r4, #3
 8001b24:	42a0      	cmp	r0, r4
 8001b26:	d005      	beq.n	8001b34 <_malloc_r+0x94>
 8001b28:	1a21      	subs	r1, r4, r0
 8001b2a:	4630      	mov	r0, r6
 8001b2c:	f000 f83a 	bl	8001ba4 <_sbrk_r>
 8001b30:	3001      	adds	r0, #1
 8001b32:	d001      	beq.n	8001b38 <_malloc_r+0x98>
 8001b34:	6025      	str	r5, [r4, #0]
 8001b36:	e7d5      	b.n	8001ae4 <_malloc_r+0x44>
 8001b38:	230c      	movs	r3, #12
 8001b3a:	4630      	mov	r0, r6
 8001b3c:	6033      	str	r3, [r6, #0]
 8001b3e:	f000 fa3f 	bl	8001fc0 <__malloc_unlock>
 8001b42:	2000      	movs	r0, #0
 8001b44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b46:	4630      	mov	r0, r6
 8001b48:	f000 f82c 	bl	8001ba4 <_sbrk_r>
 8001b4c:	6078      	str	r0, [r7, #4]
 8001b4e:	e7e0      	b.n	8001b12 <_malloc_r+0x72>
 8001b50:	20000124 	.word	0x20000124

08001b54 <_realloc_r>:
 8001b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001b56:	4614      	mov	r4, r2
 8001b58:	b1f9      	cbz	r1, 8001b9a <_realloc_r+0x46>
 8001b5a:	b1ca      	cbz	r2, 8001b90 <_realloc_r+0x3c>
 8001b5c:	4606      	mov	r6, r0
 8001b5e:	460d      	mov	r5, r1
 8001b60:	f000 fa30 	bl	8001fc4 <_malloc_usable_size_r>
 8001b64:	42a0      	cmp	r0, r4
 8001b66:	d302      	bcc.n	8001b6e <_realloc_r+0x1a>
 8001b68:	462f      	mov	r7, r5
 8001b6a:	4638      	mov	r0, r7
 8001b6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b6e:	4621      	mov	r1, r4
 8001b70:	4630      	mov	r0, r6
 8001b72:	f7ff ff95 	bl	8001aa0 <_malloc_r>
 8001b76:	4607      	mov	r7, r0
 8001b78:	2800      	cmp	r0, #0
 8001b7a:	d0f6      	beq.n	8001b6a <_realloc_r+0x16>
 8001b7c:	4622      	mov	r2, r4
 8001b7e:	4629      	mov	r1, r5
 8001b80:	f7ff fe16 	bl	80017b0 <memcpy>
 8001b84:	4630      	mov	r0, r6
 8001b86:	4629      	mov	r1, r5
 8001b88:	f7ff ff28 	bl	80019dc <_free_r>
 8001b8c:	4638      	mov	r0, r7
 8001b8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b90:	4627      	mov	r7, r4
 8001b92:	f7ff ff23 	bl	80019dc <_free_r>
 8001b96:	4638      	mov	r0, r7
 8001b98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b9a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8001b9e:	4611      	mov	r1, r2
 8001ba0:	f7ff bf7e 	b.w	8001aa0 <_malloc_r>

08001ba4 <_sbrk_r>:
 8001ba4:	b538      	push	{r3, r4, r5, lr}
 8001ba6:	4d07      	ldr	r5, [pc, #28]	; (8001bc4 <_sbrk_r+0x20>)
 8001ba8:	2200      	movs	r2, #0
 8001baa:	4604      	mov	r4, r0
 8001bac:	4608      	mov	r0, r1
 8001bae:	602a      	str	r2, [r5, #0]
 8001bb0:	f004 f874 	bl	8005c9c <_sbrk>
 8001bb4:	1c43      	adds	r3, r0, #1
 8001bb6:	d000      	beq.n	8001bba <_sbrk_r+0x16>
 8001bb8:	bd38      	pop	{r3, r4, r5, pc}
 8001bba:	682b      	ldr	r3, [r5, #0]
 8001bbc:	2b00      	cmp	r3, #0
 8001bbe:	d0fb      	beq.n	8001bb8 <_sbrk_r+0x14>
 8001bc0:	6023      	str	r3, [r4, #0]
 8001bc2:	bd38      	pop	{r3, r4, r5, pc}
 8001bc4:	2000012c 	.word	0x2000012c

08001bc8 <_init_signal_r>:
 8001bc8:	b538      	push	{r3, r4, r5, lr}
 8001bca:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8001bcc:	b10c      	cbz	r4, 8001bd2 <_init_signal_r+0xa>
 8001bce:	2000      	movs	r0, #0
 8001bd0:	bd38      	pop	{r3, r4, r5, pc}
 8001bd2:	2180      	movs	r1, #128	; 0x80
 8001bd4:	4605      	mov	r5, r0
 8001bd6:	f7ff ff63 	bl	8001aa0 <_malloc_r>
 8001bda:	4602      	mov	r2, r0
 8001bdc:	6468      	str	r0, [r5, #68]	; 0x44
 8001bde:	b130      	cbz	r0, 8001bee <_init_signal_r+0x26>
 8001be0:	1f03      	subs	r3, r0, #4
 8001be2:	327c      	adds	r2, #124	; 0x7c
 8001be4:	f843 4f04 	str.w	r4, [r3, #4]!
 8001be8:	4293      	cmp	r3, r2
 8001bea:	d1fb      	bne.n	8001be4 <_init_signal_r+0x1c>
 8001bec:	e7ef      	b.n	8001bce <_init_signal_r+0x6>
 8001bee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001bf2:	bd38      	pop	{r3, r4, r5, pc}

08001bf4 <_signal_r>:
 8001bf4:	291f      	cmp	r1, #31
 8001bf6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001bf8:	4605      	mov	r5, r0
 8001bfa:	d808      	bhi.n	8001c0e <_signal_r+0x1a>
 8001bfc:	6c46      	ldr	r6, [r0, #68]	; 0x44
 8001bfe:	460c      	mov	r4, r1
 8001c00:	4617      	mov	r7, r2
 8001c02:	b14e      	cbz	r6, 8001c18 <_signal_r+0x24>
 8001c04:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8001c08:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 8001c0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001c0e:	2316      	movs	r3, #22
 8001c10:	6003      	str	r3, [r0, #0]
 8001c12:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001c16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001c18:	2180      	movs	r1, #128	; 0x80
 8001c1a:	f7ff ff41 	bl	8001aa0 <_malloc_r>
 8001c1e:	4606      	mov	r6, r0
 8001c20:	6468      	str	r0, [r5, #68]	; 0x44
 8001c22:	b140      	cbz	r0, 8001c36 <_signal_r+0x42>
 8001c24:	1f03      	subs	r3, r0, #4
 8001c26:	f100 057c 	add.w	r5, r0, #124	; 0x7c
 8001c2a:	2100      	movs	r1, #0
 8001c2c:	f843 1f04 	str.w	r1, [r3, #4]!
 8001c30:	429d      	cmp	r5, r3
 8001c32:	d1fb      	bne.n	8001c2c <_signal_r+0x38>
 8001c34:	e7e6      	b.n	8001c04 <_signal_r+0x10>
 8001c36:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001c3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001c3c <_raise_r>:
 8001c3c:	291f      	cmp	r1, #31
 8001c3e:	b538      	push	{r3, r4, r5, lr}
 8001c40:	4605      	mov	r5, r0
 8001c42:	d820      	bhi.n	8001c86 <_raise_r+0x4a>
 8001c44:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8001c46:	460c      	mov	r4, r1
 8001c48:	b16a      	cbz	r2, 8001c66 <_raise_r+0x2a>
 8001c4a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8001c4e:	b153      	cbz	r3, 8001c66 <_raise_r+0x2a>
 8001c50:	2b01      	cmp	r3, #1
 8001c52:	d016      	beq.n	8001c82 <_raise_r+0x46>
 8001c54:	1c59      	adds	r1, r3, #1
 8001c56:	d010      	beq.n	8001c7a <_raise_r+0x3e>
 8001c58:	2500      	movs	r5, #0
 8001c5a:	4620      	mov	r0, r4
 8001c5c:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 8001c60:	4798      	blx	r3
 8001c62:	4628      	mov	r0, r5
 8001c64:	bd38      	pop	{r3, r4, r5, pc}
 8001c66:	4628      	mov	r0, r5
 8001c68:	f000 f8f8 	bl	8001e5c <_getpid_r>
 8001c6c:	4622      	mov	r2, r4
 8001c6e:	4601      	mov	r1, r0
 8001c70:	4628      	mov	r0, r5
 8001c72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001c76:	f000 b8db 	b.w	8001e30 <_kill_r>
 8001c7a:	2316      	movs	r3, #22
 8001c7c:	6003      	str	r3, [r0, #0]
 8001c7e:	2001      	movs	r0, #1
 8001c80:	bd38      	pop	{r3, r4, r5, pc}
 8001c82:	2000      	movs	r0, #0
 8001c84:	bd38      	pop	{r3, r4, r5, pc}
 8001c86:	2316      	movs	r3, #22
 8001c88:	6003      	str	r3, [r0, #0]
 8001c8a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001c8e:	bd38      	pop	{r3, r4, r5, pc}

08001c90 <__sigtramp_r>:
 8001c90:	291f      	cmp	r1, #31
 8001c92:	d82a      	bhi.n	8001cea <__sigtramp_r+0x5a>
 8001c94:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8001c96:	b538      	push	{r3, r4, r5, lr}
 8001c98:	460c      	mov	r4, r1
 8001c9a:	4605      	mov	r5, r0
 8001c9c:	b182      	cbz	r2, 8001cc0 <__sigtramp_r+0x30>
 8001c9e:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
 8001ca2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8001ca6:	b14b      	cbz	r3, 8001cbc <__sigtramp_r+0x2c>
 8001ca8:	1c59      	adds	r1, r3, #1
 8001caa:	d019      	beq.n	8001ce0 <__sigtramp_r+0x50>
 8001cac:	2b01      	cmp	r3, #1
 8001cae:	d015      	beq.n	8001cdc <__sigtramp_r+0x4c>
 8001cb0:	2500      	movs	r5, #0
 8001cb2:	4620      	mov	r0, r4
 8001cb4:	6015      	str	r5, [r2, #0]
 8001cb6:	4798      	blx	r3
 8001cb8:	4628      	mov	r0, r5
 8001cba:	bd38      	pop	{r3, r4, r5, pc}
 8001cbc:	2001      	movs	r0, #1
 8001cbe:	bd38      	pop	{r3, r4, r5, pc}
 8001cc0:	2180      	movs	r1, #128	; 0x80
 8001cc2:	f7ff feed 	bl	8001aa0 <_malloc_r>
 8001cc6:	4602      	mov	r2, r0
 8001cc8:	6468      	str	r0, [r5, #68]	; 0x44
 8001cca:	b158      	cbz	r0, 8001ce4 <__sigtramp_r+0x54>
 8001ccc:	1f03      	subs	r3, r0, #4
 8001cce:	2100      	movs	r1, #0
 8001cd0:	307c      	adds	r0, #124	; 0x7c
 8001cd2:	f843 1f04 	str.w	r1, [r3, #4]!
 8001cd6:	4298      	cmp	r0, r3
 8001cd8:	d1fb      	bne.n	8001cd2 <__sigtramp_r+0x42>
 8001cda:	e7e0      	b.n	8001c9e <__sigtramp_r+0xe>
 8001cdc:	2003      	movs	r0, #3
 8001cde:	bd38      	pop	{r3, r4, r5, pc}
 8001ce0:	2002      	movs	r0, #2
 8001ce2:	bd38      	pop	{r3, r4, r5, pc}
 8001ce4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001ce8:	bd38      	pop	{r3, r4, r5, pc}
 8001cea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001cee:	4770      	bx	lr

08001cf0 <raise>:
 8001cf0:	b538      	push	{r3, r4, r5, lr}
 8001cf2:	4b14      	ldr	r3, [pc, #80]	; (8001d44 <raise+0x54>)
 8001cf4:	281f      	cmp	r0, #31
 8001cf6:	681d      	ldr	r5, [r3, #0]
 8001cf8:	d81f      	bhi.n	8001d3a <raise+0x4a>
 8001cfa:	6c6a      	ldr	r2, [r5, #68]	; 0x44
 8001cfc:	4604      	mov	r4, r0
 8001cfe:	b162      	cbz	r2, 8001d1a <raise+0x2a>
 8001d00:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
 8001d04:	b14b      	cbz	r3, 8001d1a <raise+0x2a>
 8001d06:	2b01      	cmp	r3, #1
 8001d08:	d015      	beq.n	8001d36 <raise+0x46>
 8001d0a:	1c59      	adds	r1, r3, #1
 8001d0c:	d00f      	beq.n	8001d2e <raise+0x3e>
 8001d0e:	2500      	movs	r5, #0
 8001d10:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
 8001d14:	4798      	blx	r3
 8001d16:	4628      	mov	r0, r5
 8001d18:	bd38      	pop	{r3, r4, r5, pc}
 8001d1a:	4628      	mov	r0, r5
 8001d1c:	f000 f89e 	bl	8001e5c <_getpid_r>
 8001d20:	4622      	mov	r2, r4
 8001d22:	4601      	mov	r1, r0
 8001d24:	4628      	mov	r0, r5
 8001d26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001d2a:	f000 b881 	b.w	8001e30 <_kill_r>
 8001d2e:	2316      	movs	r3, #22
 8001d30:	602b      	str	r3, [r5, #0]
 8001d32:	2001      	movs	r0, #1
 8001d34:	bd38      	pop	{r3, r4, r5, pc}
 8001d36:	2000      	movs	r0, #0
 8001d38:	bd38      	pop	{r3, r4, r5, pc}
 8001d3a:	2316      	movs	r3, #22
 8001d3c:	602b      	str	r3, [r5, #0]
 8001d3e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001d42:	bd38      	pop	{r3, r4, r5, pc}
 8001d44:	20000000 	.word	0x20000000

08001d48 <signal>:
 8001d48:	4b12      	ldr	r3, [pc, #72]	; (8001d94 <signal+0x4c>)
 8001d4a:	281f      	cmp	r0, #31
 8001d4c:	b570      	push	{r4, r5, r6, lr}
 8001d4e:	681e      	ldr	r6, [r3, #0]
 8001d50:	d808      	bhi.n	8001d64 <signal+0x1c>
 8001d52:	460d      	mov	r5, r1
 8001d54:	6c71      	ldr	r1, [r6, #68]	; 0x44
 8001d56:	4604      	mov	r4, r0
 8001d58:	b149      	cbz	r1, 8001d6e <signal+0x26>
 8001d5a:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
 8001d5e:	f841 5024 	str.w	r5, [r1, r4, lsl #2]
 8001d62:	bd70      	pop	{r4, r5, r6, pc}
 8001d64:	2316      	movs	r3, #22
 8001d66:	6033      	str	r3, [r6, #0]
 8001d68:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001d6c:	bd70      	pop	{r4, r5, r6, pc}
 8001d6e:	2180      	movs	r1, #128	; 0x80
 8001d70:	4630      	mov	r0, r6
 8001d72:	f7ff fe95 	bl	8001aa0 <_malloc_r>
 8001d76:	4601      	mov	r1, r0
 8001d78:	6470      	str	r0, [r6, #68]	; 0x44
 8001d7a:	b140      	cbz	r0, 8001d8e <signal+0x46>
 8001d7c:	1f03      	subs	r3, r0, #4
 8001d7e:	f100 0c7c 	add.w	ip, r0, #124	; 0x7c
 8001d82:	2200      	movs	r2, #0
 8001d84:	f843 2f04 	str.w	r2, [r3, #4]!
 8001d88:	4563      	cmp	r3, ip
 8001d8a:	d1fb      	bne.n	8001d84 <signal+0x3c>
 8001d8c:	e7e5      	b.n	8001d5a <signal+0x12>
 8001d8e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001d92:	bd70      	pop	{r4, r5, r6, pc}
 8001d94:	20000000 	.word	0x20000000

08001d98 <_init_signal>:
 8001d98:	b538      	push	{r3, r4, r5, lr}
 8001d9a:	4b0b      	ldr	r3, [pc, #44]	; (8001dc8 <_init_signal+0x30>)
 8001d9c:	681d      	ldr	r5, [r3, #0]
 8001d9e:	6c6c      	ldr	r4, [r5, #68]	; 0x44
 8001da0:	b10c      	cbz	r4, 8001da6 <_init_signal+0xe>
 8001da2:	2000      	movs	r0, #0
 8001da4:	bd38      	pop	{r3, r4, r5, pc}
 8001da6:	2180      	movs	r1, #128	; 0x80
 8001da8:	4628      	mov	r0, r5
 8001daa:	f7ff fe79 	bl	8001aa0 <_malloc_r>
 8001dae:	6468      	str	r0, [r5, #68]	; 0x44
 8001db0:	b138      	cbz	r0, 8001dc2 <_init_signal+0x2a>
 8001db2:	1f03      	subs	r3, r0, #4
 8001db4:	f100 027c 	add.w	r2, r0, #124	; 0x7c
 8001db8:	f843 4f04 	str.w	r4, [r3, #4]!
 8001dbc:	4293      	cmp	r3, r2
 8001dbe:	d1fb      	bne.n	8001db8 <_init_signal+0x20>
 8001dc0:	e7ef      	b.n	8001da2 <_init_signal+0xa>
 8001dc2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001dc6:	bd38      	pop	{r3, r4, r5, pc}
 8001dc8:	20000000 	.word	0x20000000

08001dcc <__sigtramp>:
 8001dcc:	b538      	push	{r3, r4, r5, lr}
 8001dce:	4b17      	ldr	r3, [pc, #92]	; (8001e2c <__sigtramp+0x60>)
 8001dd0:	281f      	cmp	r0, #31
 8001dd2:	681d      	ldr	r5, [r3, #0]
 8001dd4:	d826      	bhi.n	8001e24 <__sigtramp+0x58>
 8001dd6:	6c6a      	ldr	r2, [r5, #68]	; 0x44
 8001dd8:	4604      	mov	r4, r0
 8001dda:	b182      	cbz	r2, 8001dfe <__sigtramp+0x32>
 8001ddc:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
 8001de0:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8001de4:	b14b      	cbz	r3, 8001dfa <__sigtramp+0x2e>
 8001de6:	1c59      	adds	r1, r3, #1
 8001de8:	d01a      	beq.n	8001e20 <__sigtramp+0x54>
 8001dea:	2b01      	cmp	r3, #1
 8001dec:	d016      	beq.n	8001e1c <__sigtramp+0x50>
 8001dee:	2500      	movs	r5, #0
 8001df0:	4620      	mov	r0, r4
 8001df2:	6015      	str	r5, [r2, #0]
 8001df4:	4798      	blx	r3
 8001df6:	4628      	mov	r0, r5
 8001df8:	bd38      	pop	{r3, r4, r5, pc}
 8001dfa:	2001      	movs	r0, #1
 8001dfc:	bd38      	pop	{r3, r4, r5, pc}
 8001dfe:	2180      	movs	r1, #128	; 0x80
 8001e00:	4628      	mov	r0, r5
 8001e02:	f7ff fe4d 	bl	8001aa0 <_malloc_r>
 8001e06:	4602      	mov	r2, r0
 8001e08:	6468      	str	r0, [r5, #68]	; 0x44
 8001e0a:	b158      	cbz	r0, 8001e24 <__sigtramp+0x58>
 8001e0c:	1f03      	subs	r3, r0, #4
 8001e0e:	2100      	movs	r1, #0
 8001e10:	307c      	adds	r0, #124	; 0x7c
 8001e12:	f843 1f04 	str.w	r1, [r3, #4]!
 8001e16:	4283      	cmp	r3, r0
 8001e18:	d1fb      	bne.n	8001e12 <__sigtramp+0x46>
 8001e1a:	e7df      	b.n	8001ddc <__sigtramp+0x10>
 8001e1c:	2003      	movs	r0, #3
 8001e1e:	bd38      	pop	{r3, r4, r5, pc}
 8001e20:	2002      	movs	r0, #2
 8001e22:	bd38      	pop	{r3, r4, r5, pc}
 8001e24:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001e28:	bd38      	pop	{r3, r4, r5, pc}
 8001e2a:	bf00      	nop
 8001e2c:	20000000 	.word	0x20000000

08001e30 <_kill_r>:
 8001e30:	b570      	push	{r4, r5, r6, lr}
 8001e32:	460c      	mov	r4, r1
 8001e34:	4d08      	ldr	r5, [pc, #32]	; (8001e58 <_kill_r+0x28>)
 8001e36:	4603      	mov	r3, r0
 8001e38:	2600      	movs	r6, #0
 8001e3a:	4620      	mov	r0, r4
 8001e3c:	4611      	mov	r1, r2
 8001e3e:	461c      	mov	r4, r3
 8001e40:	602e      	str	r6, [r5, #0]
 8001e42:	f003 fef3 	bl	8005c2c <_kill>
 8001e46:	1c43      	adds	r3, r0, #1
 8001e48:	d000      	beq.n	8001e4c <_kill_r+0x1c>
 8001e4a:	bd70      	pop	{r4, r5, r6, pc}
 8001e4c:	682b      	ldr	r3, [r5, #0]
 8001e4e:	2b00      	cmp	r3, #0
 8001e50:	d0fb      	beq.n	8001e4a <_kill_r+0x1a>
 8001e52:	6023      	str	r3, [r4, #0]
 8001e54:	bd70      	pop	{r4, r5, r6, pc}
 8001e56:	bf00      	nop
 8001e58:	2000012c 	.word	0x2000012c

08001e5c <_getpid_r>:
 8001e5c:	f003 bee4 	b.w	8005c28 <_getpid>

08001e60 <__sread>:
 8001e60:	b510      	push	{r4, lr}
 8001e62:	460c      	mov	r4, r1
 8001e64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001e68:	f000 f8b6 	bl	8001fd8 <_read_r>
 8001e6c:	2800      	cmp	r0, #0
 8001e6e:	db03      	blt.n	8001e78 <__sread+0x18>
 8001e70:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8001e72:	4403      	add	r3, r0
 8001e74:	6563      	str	r3, [r4, #84]	; 0x54
 8001e76:	bd10      	pop	{r4, pc}
 8001e78:	89a3      	ldrh	r3, [r4, #12]
 8001e7a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001e7e:	81a3      	strh	r3, [r4, #12]
 8001e80:	bd10      	pop	{r4, pc}
 8001e82:	bf00      	nop

08001e84 <__seofread>:
 8001e84:	2000      	movs	r0, #0
 8001e86:	4770      	bx	lr

08001e88 <__swrite>:
 8001e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e8c:	460c      	mov	r4, r1
 8001e8e:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
 8001e92:	461f      	mov	r7, r3
 8001e94:	05cb      	lsls	r3, r1, #23
 8001e96:	4605      	mov	r5, r0
 8001e98:	4616      	mov	r6, r2
 8001e9a:	d40b      	bmi.n	8001eb4 <__swrite+0x2c>
 8001e9c:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 8001ea0:	81a1      	strh	r1, [r4, #12]
 8001ea2:	463b      	mov	r3, r7
 8001ea4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001ea8:	4632      	mov	r2, r6
 8001eaa:	4628      	mov	r0, r5
 8001eac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001eb0:	f000 b81e 	b.w	8001ef0 <_write_r>
 8001eb4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001eb8:	2302      	movs	r3, #2
 8001eba:	2200      	movs	r2, #0
 8001ebc:	f000 f868 	bl	8001f90 <_lseek_r>
 8001ec0:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8001ec4:	e7ea      	b.n	8001e9c <__swrite+0x14>
 8001ec6:	bf00      	nop

08001ec8 <__sseek>:
 8001ec8:	b510      	push	{r4, lr}
 8001eca:	460c      	mov	r4, r1
 8001ecc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001ed0:	f000 f85e 	bl	8001f90 <_lseek_r>
 8001ed4:	89a3      	ldrh	r3, [r4, #12]
 8001ed6:	1c42      	adds	r2, r0, #1
 8001ed8:	bf0e      	itee	eq
 8001eda:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001ede:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001ee2:	6560      	strne	r0, [r4, #84]	; 0x54
 8001ee4:	81a3      	strh	r3, [r4, #12]
 8001ee6:	bd10      	pop	{r4, pc}

08001ee8 <__sclose>:
 8001ee8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001eec:	f000 b816 	b.w	8001f1c <_close_r>

08001ef0 <_write_r>:
 8001ef0:	b538      	push	{r3, r4, r5, lr}
 8001ef2:	460c      	mov	r4, r1
 8001ef4:	4d08      	ldr	r5, [pc, #32]	; (8001f18 <_write_r+0x28>)
 8001ef6:	4684      	mov	ip, r0
 8001ef8:	4611      	mov	r1, r2
 8001efa:	4620      	mov	r0, r4
 8001efc:	461a      	mov	r2, r3
 8001efe:	2300      	movs	r3, #0
 8001f00:	602b      	str	r3, [r5, #0]
 8001f02:	4664      	mov	r4, ip
 8001f04:	f003 feb0 	bl	8005c68 <_write>
 8001f08:	1c43      	adds	r3, r0, #1
 8001f0a:	d000      	beq.n	8001f0e <_write_r+0x1e>
 8001f0c:	bd38      	pop	{r3, r4, r5, pc}
 8001f0e:	682b      	ldr	r3, [r5, #0]
 8001f10:	2b00      	cmp	r3, #0
 8001f12:	d0fb      	beq.n	8001f0c <_write_r+0x1c>
 8001f14:	6023      	str	r3, [r4, #0]
 8001f16:	bd38      	pop	{r3, r4, r5, pc}
 8001f18:	2000012c 	.word	0x2000012c

08001f1c <_close_r>:
 8001f1c:	b538      	push	{r3, r4, r5, lr}
 8001f1e:	4d07      	ldr	r5, [pc, #28]	; (8001f3c <_close_r+0x20>)
 8001f20:	2200      	movs	r2, #0
 8001f22:	4604      	mov	r4, r0
 8001f24:	4608      	mov	r0, r1
 8001f26:	602a      	str	r2, [r5, #0]
 8001f28:	f003 feac 	bl	8005c84 <_close>
 8001f2c:	1c43      	adds	r3, r0, #1
 8001f2e:	d000      	beq.n	8001f32 <_close_r+0x16>
 8001f30:	bd38      	pop	{r3, r4, r5, pc}
 8001f32:	682b      	ldr	r3, [r5, #0]
 8001f34:	2b00      	cmp	r3, #0
 8001f36:	d0fb      	beq.n	8001f30 <_close_r+0x14>
 8001f38:	6023      	str	r3, [r4, #0]
 8001f3a:	bd38      	pop	{r3, r4, r5, pc}
 8001f3c:	2000012c 	.word	0x2000012c

08001f40 <_fstat_r>:
 8001f40:	b570      	push	{r4, r5, r6, lr}
 8001f42:	460c      	mov	r4, r1
 8001f44:	4d08      	ldr	r5, [pc, #32]	; (8001f68 <_fstat_r+0x28>)
 8001f46:	4603      	mov	r3, r0
 8001f48:	2600      	movs	r6, #0
 8001f4a:	4620      	mov	r0, r4
 8001f4c:	4611      	mov	r1, r2
 8001f4e:	461c      	mov	r4, r3
 8001f50:	602e      	str	r6, [r5, #0]
 8001f52:	f003 fe9a 	bl	8005c8a <_fstat>
 8001f56:	1c43      	adds	r3, r0, #1
 8001f58:	d000      	beq.n	8001f5c <_fstat_r+0x1c>
 8001f5a:	bd70      	pop	{r4, r5, r6, pc}
 8001f5c:	682b      	ldr	r3, [r5, #0]
 8001f5e:	2b00      	cmp	r3, #0
 8001f60:	d0fb      	beq.n	8001f5a <_fstat_r+0x1a>
 8001f62:	6023      	str	r3, [r4, #0]
 8001f64:	bd70      	pop	{r4, r5, r6, pc}
 8001f66:	bf00      	nop
 8001f68:	2000012c 	.word	0x2000012c

08001f6c <_isatty_r>:
 8001f6c:	b538      	push	{r3, r4, r5, lr}
 8001f6e:	4d07      	ldr	r5, [pc, #28]	; (8001f8c <_isatty_r+0x20>)
 8001f70:	2200      	movs	r2, #0
 8001f72:	4604      	mov	r4, r0
 8001f74:	4608      	mov	r0, r1
 8001f76:	602a      	str	r2, [r5, #0]
 8001f78:	f003 fe8c 	bl	8005c94 <_isatty>
 8001f7c:	1c43      	adds	r3, r0, #1
 8001f7e:	d000      	beq.n	8001f82 <_isatty_r+0x16>
 8001f80:	bd38      	pop	{r3, r4, r5, pc}
 8001f82:	682b      	ldr	r3, [r5, #0]
 8001f84:	2b00      	cmp	r3, #0
 8001f86:	d0fb      	beq.n	8001f80 <_isatty_r+0x14>
 8001f88:	6023      	str	r3, [r4, #0]
 8001f8a:	bd38      	pop	{r3, r4, r5, pc}
 8001f8c:	2000012c 	.word	0x2000012c

08001f90 <_lseek_r>:
 8001f90:	b538      	push	{r3, r4, r5, lr}
 8001f92:	460c      	mov	r4, r1
 8001f94:	4d08      	ldr	r5, [pc, #32]	; (8001fb8 <_lseek_r+0x28>)
 8001f96:	4684      	mov	ip, r0
 8001f98:	4611      	mov	r1, r2
 8001f9a:	4620      	mov	r0, r4
 8001f9c:	461a      	mov	r2, r3
 8001f9e:	2300      	movs	r3, #0
 8001fa0:	602b      	str	r3, [r5, #0]
 8001fa2:	4664      	mov	r4, ip
 8001fa4:	f003 fe78 	bl	8005c98 <_lseek>
 8001fa8:	1c43      	adds	r3, r0, #1
 8001faa:	d000      	beq.n	8001fae <_lseek_r+0x1e>
 8001fac:	bd38      	pop	{r3, r4, r5, pc}
 8001fae:	682b      	ldr	r3, [r5, #0]
 8001fb0:	2b00      	cmp	r3, #0
 8001fb2:	d0fb      	beq.n	8001fac <_lseek_r+0x1c>
 8001fb4:	6023      	str	r3, [r4, #0]
 8001fb6:	bd38      	pop	{r3, r4, r5, pc}
 8001fb8:	2000012c 	.word	0x2000012c

08001fbc <__malloc_lock>:
 8001fbc:	4770      	bx	lr
 8001fbe:	bf00      	nop

08001fc0 <__malloc_unlock>:
 8001fc0:	4770      	bx	lr
 8001fc2:	bf00      	nop

08001fc4 <_malloc_usable_size_r>:
 8001fc4:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8001fc8:	2800      	cmp	r0, #0
 8001fca:	f1a0 0004 	sub.w	r0, r0, #4
 8001fce:	bfbc      	itt	lt
 8001fd0:	580b      	ldrlt	r3, [r1, r0]
 8001fd2:	18c0      	addlt	r0, r0, r3
 8001fd4:	4770      	bx	lr
 8001fd6:	bf00      	nop

08001fd8 <_read_r>:
 8001fd8:	b538      	push	{r3, r4, r5, lr}
 8001fda:	460c      	mov	r4, r1
 8001fdc:	4d08      	ldr	r5, [pc, #32]	; (8002000 <_read_r+0x28>)
 8001fde:	4684      	mov	ip, r0
 8001fe0:	4611      	mov	r1, r2
 8001fe2:	4620      	mov	r0, r4
 8001fe4:	461a      	mov	r2, r3
 8001fe6:	2300      	movs	r3, #0
 8001fe8:	602b      	str	r3, [r5, #0]
 8001fea:	4664      	mov	r4, ip
 8001fec:	f003 fe2c 	bl	8005c48 <_read>
 8001ff0:	1c43      	adds	r3, r0, #1
 8001ff2:	d000      	beq.n	8001ff6 <_read_r+0x1e>
 8001ff4:	bd38      	pop	{r3, r4, r5, pc}
 8001ff6:	682b      	ldr	r3, [r5, #0]
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	d0fb      	beq.n	8001ff4 <_read_r+0x1c>
 8001ffc:	6023      	str	r3, [r4, #0]
 8001ffe:	bd38      	pop	{r3, r4, r5, pc}
 8002000:	2000012c 	.word	0x2000012c

08002004 <_gettimeofday>:
 8002004:	4b02      	ldr	r3, [pc, #8]	; (8002010 <_gettimeofday+0xc>)
 8002006:	2258      	movs	r2, #88	; 0x58
 8002008:	601a      	str	r2, [r3, #0]
 800200a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800200e:	4770      	bx	lr
 8002010:	2000012c 	.word	0x2000012c

08002014 <dwt_generatecrc8>:
 8002014:	b500      	push	{lr}
 8002016:	4686      	mov	lr, r0
 8002018:	4610      	mov	r0, r2
 800201a:	2300      	movs	r3, #0
 800201c:	e007      	b.n	800202e <dwt_generatecrc8+0x1a>
 800201e:	f81e c003 	ldrb.w	ip, [lr, r3]
 8002022:	ea8c 0c00 	eor.w	ip, ip, r0
 8002026:	4a04      	ldr	r2, [pc, #16]	; (8002038 <dwt_generatecrc8+0x24>)
 8002028:	f812 000c 	ldrb.w	r0, [r2, ip]
 800202c:	3301      	adds	r3, #1
 800202e:	428b      	cmp	r3, r1
 8002030:	dbf5      	blt.n	800201e <dwt_generatecrc8+0xa>
 8002032:	f85d fb04 	ldr.w	pc, [sp], #4
 8002036:	bf00      	nop
 8002038:	20000170 	.word	0x20000170

0800203c <dwt_xfer3000>:
 800203c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800203e:	b085      	sub	sp, #20
 8002040:	4606      	mov	r6, r0
 8002042:	4614      	mov	r4, r2
 8002044:	461d      	mov	r5, r3
 8002046:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 800204a:	1808      	adds	r0, r1, r0
 800204c:	f3c0 4004 	ubfx	r0, r0, #16, #5
 8002050:	198b      	adds	r3, r1, r6
 8002052:	f5b4 5f44 	cmp.w	r4, #12544	; 0x3100
 8002056:	d246      	bcs.n	80020e6 <dwt_xfer3000+0xaa>
 8002058:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800205c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8002060:	d00c      	beq.n	800207c <dwt_xfer3000+0x40>
 8002062:	b15a      	cbz	r2, 800207c <dwt_xfer3000+0x40>
 8002064:	f248 0101 	movw	r1, #32769	; 0x8001
 8002068:	428a      	cmp	r2, r1
 800206a:	d007      	beq.n	800207c <dwt_xfer3000+0x40>
 800206c:	f248 0102 	movw	r1, #32770	; 0x8002
 8002070:	428a      	cmp	r2, r1
 8002072:	d003      	beq.n	800207c <dwt_xfer3000+0x40>
 8002074:	f248 0103 	movw	r1, #32771	; 0x8003
 8002078:	428a      	cmp	r2, r1
 800207a:	d13a      	bne.n	80020f2 <dwt_xfer3000+0xb6>
 800207c:	0099      	lsls	r1, r3, #2
 800207e:	ea41 2c40 	orr.w	ip, r1, r0, lsl #9
 8002082:	4661      	mov	r1, ip
 8002084:	4311      	orrs	r1, r2
 8002086:	0a09      	lsrs	r1, r1, #8
 8002088:	f88d 100c 	strb.w	r1, [sp, #12]
 800208c:	f002 0003 	and.w	r0, r2, #3
 8002090:	ea40 000c 	orr.w	r0, r0, ip
 8002094:	f88d 000d 	strb.w	r0, [sp, #13]
 8002098:	2c00      	cmp	r4, #0
 800209a:	d136      	bne.n	800210a <dwt_xfer3000+0xce>
 800209c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80020a0:	d12d      	bne.n	80020fe <dwt_xfer3000+0xc2>
 80020a2:	0073      	lsls	r3, r6, #1
 80020a4:	f063 037e 	orn	r3, r3, #126	; 0x7e
 80020a8:	f88d 300c 	strb.w	r3, [sp, #12]
 80020ac:	2701      	movs	r7, #1
 80020ae:	2a00      	cmp	r2, #0
 80020b0:	d041      	beq.n	8002136 <dwt_xfer3000+0xfa>
 80020b2:	f482 4100 	eor.w	r1, r2, #32768	; 0x8000
 80020b6:	2903      	cmp	r1, #3
 80020b8:	d864      	bhi.n	8002184 <dwt_xfer3000+0x148>
 80020ba:	4b33      	ldr	r3, [pc, #204]	; (8002188 <dwt_xfer3000+0x14c>)
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	7d1b      	ldrb	r3, [r3, #20]
 80020c0:	b393      	cbz	r3, 8002128 <dwt_xfer3000+0xec>
 80020c2:	2200      	movs	r2, #0
 80020c4:	4639      	mov	r1, r7
 80020c6:	a803      	add	r0, sp, #12
 80020c8:	f7ff ffa4 	bl	8002014 <dwt_generatecrc8>
 80020cc:	4602      	mov	r2, r0
 80020ce:	4621      	mov	r1, r4
 80020d0:	4628      	mov	r0, r5
 80020d2:	f7ff ff9f 	bl	8002014 <dwt_generatecrc8>
 80020d6:	9000      	str	r0, [sp, #0]
 80020d8:	462b      	mov	r3, r5
 80020da:	4622      	mov	r2, r4
 80020dc:	a903      	add	r1, sp, #12
 80020de:	4638      	mov	r0, r7
 80020e0:	f000 fc3a 	bl	8002958 <writetospiwithcrc>
 80020e4:	e032      	b.n	800214c <dwt_xfer3000+0x110>
 80020e6:	4b29      	ldr	r3, [pc, #164]	; (800218c <dwt_xfer3000+0x150>)
 80020e8:	4a29      	ldr	r2, [pc, #164]	; (8002190 <dwt_xfer3000+0x154>)
 80020ea:	21c9      	movs	r1, #201	; 0xc9
 80020ec:	4829      	ldr	r0, [pc, #164]	; (8002194 <dwt_xfer3000+0x158>)
 80020ee:	f7fe f893 	bl	8000218 <__assert_func>
 80020f2:	4b29      	ldr	r3, [pc, #164]	; (8002198 <dwt_xfer3000+0x15c>)
 80020f4:	4a26      	ldr	r2, [pc, #152]	; (8002190 <dwt_xfer3000+0x154>)
 80020f6:	21ca      	movs	r1, #202	; 0xca
 80020f8:	4826      	ldr	r0, [pc, #152]	; (8002194 <dwt_xfer3000+0x158>)
 80020fa:	f7fe f88d 	bl	8000218 <__assert_func>
 80020fe:	4b27      	ldr	r3, [pc, #156]	; (800219c <dwt_xfer3000+0x160>)
 8002100:	4a23      	ldr	r2, [pc, #140]	; (8002190 <dwt_xfer3000+0x154>)
 8002102:	21dc      	movs	r1, #220	; 0xdc
 8002104:	4823      	ldr	r0, [pc, #140]	; (8002194 <dwt_xfer3000+0x158>)
 8002106:	f7fe f887 	bl	8000218 <__assert_func>
 800210a:	b91b      	cbnz	r3, 8002114 <dwt_xfer3000+0xd8>
 800210c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8002110:	d006      	beq.n	8002120 <dwt_xfer3000+0xe4>
 8002112:	b13a      	cbz	r2, 8002124 <dwt_xfer3000+0xe8>
 8002114:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8002118:	f88d 100c 	strb.w	r1, [sp, #12]
 800211c:	2702      	movs	r7, #2
 800211e:	e7c6      	b.n	80020ae <dwt_xfer3000+0x72>
 8002120:	2701      	movs	r7, #1
 8002122:	e7c4      	b.n	80020ae <dwt_xfer3000+0x72>
 8002124:	2701      	movs	r7, #1
 8002126:	e7c2      	b.n	80020ae <dwt_xfer3000+0x72>
 8002128:	462b      	mov	r3, r5
 800212a:	4622      	mov	r2, r4
 800212c:	a903      	add	r1, sp, #12
 800212e:	4638      	mov	r0, r7
 8002130:	f000 fc48 	bl	80029c4 <writetospi>
 8002134:	e00a      	b.n	800214c <dwt_xfer3000+0x110>
 8002136:	462b      	mov	r3, r5
 8002138:	4622      	mov	r2, r4
 800213a:	a903      	add	r1, sp, #12
 800213c:	4638      	mov	r0, r7
 800213e:	f000 fc73 	bl	8002a28 <readfromspi>
 8002142:	4b11      	ldr	r3, [pc, #68]	; (8002188 <dwt_xfer3000+0x14c>)
 8002144:	681b      	ldr	r3, [r3, #0]
 8002146:	7d1b      	ldrb	r3, [r3, #20]
 8002148:	2b02      	cmp	r3, #2
 800214a:	d001      	beq.n	8002150 <dwt_xfer3000+0x114>
 800214c:	b005      	add	sp, #20
 800214e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002150:	2e18      	cmp	r6, #24
 8002152:	d0fb      	beq.n	800214c <dwt_xfer3000+0x110>
 8002154:	2200      	movs	r2, #0
 8002156:	4639      	mov	r1, r7
 8002158:	a803      	add	r0, sp, #12
 800215a:	f7ff ff5b 	bl	8002014 <dwt_generatecrc8>
 800215e:	4602      	mov	r2, r0
 8002160:	4621      	mov	r1, r4
 8002162:	4628      	mov	r0, r5
 8002164:	f7ff ff56 	bl	8002014 <dwt_generatecrc8>
 8002168:	4604      	mov	r4, r0
 800216a:	2100      	movs	r1, #0
 800216c:	2018      	movs	r0, #24
 800216e:	f000 f8be 	bl	80022ee <dwt_read8bitoffsetreg>
 8002172:	4284      	cmp	r4, r0
 8002174:	d0ea      	beq.n	800214c <dwt_xfer3000+0x110>
 8002176:	4b04      	ldr	r3, [pc, #16]	; (8002188 <dwt_xfer3000+0x14c>)
 8002178:	681b      	ldr	r3, [r3, #0]
 800217a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800217c:	2b00      	cmp	r3, #0
 800217e:	d0e5      	beq.n	800214c <dwt_xfer3000+0x110>
 8002180:	4798      	blx	r3
 8002182:	e7e3      	b.n	800214c <dwt_xfer3000+0x110>
 8002184:	e7fe      	b.n	8002184 <dwt_xfer3000+0x148>
 8002186:	bf00      	nop
 8002188:	2000008c 	.word	0x2000008c
 800218c:	08005f48 	.word	0x08005f48
 8002190:	08006024 	.word	0x08006024
 8002194:	08005f58 	.word	0x08005f58
 8002198:	08005f70 	.word	0x08005f70
 800219c:	08006008 	.word	0x08006008

080021a0 <dwt_writetodevice>:
 80021a0:	b510      	push	{r4, lr}
 80021a2:	b082      	sub	sp, #8
 80021a4:	f44f 4400 	mov.w	r4, #32768	; 0x8000
 80021a8:	9400      	str	r4, [sp, #0]
 80021aa:	f7ff ff47 	bl	800203c <dwt_xfer3000>
 80021ae:	b002      	add	sp, #8
 80021b0:	bd10      	pop	{r4, pc}

080021b2 <dwt_write32bitoffsetreg>:
 80021b2:	b500      	push	{lr}
 80021b4:	b083      	sub	sp, #12
 80021b6:	2300      	movs	r3, #0
 80021b8:	e006      	b.n	80021c8 <dwt_write32bitoffsetreg+0x16>
 80021ba:	f103 0c08 	add.w	ip, r3, #8
 80021be:	44ec      	add	ip, sp
 80021c0:	f80c 2c04 	strb.w	r2, [ip, #-4]
 80021c4:	0a12      	lsrs	r2, r2, #8
 80021c6:	3301      	adds	r3, #1
 80021c8:	2b03      	cmp	r3, #3
 80021ca:	ddf6      	ble.n	80021ba <dwt_write32bitoffsetreg+0x8>
 80021cc:	ab01      	add	r3, sp, #4
 80021ce:	2204      	movs	r2, #4
 80021d0:	b289      	uxth	r1, r1
 80021d2:	f7ff ffe5 	bl	80021a0 <dwt_writetodevice>
 80021d6:	b003      	add	sp, #12
 80021d8:	f85d fb04 	ldr.w	pc, [sp], #4

080021dc <dwt_disable_rftx_blocks>:
 80021dc:	b508      	push	{r3, lr}
 80021de:	2200      	movs	r2, #0
 80021e0:	4611      	mov	r1, r2
 80021e2:	4802      	ldr	r0, [pc, #8]	; (80021ec <dwt_disable_rftx_blocks+0x10>)
 80021e4:	f7ff ffe5 	bl	80021b2 <dwt_write32bitoffsetreg>
 80021e8:	bd08      	pop	{r3, pc}
 80021ea:	bf00      	nop
 80021ec:	00070004 	.word	0x00070004

080021f0 <dwt_disable_rf_tx>:
 80021f0:	b510      	push	{r4, lr}
 80021f2:	4604      	mov	r4, r0
 80021f4:	2200      	movs	r2, #0
 80021f6:	4611      	mov	r1, r2
 80021f8:	4808      	ldr	r0, [pc, #32]	; (800221c <dwt_disable_rf_tx+0x2c>)
 80021fa:	f7ff ffda 	bl	80021b2 <dwt_write32bitoffsetreg>
 80021fe:	2200      	movs	r2, #0
 8002200:	4611      	mov	r1, r2
 8002202:	f44f 20e0 	mov.w	r0, #458752	; 0x70000
 8002206:	f7ff ffd4 	bl	80021b2 <dwt_write32bitoffsetreg>
 800220a:	b904      	cbnz	r4, 800220e <dwt_disable_rf_tx+0x1e>
 800220c:	bd10      	pop	{r4, pc}
 800220e:	f04f 52e0 	mov.w	r2, #469762048	; 0x1c000000
 8002212:	2100      	movs	r1, #0
 8002214:	4802      	ldr	r0, [pc, #8]	; (8002220 <dwt_disable_rf_tx+0x30>)
 8002216:	f7ff ffcc 	bl	80021b2 <dwt_write32bitoffsetreg>
 800221a:	e7f7      	b.n	800220c <dwt_disable_rf_tx+0x1c>
 800221c:	00070048 	.word	0x00070048
 8002220:	00070014 	.word	0x00070014

08002224 <dwt_write16bitoffsetreg>:
 8002224:	b500      	push	{lr}
 8002226:	b083      	sub	sp, #12
 8002228:	f88d 2004 	strb.w	r2, [sp, #4]
 800222c:	0a12      	lsrs	r2, r2, #8
 800222e:	f88d 2005 	strb.w	r2, [sp, #5]
 8002232:	ab01      	add	r3, sp, #4
 8002234:	2202      	movs	r2, #2
 8002236:	b289      	uxth	r1, r1
 8002238:	f7ff ffb2 	bl	80021a0 <dwt_writetodevice>
 800223c:	b003      	add	sp, #12
 800223e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08002244 <dwt_force_clocks>:
 8002244:	b510      	push	{r4, lr}
 8002246:	4604      	mov	r4, r0
 8002248:	2801      	cmp	r0, #1
 800224a:	d002      	beq.n	8002252 <dwt_force_clocks+0xe>
 800224c:	2c05      	cmp	r4, #5
 800224e:	d007      	beq.n	8002260 <dwt_force_clocks+0x1c>
 8002250:	bd10      	pop	{r4, pc}
 8002252:	f641 0222 	movw	r2, #6178	; 0x1822
 8002256:	2100      	movs	r1, #0
 8002258:	4805      	ldr	r0, [pc, #20]	; (8002270 <dwt_force_clocks+0x2c>)
 800225a:	f7ff ffe3 	bl	8002224 <dwt_write16bitoffsetreg>
 800225e:	e7f5      	b.n	800224c <dwt_force_clocks+0x8>
 8002260:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002264:	2100      	movs	r1, #0
 8002266:	4802      	ldr	r0, [pc, #8]	; (8002270 <dwt_force_clocks+0x2c>)
 8002268:	f7ff ffdc 	bl	8002224 <dwt_write16bitoffsetreg>
 800226c:	e7f0      	b.n	8002250 <dwt_force_clocks+0xc>
 800226e:	bf00      	nop
 8002270:	00110004 	.word	0x00110004

08002274 <dwt_write8bitoffsetreg>:
 8002274:	b500      	push	{lr}
 8002276:	b083      	sub	sp, #12
 8002278:	f88d 2007 	strb.w	r2, [sp, #7]
 800227c:	f10d 0307 	add.w	r3, sp, #7
 8002280:	2201      	movs	r2, #1
 8002282:	b289      	uxth	r1, r1
 8002284:	f7ff ff8c 	bl	80021a0 <dwt_writetodevice>
 8002288:	b003      	add	sp, #12
 800228a:	f85d fb04 	ldr.w	pc, [sp], #4

0800228e <dwt_readfromdevice>:
 800228e:	b510      	push	{r4, lr}
 8002290:	b082      	sub	sp, #8
 8002292:	2400      	movs	r4, #0
 8002294:	9400      	str	r4, [sp, #0]
 8002296:	f7ff fed1 	bl	800203c <dwt_xfer3000>
 800229a:	b002      	add	sp, #8
 800229c:	bd10      	pop	{r4, pc}

0800229e <dwt_read32bitoffsetreg>:
 800229e:	b500      	push	{lr}
 80022a0:	b083      	sub	sp, #12
 80022a2:	ab01      	add	r3, sp, #4
 80022a4:	2204      	movs	r2, #4
 80022a6:	b289      	uxth	r1, r1
 80022a8:	f7ff fff1 	bl	800228e <dwt_readfromdevice>
 80022ac:	2000      	movs	r0, #0
 80022ae:	2303      	movs	r3, #3
 80022b0:	e007      	b.n	80022c2 <dwt_read32bitoffsetreg+0x24>
 80022b2:	f103 0208 	add.w	r2, r3, #8
 80022b6:	446a      	add	r2, sp
 80022b8:	f812 2c04 	ldrb.w	r2, [r2, #-4]
 80022bc:	eb02 2000 	add.w	r0, r2, r0, lsl #8
 80022c0:	3b01      	subs	r3, #1
 80022c2:	2b00      	cmp	r3, #0
 80022c4:	daf5      	bge.n	80022b2 <dwt_read32bitoffsetreg+0x14>
 80022c6:	b003      	add	sp, #12
 80022c8:	f85d fb04 	ldr.w	pc, [sp], #4

080022cc <dwt_read16bitoffsetreg>:
 80022cc:	b500      	push	{lr}
 80022ce:	b083      	sub	sp, #12
 80022d0:	ab01      	add	r3, sp, #4
 80022d2:	2202      	movs	r2, #2
 80022d4:	b289      	uxth	r1, r1
 80022d6:	f7ff ffda 	bl	800228e <dwt_readfromdevice>
 80022da:	f89d 3005 	ldrb.w	r3, [sp, #5]
 80022de:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80022e2:	eb00 2003 	add.w	r0, r0, r3, lsl #8
 80022e6:	b280      	uxth	r0, r0
 80022e8:	b003      	add	sp, #12
 80022ea:	f85d fb04 	ldr.w	pc, [sp], #4

080022ee <dwt_read8bitoffsetreg>:
 80022ee:	b500      	push	{lr}
 80022f0:	b083      	sub	sp, #12
 80022f2:	f10d 0307 	add.w	r3, sp, #7
 80022f6:	2201      	movs	r2, #1
 80022f8:	b289      	uxth	r1, r1
 80022fa:	f7ff ffc8 	bl	800228e <dwt_readfromdevice>
 80022fe:	f89d 0007 	ldrb.w	r0, [sp, #7]
 8002302:	b003      	add	sp, #12
 8002304:	f85d fb04 	ldr.w	pc, [sp], #4

08002308 <dwt_modify32bitoffsetreg>:
 8002308:	b500      	push	{lr}
 800230a:	b085      	sub	sp, #20
 800230c:	f88d 2008 	strb.w	r2, [sp, #8]
 8002310:	f3c2 2c07 	ubfx	ip, r2, #8, #8
 8002314:	f88d c009 	strb.w	ip, [sp, #9]
 8002318:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 800231c:	f88d c00a 	strb.w	ip, [sp, #10]
 8002320:	0e12      	lsrs	r2, r2, #24
 8002322:	f88d 200b 	strb.w	r2, [sp, #11]
 8002326:	f88d 300c 	strb.w	r3, [sp, #12]
 800232a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800232e:	f88d 200d 	strb.w	r2, [sp, #13]
 8002332:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8002336:	f88d 200e 	strb.w	r2, [sp, #14]
 800233a:	0e1b      	lsrs	r3, r3, #24
 800233c:	f88d 300f 	strb.w	r3, [sp, #15]
 8002340:	f248 0303 	movw	r3, #32771	; 0x8003
 8002344:	9300      	str	r3, [sp, #0]
 8002346:	ab02      	add	r3, sp, #8
 8002348:	2208      	movs	r2, #8
 800234a:	b289      	uxth	r1, r1
 800234c:	f7ff fe76 	bl	800203c <dwt_xfer3000>
 8002350:	b005      	add	sp, #20
 8002352:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08002358 <dwt_enable_rf_tx>:
 8002358:	b570      	push	{r4, r5, r6, lr}
 800235a:	4605      	mov	r5, r0
 800235c:	460c      	mov	r4, r1
 800235e:	4e16      	ldr	r6, [pc, #88]	; (80023b8 <dwt_enable_rf_tx+0x60>)
 8002360:	f04f 2308 	mov.w	r3, #134219776	; 0x8000800
 8002364:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002368:	2100      	movs	r1, #0
 800236a:	4630      	mov	r0, r6
 800236c:	f7ff ffcc 	bl	8002308 <dwt_modify32bitoffsetreg>
 8002370:	f04f 1360 	mov.w	r3, #6291552	; 0x600060
 8002374:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002378:	2100      	movs	r1, #0
 800237a:	4630      	mov	r0, r6
 800237c:	f7ff ffc4 	bl	8002308 <dwt_modify32bitoffsetreg>
 8002380:	2d05      	cmp	r5, #5
 8002382:	d009      	beq.n	8002398 <dwt_enable_rf_tx+0x40>
 8002384:	4b0d      	ldr	r3, [pc, #52]	; (80023bc <dwt_enable_rf_tx+0x64>)
 8002386:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800238a:	2100      	movs	r1, #0
 800238c:	f44f 20e0 	mov.w	r0, #458752	; 0x70000
 8002390:	f7ff ffba 	bl	8002308 <dwt_modify32bitoffsetreg>
 8002394:	b94c      	cbnz	r4, 80023aa <dwt_enable_rf_tx+0x52>
 8002396:	bd70      	pop	{r4, r5, r6, pc}
 8002398:	4b09      	ldr	r3, [pc, #36]	; (80023c0 <dwt_enable_rf_tx+0x68>)
 800239a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800239e:	2100      	movs	r1, #0
 80023a0:	f44f 20e0 	mov.w	r0, #458752	; 0x70000
 80023a4:	f7ff ffb0 	bl	8002308 <dwt_modify32bitoffsetreg>
 80023a8:	e7f4      	b.n	8002394 <dwt_enable_rf_tx+0x3c>
 80023aa:	4a06      	ldr	r2, [pc, #24]	; (80023c4 <dwt_enable_rf_tx+0x6c>)
 80023ac:	2100      	movs	r1, #0
 80023ae:	4806      	ldr	r0, [pc, #24]	; (80023c8 <dwt_enable_rf_tx+0x70>)
 80023b0:	f7ff feff 	bl	80021b2 <dwt_write32bitoffsetreg>
 80023b4:	e7ef      	b.n	8002396 <dwt_enable_rf_tx+0x3e>
 80023b6:	bf00      	nop
 80023b8:	00070048 	.word	0x00070048
 80023bc:	02001c00 	.word	0x02001c00
 80023c0:	02003c00 	.word	0x02003c00
 80023c4:	01011100 	.word	0x01011100
 80023c8:	00070014 	.word	0x00070014

080023cc <dwt_enable_rftx_blocks>:
 80023cc:	b508      	push	{r3, lr}
 80023ce:	2805      	cmp	r0, #5
 80023d0:	d002      	beq.n	80023d8 <dwt_enable_rftx_blocks+0xc>
 80023d2:	2809      	cmp	r0, #9
 80023d4:	d008      	beq.n	80023e8 <dwt_enable_rftx_blocks+0x1c>
 80023d6:	bd08      	pop	{r3, pc}
 80023d8:	4b07      	ldr	r3, [pc, #28]	; (80023f8 <dwt_enable_rftx_blocks+0x2c>)
 80023da:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80023de:	2100      	movs	r1, #0
 80023e0:	4806      	ldr	r0, [pc, #24]	; (80023fc <dwt_enable_rftx_blocks+0x30>)
 80023e2:	f7ff ff91 	bl	8002308 <dwt_modify32bitoffsetreg>
 80023e6:	e7f6      	b.n	80023d6 <dwt_enable_rftx_blocks+0xa>
 80023e8:	4b05      	ldr	r3, [pc, #20]	; (8002400 <dwt_enable_rftx_blocks+0x34>)
 80023ea:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80023ee:	2100      	movs	r1, #0
 80023f0:	4802      	ldr	r0, [pc, #8]	; (80023fc <dwt_enable_rftx_blocks+0x30>)
 80023f2:	f7ff ff89 	bl	8002308 <dwt_modify32bitoffsetreg>
 80023f6:	e7ee      	b.n	80023d6 <dwt_enable_rftx_blocks+0xa>
 80023f8:	02003c00 	.word	0x02003c00
 80023fc:	00070004 	.word	0x00070004
 8002400:	02001c00 	.word	0x02001c00

08002404 <dwt_modify16bitoffsetreg>:
 8002404:	b500      	push	{lr}
 8002406:	b085      	sub	sp, #20
 8002408:	f88d 200c 	strb.w	r2, [sp, #12]
 800240c:	0a12      	lsrs	r2, r2, #8
 800240e:	f88d 200d 	strb.w	r2, [sp, #13]
 8002412:	f88d 300e 	strb.w	r3, [sp, #14]
 8002416:	0a1b      	lsrs	r3, r3, #8
 8002418:	f88d 300f 	strb.w	r3, [sp, #15]
 800241c:	f248 0302 	movw	r3, #32770	; 0x8002
 8002420:	9300      	str	r3, [sp, #0]
 8002422:	ab03      	add	r3, sp, #12
 8002424:	2204      	movs	r2, #4
 8002426:	b289      	uxth	r1, r1
 8002428:	f7ff fe08 	bl	800203c <dwt_xfer3000>
 800242c:	b005      	add	sp, #20
 800242e:	f85d fb04 	ldr.w	pc, [sp], #4

08002432 <dwt_modify8bitoffsetreg>:
 8002432:	b500      	push	{lr}
 8002434:	b085      	sub	sp, #20
 8002436:	f88d 200c 	strb.w	r2, [sp, #12]
 800243a:	f88d 300d 	strb.w	r3, [sp, #13]
 800243e:	f248 0301 	movw	r3, #32769	; 0x8001
 8002442:	9300      	str	r3, [sp, #0]
 8002444:	ab03      	add	r3, sp, #12
 8002446:	2202      	movs	r2, #2
 8002448:	b289      	uxth	r1, r1
 800244a:	f7ff fdf7 	bl	800203c <dwt_xfer3000>
 800244e:	b005      	add	sp, #20
 8002450:	f85d fb04 	ldr.w	pc, [sp], #4

08002454 <dwt_configurestskey>:
 8002454:	b510      	push	{r4, lr}
 8002456:	4604      	mov	r4, r0
 8002458:	6802      	ldr	r2, [r0, #0]
 800245a:	2100      	movs	r1, #0
 800245c:	4809      	ldr	r0, [pc, #36]	; (8002484 <dwt_configurestskey+0x30>)
 800245e:	f7ff fea8 	bl	80021b2 <dwt_write32bitoffsetreg>
 8002462:	6862      	ldr	r2, [r4, #4]
 8002464:	2100      	movs	r1, #0
 8002466:	4808      	ldr	r0, [pc, #32]	; (8002488 <dwt_configurestskey+0x34>)
 8002468:	f7ff fea3 	bl	80021b2 <dwt_write32bitoffsetreg>
 800246c:	68a2      	ldr	r2, [r4, #8]
 800246e:	2100      	movs	r1, #0
 8002470:	4806      	ldr	r0, [pc, #24]	; (800248c <dwt_configurestskey+0x38>)
 8002472:	f7ff fe9e 	bl	80021b2 <dwt_write32bitoffsetreg>
 8002476:	68e2      	ldr	r2, [r4, #12]
 8002478:	2100      	movs	r1, #0
 800247a:	4805      	ldr	r0, [pc, #20]	; (8002490 <dwt_configurestskey+0x3c>)
 800247c:	f7ff fe99 	bl	80021b2 <dwt_write32bitoffsetreg>
 8002480:	bd10      	pop	{r4, pc}
 8002482:	bf00      	nop
 8002484:	0002000c 	.word	0x0002000c
 8002488:	00020010 	.word	0x00020010
 800248c:	00020014 	.word	0x00020014
 8002490:	00020018 	.word	0x00020018

08002494 <dwt_configurestsiv>:
 8002494:	b510      	push	{r4, lr}
 8002496:	4604      	mov	r4, r0
 8002498:	6802      	ldr	r2, [r0, #0]
 800249a:	2100      	movs	r1, #0
 800249c:	4809      	ldr	r0, [pc, #36]	; (80024c4 <dwt_configurestsiv+0x30>)
 800249e:	f7ff fe88 	bl	80021b2 <dwt_write32bitoffsetreg>
 80024a2:	6862      	ldr	r2, [r4, #4]
 80024a4:	2100      	movs	r1, #0
 80024a6:	4808      	ldr	r0, [pc, #32]	; (80024c8 <dwt_configurestsiv+0x34>)
 80024a8:	f7ff fe83 	bl	80021b2 <dwt_write32bitoffsetreg>
 80024ac:	68a2      	ldr	r2, [r4, #8]
 80024ae:	2100      	movs	r1, #0
 80024b0:	4806      	ldr	r0, [pc, #24]	; (80024cc <dwt_configurestsiv+0x38>)
 80024b2:	f7ff fe7e 	bl	80021b2 <dwt_write32bitoffsetreg>
 80024b6:	68e2      	ldr	r2, [r4, #12]
 80024b8:	2100      	movs	r1, #0
 80024ba:	4805      	ldr	r0, [pc, #20]	; (80024d0 <dwt_configurestsiv+0x3c>)
 80024bc:	f7ff fe79 	bl	80021b2 <dwt_write32bitoffsetreg>
 80024c0:	bd10      	pop	{r4, pc}
 80024c2:	bf00      	nop
 80024c4:	0002001c 	.word	0x0002001c
 80024c8:	00020020 	.word	0x00020020
 80024cc:	00020024 	.word	0x00020024
 80024d0:	00020028 	.word	0x00020028

080024d4 <dwt_configurestsloadiv>:
 80024d4:	b508      	push	{r3, lr}
 80024d6:	2301      	movs	r3, #1
 80024d8:	22ff      	movs	r2, #255	; 0xff
 80024da:	2100      	movs	r1, #0
 80024dc:	4801      	ldr	r0, [pc, #4]	; (80024e4 <dwt_configurestsloadiv+0x10>)
 80024de:	f7ff ffa8 	bl	8002432 <dwt_modify8bitoffsetreg>
 80024e2:	bd08      	pop	{r3, pc}
 80024e4:	00020004 	.word	0x00020004

080024e8 <dwt_setrxantennadelay>:
 80024e8:	b508      	push	{r3, lr}
 80024ea:	4602      	mov	r2, r0
 80024ec:	2100      	movs	r1, #0
 80024ee:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 80024f2:	f7ff fe97 	bl	8002224 <dwt_write16bitoffsetreg>
 80024f6:	bd08      	pop	{r3, pc}

080024f8 <dwt_settxantennadelay>:
 80024f8:	b508      	push	{r3, lr}
 80024fa:	4602      	mov	r2, r0
 80024fc:	2100      	movs	r1, #0
 80024fe:	4802      	ldr	r0, [pc, #8]	; (8002508 <dwt_settxantennadelay+0x10>)
 8002500:	f7ff fe90 	bl	8002224 <dwt_write16bitoffsetreg>
 8002504:	bd08      	pop	{r3, pc}
 8002506:	bf00      	nop
 8002508:	00010004 	.word	0x00010004

0800250c <dwt_writetxdata>:
 800250c:	1813      	adds	r3, r2, r0
 800250e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002512:	da20      	bge.n	8002556 <dwt_writetxdata+0x4a>
 8002514:	b570      	push	{r4, r5, r6, lr}
 8002516:	4605      	mov	r5, r0
 8002518:	460e      	mov	r6, r1
 800251a:	4614      	mov	r4, r2
 800251c:	2a7f      	cmp	r2, #127	; 0x7f
 800251e:	d808      	bhi.n	8002532 <dwt_writetxdata+0x26>
 8002520:	460b      	mov	r3, r1
 8002522:	4602      	mov	r2, r0
 8002524:	4621      	mov	r1, r4
 8002526:	f44f 10a0 	mov.w	r0, #1310720	; 0x140000
 800252a:	f7ff fe39 	bl	80021a0 <dwt_writetodevice>
 800252e:	2000      	movs	r0, #0
 8002530:	bd70      	pop	{r4, r5, r6, pc}
 8002532:	2214      	movs	r2, #20
 8002534:	2100      	movs	r1, #0
 8002536:	4809      	ldr	r0, [pc, #36]	; (800255c <dwt_writetxdata+0x50>)
 8002538:	f7ff fe3b 	bl	80021b2 <dwt_write32bitoffsetreg>
 800253c:	4622      	mov	r2, r4
 800253e:	2100      	movs	r1, #0
 8002540:	4807      	ldr	r0, [pc, #28]	; (8002560 <dwt_writetxdata+0x54>)
 8002542:	f7ff fe36 	bl	80021b2 <dwt_write32bitoffsetreg>
 8002546:	4633      	mov	r3, r6
 8002548:	462a      	mov	r2, r5
 800254a:	2100      	movs	r1, #0
 800254c:	f44f 10e8 	mov.w	r0, #1900544	; 0x1d0000
 8002550:	f7ff fe26 	bl	80021a0 <dwt_writetodevice>
 8002554:	e7eb      	b.n	800252e <dwt_writetxdata+0x22>
 8002556:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800255a:	4770      	bx	lr
 800255c:	001f0004 	.word	0x001f0004
 8002560:	001f0008 	.word	0x001f0008

08002564 <dwt_writetxfctrl>:
 8002564:	b508      	push	{r3, lr}
 8002566:	297f      	cmp	r1, #127	; 0x7f
 8002568:	d809      	bhi.n	800257e <dwt_writetxfctrl+0x1a>
 800256a:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800256e:	ea40 23c2 	orr.w	r3, r0, r2, lsl #11
 8002572:	4a0b      	ldr	r2, [pc, #44]	; (80025a0 <dwt_writetxfctrl+0x3c>)
 8002574:	2100      	movs	r1, #0
 8002576:	2024      	movs	r0, #36	; 0x24
 8002578:	f7ff fec6 	bl	8002308 <dwt_modify32bitoffsetreg>
 800257c:	bd08      	pop	{r3, pc}
 800257e:	3180      	adds	r1, #128	; 0x80
 8002580:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8002584:	ea40 23c2 	orr.w	r3, r0, r2, lsl #11
 8002588:	4a05      	ldr	r2, [pc, #20]	; (80025a0 <dwt_writetxfctrl+0x3c>)
 800258a:	2100      	movs	r1, #0
 800258c:	2024      	movs	r0, #36	; 0x24
 800258e:	f7ff febb 	bl	8002308 <dwt_modify32bitoffsetreg>
 8002592:	2100      	movs	r1, #0
 8002594:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8002598:	f7ff fea9 	bl	80022ee <dwt_read8bitoffsetreg>
 800259c:	e7ee      	b.n	800257c <dwt_writetxfctrl+0x18>
 800259e:	bf00      	nop
 80025a0:	fc00f400 	.word	0xfc00f400

080025a4 <dwt_readrxdata>:
 80025a4:	b570      	push	{r4, r5, r6, lr}
 80025a6:	4606      	mov	r6, r0
 80025a8:	460d      	mov	r5, r1
 80025aa:	4614      	mov	r4, r2
 80025ac:	4b13      	ldr	r3, [pc, #76]	; (80025fc <dwt_readrxdata+0x58>)
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	7bdb      	ldrb	r3, [r3, #15]
 80025b2:	2b03      	cmp	r3, #3
 80025b4:	d00d      	beq.n	80025d2 <dwt_readrxdata+0x2e>
 80025b6:	f44f 1090 	mov.w	r0, #1179648	; 0x120000
 80025ba:	1963      	adds	r3, r4, r5
 80025bc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80025c0:	da06      	bge.n	80025d0 <dwt_readrxdata+0x2c>
 80025c2:	2c7f      	cmp	r4, #127	; 0x7f
 80025c4:	d808      	bhi.n	80025d8 <dwt_readrxdata+0x34>
 80025c6:	4633      	mov	r3, r6
 80025c8:	462a      	mov	r2, r5
 80025ca:	4621      	mov	r1, r4
 80025cc:	f7ff fe5f 	bl	800228e <dwt_readfromdevice>
 80025d0:	bd70      	pop	{r4, r5, r6, pc}
 80025d2:	f44f 1098 	mov.w	r0, #1245184	; 0x130000
 80025d6:	e7f0      	b.n	80025ba <dwt_readrxdata+0x16>
 80025d8:	0c02      	lsrs	r2, r0, #16
 80025da:	2100      	movs	r1, #0
 80025dc:	4808      	ldr	r0, [pc, #32]	; (8002600 <dwt_readrxdata+0x5c>)
 80025de:	f7ff fde8 	bl	80021b2 <dwt_write32bitoffsetreg>
 80025e2:	4622      	mov	r2, r4
 80025e4:	2100      	movs	r1, #0
 80025e6:	4807      	ldr	r0, [pc, #28]	; (8002604 <dwt_readrxdata+0x60>)
 80025e8:	f7ff fde3 	bl	80021b2 <dwt_write32bitoffsetreg>
 80025ec:	4633      	mov	r3, r6
 80025ee:	462a      	mov	r2, r5
 80025f0:	2100      	movs	r1, #0
 80025f2:	f44f 10e8 	mov.w	r0, #1900544	; 0x1d0000
 80025f6:	f7ff fe4a 	bl	800228e <dwt_readfromdevice>
 80025fa:	e7e9      	b.n	80025d0 <dwt_readrxdata+0x2c>
 80025fc:	2000008c 	.word	0x2000008c
 8002600:	001f0004 	.word	0x001f0004
 8002604:	001f0008 	.word	0x001f0008

08002608 <dwt_readstsquality>:
 8002608:	b510      	push	{r4, lr}
 800260a:	4604      	mov	r4, r0
 800260c:	2100      	movs	r1, #0
 800260e:	4809      	ldr	r0, [pc, #36]	; (8002634 <dwt_readstsquality+0x2c>)
 8002610:	f7ff fe5c 	bl	80022cc <dwt_read16bitoffsetreg>
 8002614:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8002618:	f410 6f00 	tst.w	r0, #2048	; 0x800
 800261c:	d001      	beq.n	8002622 <dwt_readstsquality+0x1a>
 800261e:	f443 4370 	orr.w	r3, r3, #61440	; 0xf000
 8002622:	b21b      	sxth	r3, r3
 8002624:	8023      	strh	r3, [r4, #0]
 8002626:	4a04      	ldr	r2, [pc, #16]	; (8002638 <dwt_readstsquality+0x30>)
 8002628:	6812      	ldr	r2, [r2, #0]
 800262a:	f9b2 0012 	ldrsh.w	r0, [r2, #18]
 800262e:	1a18      	subs	r0, r3, r0
 8002630:	bd10      	pop	{r4, pc}
 8002632:	bf00      	nop
 8002634:	00020008 	.word	0x00020008
 8002638:	2000008c 	.word	0x2000008c

0800263c <dwt_readtxtimestamp>:
 800263c:	b508      	push	{r3, lr}
 800263e:	4603      	mov	r3, r0
 8002640:	2205      	movs	r2, #5
 8002642:	2100      	movs	r1, #0
 8002644:	2074      	movs	r0, #116	; 0x74
 8002646:	f7ff fe22 	bl	800228e <dwt_readfromdevice>
 800264a:	bd08      	pop	{r3, pc}

0800264c <dwt_readrxtimestamp>:
 800264c:	b508      	push	{r3, lr}
 800264e:	4603      	mov	r3, r0
 8002650:	4a0c      	ldr	r2, [pc, #48]	; (8002684 <dwt_readrxtimestamp+0x38>)
 8002652:	6812      	ldr	r2, [r2, #0]
 8002654:	7bd2      	ldrb	r2, [r2, #15]
 8002656:	2a01      	cmp	r2, #1
 8002658:	d008      	beq.n	800266c <dwt_readrxtimestamp+0x20>
 800265a:	2a03      	cmp	r2, #3
 800265c:	d10c      	bne.n	8002678 <dwt_readrxtimestamp+0x2c>
 800265e:	2205      	movs	r2, #5
 8002660:	2104      	movs	r1, #4
 8002662:	f44f 10f0 	mov.w	r0, #1966080	; 0x1e0000
 8002666:	f7ff fe12 	bl	800228e <dwt_readfromdevice>
 800266a:	bd08      	pop	{r3, pc}
 800266c:	2205      	movs	r2, #5
 800266e:	2100      	movs	r1, #0
 8002670:	4805      	ldr	r0, [pc, #20]	; (8002688 <dwt_readrxtimestamp+0x3c>)
 8002672:	f7ff fe0c 	bl	800228e <dwt_readfromdevice>
 8002676:	e7f8      	b.n	800266a <dwt_readrxtimestamp+0x1e>
 8002678:	2205      	movs	r2, #5
 800267a:	2100      	movs	r1, #0
 800267c:	2064      	movs	r0, #100	; 0x64
 800267e:	f7ff fe06 	bl	800228e <dwt_readfromdevice>
 8002682:	e7f2      	b.n	800266a <dwt_readrxtimestamp+0x1e>
 8002684:	2000008c 	.word	0x2000008c
 8002688:	00180004 	.word	0x00180004

0800268c <dwt_configureframefilter>:
 800268c:	b510      	push	{r4, lr}
 800268e:	2802      	cmp	r0, #2
 8002690:	d00b      	beq.n	80026aa <dwt_configureframefilter+0x1e>
 8002692:	2300      	movs	r3, #0
 8002694:	22fe      	movs	r2, #254	; 0xfe
 8002696:	4619      	mov	r1, r3
 8002698:	2010      	movs	r0, #16
 800269a:	f7ff feca 	bl	8002432 <dwt_modify8bitoffsetreg>
 800269e:	2200      	movs	r2, #0
 80026a0:	4611      	mov	r1, r2
 80026a2:	2014      	movs	r0, #20
 80026a4:	f7ff fdbe 	bl	8002224 <dwt_write16bitoffsetreg>
 80026a8:	bd10      	pop	{r4, pc}
 80026aa:	460c      	mov	r4, r1
 80026ac:	2301      	movs	r3, #1
 80026ae:	22ff      	movs	r2, #255	; 0xff
 80026b0:	2100      	movs	r1, #0
 80026b2:	2010      	movs	r0, #16
 80026b4:	f7ff febd 	bl	8002432 <dwt_modify8bitoffsetreg>
 80026b8:	4622      	mov	r2, r4
 80026ba:	2100      	movs	r1, #0
 80026bc:	2014      	movs	r0, #20
 80026be:	f7ff fdb1 	bl	8002224 <dwt_write16bitoffsetreg>
 80026c2:	e7f1      	b.n	80026a8 <dwt_configureframefilter+0x1c>

080026c4 <dwt_setpanid>:
 80026c4:	b508      	push	{r3, lr}
 80026c6:	4602      	mov	r2, r0
 80026c8:	2102      	movs	r1, #2
 80026ca:	200c      	movs	r0, #12
 80026cc:	f7ff fdaa 	bl	8002224 <dwt_write16bitoffsetreg>
 80026d0:	bd08      	pop	{r3, pc}

080026d2 <dwt_setaddress16>:
 80026d2:	b508      	push	{r3, lr}
 80026d4:	4602      	mov	r2, r0
 80026d6:	2100      	movs	r1, #0
 80026d8:	200c      	movs	r0, #12
 80026da:	f7ff fda3 	bl	8002224 <dwt_write16bitoffsetreg>
 80026de:	bd08      	pop	{r3, pc}

080026e0 <dwt_setrxaftertxdelay>:
 80026e0:	b538      	push	{r3, r4, r5, lr}
 80026e2:	4604      	mov	r4, r0
 80026e4:	4d07      	ldr	r5, [pc, #28]	; (8002704 <dwt_setrxaftertxdelay+0x24>)
 80026e6:	2100      	movs	r1, #0
 80026e8:	4628      	mov	r0, r5
 80026ea:	f7ff fdd8 	bl	800229e <dwt_read32bitoffsetreg>
 80026ee:	0d00      	lsrs	r0, r0, #20
 80026f0:	0500      	lsls	r0, r0, #20
 80026f2:	f3c4 0213 	ubfx	r2, r4, #0, #20
 80026f6:	4302      	orrs	r2, r0
 80026f8:	2100      	movs	r1, #0
 80026fa:	4628      	mov	r0, r5
 80026fc:	f7ff fd59 	bl	80021b2 <dwt_write32bitoffsetreg>
 8002700:	bd38      	pop	{r3, r4, r5, pc}
 8002702:	bf00      	nop
 8002704:	00010008 	.word	0x00010008

08002708 <dwt_setdelayedtrxtime>:
 8002708:	b508      	push	{r3, lr}
 800270a:	4602      	mov	r2, r0
 800270c:	2100      	movs	r1, #0
 800270e:	202c      	movs	r0, #44	; 0x2c
 8002710:	f7ff fd4f 	bl	80021b2 <dwt_write32bitoffsetreg>
 8002714:	bd08      	pop	{r3, pc}
	...

08002718 <dwt_starttx>:
 8002718:	b508      	push	{r3, lr}
 800271a:	f010 0f1d 	tst.w	r0, #29
 800271e:	d06d      	beq.n	80027fc <dwt_starttx+0xe4>
 8002720:	f010 0f01 	tst.w	r0, #1
 8002724:	d01f      	beq.n	8002766 <dwt_starttx+0x4e>
 8002726:	f010 0f02 	tst.w	r0, #2
 800272a:	d015      	beq.n	8002758 <dwt_starttx+0x40>
 800272c:	2300      	movs	r3, #0
 800272e:	461a      	mov	r2, r3
 8002730:	4619      	mov	r1, r3
 8002732:	200d      	movs	r0, #13
 8002734:	f7ff fd34 	bl	80021a0 <dwt_writetodevice>
 8002738:	2103      	movs	r1, #3
 800273a:	2044      	movs	r0, #68	; 0x44
 800273c:	f7ff fdd7 	bl	80022ee <dwt_read8bitoffsetreg>
 8002740:	f010 0f08 	tst.w	r0, #8
 8002744:	d151      	bne.n	80027ea <dwt_starttx+0xd2>
 8002746:	2100      	movs	r1, #0
 8002748:	4841      	ldr	r0, [pc, #260]	; (8002850 <dwt_starttx+0x138>)
 800274a:	f7ff fda8 	bl	800229e <dwt_read32bitoffsetreg>
 800274e:	f5b0 2f50 	cmp.w	r0, #851968	; 0xd0000
 8002752:	d041      	beq.n	80027d8 <dwt_starttx+0xc0>
 8002754:	2000      	movs	r0, #0
 8002756:	bd08      	pop	{r3, pc}
 8002758:	2300      	movs	r3, #0
 800275a:	461a      	mov	r2, r3
 800275c:	4619      	mov	r1, r3
 800275e:	2003      	movs	r0, #3
 8002760:	f7ff fd1e 	bl	80021a0 <dwt_writetodevice>
 8002764:	e7e8      	b.n	8002738 <dwt_starttx+0x20>
 8002766:	f010 0f08 	tst.w	r0, #8
 800276a:	d010      	beq.n	800278e <dwt_starttx+0x76>
 800276c:	f010 0f02 	tst.w	r0, #2
 8002770:	d006      	beq.n	8002780 <dwt_starttx+0x68>
 8002772:	2300      	movs	r3, #0
 8002774:	461a      	mov	r2, r3
 8002776:	4619      	mov	r1, r3
 8002778:	200f      	movs	r0, #15
 800277a:	f7ff fd11 	bl	80021a0 <dwt_writetodevice>
 800277e:	e7db      	b.n	8002738 <dwt_starttx+0x20>
 8002780:	2300      	movs	r3, #0
 8002782:	461a      	mov	r2, r3
 8002784:	4619      	mov	r1, r3
 8002786:	2007      	movs	r0, #7
 8002788:	f7ff fd0a 	bl	80021a0 <dwt_writetodevice>
 800278c:	e7d4      	b.n	8002738 <dwt_starttx+0x20>
 800278e:	f010 0f10 	tst.w	r0, #16
 8002792:	d010      	beq.n	80027b6 <dwt_starttx+0x9e>
 8002794:	f010 0f02 	tst.w	r0, #2
 8002798:	d006      	beq.n	80027a8 <dwt_starttx+0x90>
 800279a:	2300      	movs	r3, #0
 800279c:	461a      	mov	r2, r3
 800279e:	4619      	mov	r1, r3
 80027a0:	200e      	movs	r0, #14
 80027a2:	f7ff fcfd 	bl	80021a0 <dwt_writetodevice>
 80027a6:	e7c7      	b.n	8002738 <dwt_starttx+0x20>
 80027a8:	2300      	movs	r3, #0
 80027aa:	461a      	mov	r2, r3
 80027ac:	4619      	mov	r1, r3
 80027ae:	2005      	movs	r0, #5
 80027b0:	f7ff fcf6 	bl	80021a0 <dwt_writetodevice>
 80027b4:	e7c0      	b.n	8002738 <dwt_starttx+0x20>
 80027b6:	f010 0f02 	tst.w	r0, #2
 80027ba:	d006      	beq.n	80027ca <dwt_starttx+0xb2>
 80027bc:	2300      	movs	r3, #0
 80027be:	461a      	mov	r2, r3
 80027c0:	4619      	mov	r1, r3
 80027c2:	2010      	movs	r0, #16
 80027c4:	f7ff fcec 	bl	80021a0 <dwt_writetodevice>
 80027c8:	e7b6      	b.n	8002738 <dwt_starttx+0x20>
 80027ca:	2300      	movs	r3, #0
 80027cc:	461a      	mov	r2, r3
 80027ce:	4619      	mov	r1, r3
 80027d0:	2009      	movs	r0, #9
 80027d2:	f7ff fce5 	bl	80021a0 <dwt_writetodevice>
 80027d6:	e7af      	b.n	8002738 <dwt_starttx+0x20>
 80027d8:	2300      	movs	r3, #0
 80027da:	461a      	mov	r2, r3
 80027dc:	4619      	mov	r1, r3
 80027de:	4618      	mov	r0, r3
 80027e0:	f7ff fcde 	bl	80021a0 <dwt_writetodevice>
 80027e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80027e8:	e7b5      	b.n	8002756 <dwt_starttx+0x3e>
 80027ea:	2300      	movs	r3, #0
 80027ec:	461a      	mov	r2, r3
 80027ee:	4619      	mov	r1, r3
 80027f0:	4618      	mov	r0, r3
 80027f2:	f7ff fcd5 	bl	80021a0 <dwt_writetodevice>
 80027f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80027fa:	e7ac      	b.n	8002756 <dwt_starttx+0x3e>
 80027fc:	f010 0f20 	tst.w	r0, #32
 8002800:	d012      	beq.n	8002828 <dwt_starttx+0x110>
 8002802:	f010 0f02 	tst.w	r0, #2
 8002806:	d007      	beq.n	8002818 <dwt_starttx+0x100>
 8002808:	2300      	movs	r3, #0
 800280a:	461a      	mov	r2, r3
 800280c:	4619      	mov	r1, r3
 800280e:	2011      	movs	r0, #17
 8002810:	f7ff fcc6 	bl	80021a0 <dwt_writetodevice>
 8002814:	2000      	movs	r0, #0
 8002816:	e79e      	b.n	8002756 <dwt_starttx+0x3e>
 8002818:	2300      	movs	r3, #0
 800281a:	461a      	mov	r2, r3
 800281c:	4619      	mov	r1, r3
 800281e:	200b      	movs	r0, #11
 8002820:	f7ff fcbe 	bl	80021a0 <dwt_writetodevice>
 8002824:	2000      	movs	r0, #0
 8002826:	e796      	b.n	8002756 <dwt_starttx+0x3e>
 8002828:	f010 0f02 	tst.w	r0, #2
 800282c:	d007      	beq.n	800283e <dwt_starttx+0x126>
 800282e:	2300      	movs	r3, #0
 8002830:	461a      	mov	r2, r3
 8002832:	4619      	mov	r1, r3
 8002834:	200c      	movs	r0, #12
 8002836:	f7ff fcb3 	bl	80021a0 <dwt_writetodevice>
 800283a:	2000      	movs	r0, #0
 800283c:	e78b      	b.n	8002756 <dwt_starttx+0x3e>
 800283e:	2300      	movs	r3, #0
 8002840:	461a      	mov	r2, r3
 8002842:	4619      	mov	r1, r3
 8002844:	2001      	movs	r0, #1
 8002846:	f7ff fcab 	bl	80021a0 <dwt_writetodevice>
 800284a:	2000      	movs	r0, #0
 800284c:	e783      	b.n	8002756 <dwt_starttx+0x3e>
 800284e:	bf00      	nop
 8002850:	000f0030 	.word	0x000f0030

08002854 <dwt_setrxtimeout>:
 8002854:	b508      	push	{r3, lr}
 8002856:	b168      	cbz	r0, 8002874 <dwt_setrxtimeout+0x20>
 8002858:	4602      	mov	r2, r0
 800285a:	2100      	movs	r1, #0
 800285c:	2034      	movs	r0, #52	; 0x34
 800285e:	f7ff fca8 	bl	80021b2 <dwt_write32bitoffsetreg>
 8002862:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002866:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800286a:	2100      	movs	r1, #0
 800286c:	2010      	movs	r0, #16
 800286e:	f7ff fdc9 	bl	8002404 <dwt_modify16bitoffsetreg>
 8002872:	bd08      	pop	{r3, pc}
 8002874:	2300      	movs	r3, #0
 8002876:	f64f 52ff 	movw	r2, #65023	; 0xfdff
 800287a:	4619      	mov	r1, r3
 800287c:	2010      	movs	r0, #16
 800287e:	f7ff fdc1 	bl	8002404 <dwt_modify16bitoffsetreg>
 8002882:	e7f6      	b.n	8002872 <dwt_setrxtimeout+0x1e>

08002884 <dwt_calcbandwidthadj>:
 8002884:	b538      	push	{r3, r4, r5, lr}
 8002886:	4605      	mov	r5, r0
 8002888:	460c      	mov	r4, r1
 800288a:	2001      	movs	r0, #1
 800288c:	f7ff fcda 	bl	8002244 <dwt_force_clocks>
 8002890:	2100      	movs	r1, #0
 8002892:	4620      	mov	r0, r4
 8002894:	f7ff fd60 	bl	8002358 <dwt_enable_rf_tx>
 8002898:	4620      	mov	r0, r4
 800289a:	f7ff fd97 	bl	80023cc <dwt_enable_rftx_blocks>
 800289e:	f3c5 020b 	ubfx	r2, r5, #0, #12
 80028a2:	2100      	movs	r1, #0
 80028a4:	480f      	ldr	r0, [pc, #60]	; (80028e4 <dwt_calcbandwidthadj+0x60>)
 80028a6:	f7ff fcbd 	bl	8002224 <dwt_write16bitoffsetreg>
 80028aa:	2303      	movs	r3, #3
 80028ac:	22ff      	movs	r2, #255	; 0xff
 80028ae:	2100      	movs	r1, #0
 80028b0:	480d      	ldr	r0, [pc, #52]	; (80028e8 <dwt_calcbandwidthadj+0x64>)
 80028b2:	f7ff fdbe 	bl	8002432 <dwt_modify8bitoffsetreg>
 80028b6:	2100      	movs	r1, #0
 80028b8:	480b      	ldr	r0, [pc, #44]	; (80028e8 <dwt_calcbandwidthadj+0x64>)
 80028ba:	f7ff fd18 	bl	80022ee <dwt_read8bitoffsetreg>
 80028be:	f010 0f01 	tst.w	r0, #1
 80028c2:	d1f8      	bne.n	80028b6 <dwt_calcbandwidthadj+0x32>
 80028c4:	f7ff fc8a 	bl	80021dc <dwt_disable_rftx_blocks>
 80028c8:	2000      	movs	r0, #0
 80028ca:	f7ff fc91 	bl	80021f0 <dwt_disable_rf_tx>
 80028ce:	2005      	movs	r0, #5
 80028d0:	f7ff fcb8 	bl	8002244 <dwt_force_clocks>
 80028d4:	2100      	movs	r1, #0
 80028d6:	4805      	ldr	r0, [pc, #20]	; (80028ec <dwt_calcbandwidthadj+0x68>)
 80028d8:	f7ff fd09 	bl	80022ee <dwt_read8bitoffsetreg>
 80028dc:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80028e0:	bd38      	pop	{r3, r4, r5, pc}
 80028e2:	bf00      	nop
 80028e4:	0008001c 	.word	0x0008001c
 80028e8:	00080010 	.word	0x00080010
 80028ec:	0007001c 	.word	0x0007001c

080028f0 <dwt_configuretxrf>:
 80028f0:	b510      	push	{r4, lr}
 80028f2:	4604      	mov	r4, r0
 80028f4:	8903      	ldrh	r3, [r0, #8]
 80028f6:	b953      	cbnz	r3, 800290e <dwt_configuretxrf+0x1e>
 80028f8:	7802      	ldrb	r2, [r0, #0]
 80028fa:	2100      	movs	r1, #0
 80028fc:	480b      	ldr	r0, [pc, #44]	; (800292c <dwt_configuretxrf+0x3c>)
 80028fe:	f7ff fcb9 	bl	8002274 <dwt_write8bitoffsetreg>
 8002902:	6862      	ldr	r2, [r4, #4]
 8002904:	2100      	movs	r1, #0
 8002906:	480a      	ldr	r0, [pc, #40]	; (8002930 <dwt_configuretxrf+0x40>)
 8002908:	f7ff fc53 	bl	80021b2 <dwt_write32bitoffsetreg>
 800290c:	bd10      	pop	{r4, pc}
 800290e:	2100      	movs	r1, #0
 8002910:	4808      	ldr	r0, [pc, #32]	; (8002934 <dwt_configuretxrf+0x44>)
 8002912:	f7ff fcec 	bl	80022ee <dwt_read8bitoffsetreg>
 8002916:	f010 0f01 	tst.w	r0, #1
 800291a:	d104      	bne.n	8002926 <dwt_configuretxrf+0x36>
 800291c:	2105      	movs	r1, #5
 800291e:	8920      	ldrh	r0, [r4, #8]
 8002920:	f7ff ffb0 	bl	8002884 <dwt_calcbandwidthadj>
 8002924:	e7ed      	b.n	8002902 <dwt_configuretxrf+0x12>
 8002926:	2109      	movs	r1, #9
 8002928:	e7f9      	b.n	800291e <dwt_configuretxrf+0x2e>
 800292a:	bf00      	nop
 800292c:	0007001c 	.word	0x0007001c
 8002930:	0001000c 	.word	0x0001000c
 8002934:	00010014 	.word	0x00010014

08002938 <decamutexon>:
 * output parameters
 *
 * returns the state of the DW1000 interrupt
 */
decaIrqStatus_t decamutexon(void)           
{
 8002938:	b510      	push	{r4, lr}
	decaIrqStatus_t s = port_GetEXT_IRQStatus();
 800293a:	f000 fbc3 	bl	80030c4 <port_GetEXT_IRQStatus>

	if(s) {
 800293e:	4604      	mov	r4, r0
 8002940:	b908      	cbnz	r0, 8002946 <decamutexon+0xe>
		port_DisableEXT_IRQ(); //disable the external interrupt line
	}
	return s ;   // return state before disable, value is used to re-enable in decamutexoff call
}
 8002942:	4620      	mov	r0, r4
 8002944:	bd10      	pop	{r4, pc}
		port_DisableEXT_IRQ(); //disable the external interrupt line
 8002946:	f000 fb8e 	bl	8003066 <port_DisableEXT_IRQ>
	return s ;   // return state before disable, value is used to re-enable in decamutexoff call
 800294a:	e7fa      	b.n	8002942 <decamutexon+0xa>

0800294c <decamutexoff>:
 *
 * returns the state of the DW1000 interrupt
 */
void decamutexoff(decaIrqStatus_t s)        // put a function here that re-enables the interrupt at the end of the critical section
{
	if(s) { //need to check the port state as we can't use level sensitive interrupt on the STM ARM
 800294c:	b900      	cbnz	r0, 8002950 <decamutexoff+0x4>
 800294e:	4770      	bx	lr
{
 8002950:	b508      	push	{r3, lr}
		port_EnableEXT_IRQ();
 8002952:	f000 fb8f 	bl	8003074 <port_EnableEXT_IRQ>
	}
}
 8002956:	bd08      	pop	{r3, pc}

08002958 <writetospiwithcrc>:
                uint16_t      headerLength,
                const uint8_t *headerBuffer,
                uint16_t      bodyLength,
                const uint8_t *bodyBuffer,
                uint8_t       crc8)
{
 8002958:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800295c:	4681      	mov	r9, r0
 800295e:	4688      	mov	r8, r1
 8002960:	4617      	mov	r7, r2
 8002962:	461e      	mov	r6, r3
    decaIrqStatus_t  stat ;
    stat = decamutexon() ;
 8002964:	f7ff ffe8 	bl	8002938 <decamutexon>
 8002968:	4604      	mov	r4, r0
    while (HAL_SPI_GetState(&hspi1) != HAL_SPI_STATE_READY);
 800296a:	4815      	ldr	r0, [pc, #84]	; (80029c0 <writetospiwithcrc+0x68>)
 800296c:	f002 fa6d 	bl	8004e4a <HAL_SPI_GetState>
 8002970:	2801      	cmp	r0, #1
 8002972:	d1fa      	bne.n	800296a <writetospiwithcrc+0x12>

    HAL_GPIO_WritePin(DW_NSS_GPIO_Port, DW_NSS_Pin, GPIO_PIN_RESET); /**< Put chip select line low */
 8002974:	2200      	movs	r2, #0
 8002976:	2110      	movs	r1, #16
 8002978:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800297c:	f000 ffb4 	bl	80038e8 <HAL_GPIO_WritePin>

    HAL_SPI_Transmit(&hspi1, (uint8_t *)headerBuffer, headerLength, 10);    /* Send header in polling mode */
 8002980:	4d0f      	ldr	r5, [pc, #60]	; (80029c0 <writetospiwithcrc+0x68>)
 8002982:	230a      	movs	r3, #10
 8002984:	464a      	mov	r2, r9
 8002986:	4641      	mov	r1, r8
 8002988:	4628      	mov	r0, r5
 800298a:	f001 ff15 	bl	80047b8 <HAL_SPI_Transmit>
    HAL_SPI_Transmit(&hspi1, (uint8_t *)bodyBuffer, bodyLength, 10);        /* Send data in polling mode */
 800298e:	230a      	movs	r3, #10
 8002990:	463a      	mov	r2, r7
 8002992:	4631      	mov	r1, r6
 8002994:	4628      	mov	r0, r5
 8002996:	f001 ff0f 	bl	80047b8 <HAL_SPI_Transmit>
    HAL_SPI_Transmit(&hspi1, (uint8_t *)&crc8, 1, 10);      /* Send data in polling mode */
 800299a:	230a      	movs	r3, #10
 800299c:	2201      	movs	r2, #1
 800299e:	a908      	add	r1, sp, #32
 80029a0:	4628      	mov	r0, r5
 80029a2:	f001 ff09 	bl	80047b8 <HAL_SPI_Transmit>

    HAL_GPIO_WritePin(DW_NSS_GPIO_Port, DW_NSS_Pin, GPIO_PIN_SET); /**< Put chip select line high */
 80029a6:	2201      	movs	r2, #1
 80029a8:	2110      	movs	r1, #16
 80029aa:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80029ae:	f000 ff9b 	bl	80038e8 <HAL_GPIO_WritePin>
    decamutexoff(stat);
 80029b2:	4620      	mov	r0, r4
 80029b4:	f7ff ffca 	bl	800294c <decamutexoff>
    return 0;
} // end writetospiwithcrc()
 80029b8:	2000      	movs	r0, #0
 80029ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80029be:	bf00      	nop
 80029c0:	20000328 	.word	0x20000328

080029c4 <writetospi>:
 */
int writetospi(uint16_t       headerLength,
               const uint8_t  *headerBuffer,
               uint16_t       bodyLength,
               const uint8_t  *bodyBuffer)
{
 80029c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80029c8:	4607      	mov	r7, r0
 80029ca:	460e      	mov	r6, r1
 80029cc:	4614      	mov	r4, r2
 80029ce:	4698      	mov	r8, r3
    decaIrqStatus_t  stat ;
    stat = decamutexon() ;
 80029d0:	f7ff ffb2 	bl	8002938 <decamutexon>
 80029d4:	4605      	mov	r5, r0

    while (HAL_SPI_GetState(&hspi1) != HAL_SPI_STATE_READY);
 80029d6:	4813      	ldr	r0, [pc, #76]	; (8002a24 <writetospi+0x60>)
 80029d8:	f002 fa37 	bl	8004e4a <HAL_SPI_GetState>
 80029dc:	2801      	cmp	r0, #1
 80029de:	d1fa      	bne.n	80029d6 <writetospi+0x12>

    HAL_GPIO_WritePin(DW_NSS_GPIO_Port, DW_NSS_Pin, GPIO_PIN_RESET); /**< Put chip select line low */
 80029e0:	2200      	movs	r2, #0
 80029e2:	2110      	movs	r1, #16
 80029e4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80029e8:	f000 ff7e 	bl	80038e8 <HAL_GPIO_WritePin>

    HAL_SPI_Transmit(&hspi1, (uint8_t *)headerBuffer, headerLength, HAL_MAX_DELAY); /* Send header in polling mode */
 80029ec:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80029f0:	463a      	mov	r2, r7
 80029f2:	4631      	mov	r1, r6
 80029f4:	480b      	ldr	r0, [pc, #44]	; (8002a24 <writetospi+0x60>)
 80029f6:	f001 fedf 	bl	80047b8 <HAL_SPI_Transmit>

    if(bodyLength != 0)
 80029fa:	b95c      	cbnz	r4, 8002a14 <writetospi+0x50>
        HAL_SPI_Transmit(&hspi1, (uint8_t *)bodyBuffer,   bodyLength, HAL_MAX_DELAY);     /* Send data in polling mode */

    HAL_GPIO_WritePin(DW_NSS_GPIO_Port, DW_NSS_Pin, GPIO_PIN_SET); /**< Put chip select line high */
 80029fc:	2201      	movs	r2, #1
 80029fe:	2110      	movs	r1, #16
 8002a00:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002a04:	f000 ff70 	bl	80038e8 <HAL_GPIO_WritePin>
    decamutexoff(stat);
 8002a08:	4628      	mov	r0, r5
 8002a0a:	f7ff ff9f 	bl	800294c <decamutexoff>
    return 0;
} // end writetospi()
 8002a0e:	2000      	movs	r0, #0
 8002a10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        HAL_SPI_Transmit(&hspi1, (uint8_t *)bodyBuffer,   bodyLength, HAL_MAX_DELAY);     /* Send data in polling mode */
 8002a14:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002a18:	4622      	mov	r2, r4
 8002a1a:	4641      	mov	r1, r8
 8002a1c:	4801      	ldr	r0, [pc, #4]	; (8002a24 <writetospi+0x60>)
 8002a1e:	f001 fecb 	bl	80047b8 <HAL_SPI_Transmit>
 8002a22:	e7eb      	b.n	80029fc <writetospi+0x38>
 8002a24:	20000328 	.word	0x20000328

08002a28 <readfromspi>:
//#pragma GCC optimize ("O3")
int readfromspi(uint16_t  headerLength,
                uint8_t   *headerBuffer,
                uint16_t  readlength,
                uint8_t   *readBuffer)
{
 8002a28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002a2c:	4605      	mov	r5, r0
 8002a2e:	460e      	mov	r6, r1
 8002a30:	4691      	mov	r9, r2
 8002a32:	4698      	mov	r8, r3
    int i;

    decaIrqStatus_t  stat ;
    stat = decamutexon() ;
 8002a34:	f7ff ff80 	bl	8002938 <decamutexon>
 8002a38:	4607      	mov	r7, r0

    /* Blocking: Check whether previous transfer has been finished */
    while (HAL_SPI_GetState(&hspi1) != HAL_SPI_STATE_READY);
 8002a3a:	4814      	ldr	r0, [pc, #80]	; (8002a8c <readfromspi+0x64>)
 8002a3c:	f002 fa05 	bl	8004e4a <HAL_SPI_GetState>
 8002a40:	2801      	cmp	r0, #1
 8002a42:	d1fa      	bne.n	8002a3a <readfromspi+0x12>

    HAL_GPIO_WritePin(DW_NSS_GPIO_Port, DW_NSS_Pin, GPIO_PIN_RESET); /**< Put chip select line low */
 8002a44:	2200      	movs	r2, #0
 8002a46:	2110      	movs	r1, #16
 8002a48:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002a4c:	f000 ff4c 	bl	80038e8 <HAL_GPIO_WritePin>

    /* Send header */
    for(i=0; i<headerLength; i++)
 8002a50:	2400      	movs	r4, #0
 8002a52:	e007      	b.n	8002a64 <readfromspi+0x3c>
    {
        HAL_SPI_Transmit(&hspi1, (uint8_t*)&headerBuffer[i], 1, HAL_MAX_DELAY); //No timeout
 8002a54:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002a58:	2201      	movs	r2, #1
 8002a5a:	1931      	adds	r1, r6, r4
 8002a5c:	480b      	ldr	r0, [pc, #44]	; (8002a8c <readfromspi+0x64>)
 8002a5e:	f001 feab 	bl	80047b8 <HAL_SPI_Transmit>
    for(i=0; i<headerLength; i++)
 8002a62:	3401      	adds	r4, #1
 8002a64:	42a5      	cmp	r5, r4
 8002a66:	dcf5      	bgt.n	8002a54 <readfromspi+0x2c>

    /* for the data buffer use LL functions directly as the HAL SPI read function
     * has issue reading single bytes */


    HAL_SPI_Receive(&hspi1, readBuffer, readlength, 100);
 8002a68:	2364      	movs	r3, #100	; 0x64
 8002a6a:	464a      	mov	r2, r9
 8002a6c:	4641      	mov	r1, r8
 8002a6e:	4807      	ldr	r0, [pc, #28]	; (8002a8c <readfromspi+0x64>)
 8002a70:	f002 f917 	bl	8004ca2 <HAL_SPI_Receive>

    HAL_GPIO_WritePin(DW_NSS_GPIO_Port, DW_NSS_Pin, GPIO_PIN_SET); /**< Put chip select line high */
 8002a74:	2201      	movs	r2, #1
 8002a76:	2110      	movs	r1, #16
 8002a78:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002a7c:	f000 ff34 	bl	80038e8 <HAL_GPIO_WritePin>

    decamutexoff(stat);
 8002a80:	4638      	mov	r0, r7
 8002a82:	f7ff ff63 	bl	800294c <decamutexoff>

    return 0;
} // end readfromspi()
 8002a86:	2000      	movs	r0, #0
 8002a88:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002a8c:	20000328 	.word	0x20000328

08002a90 <MX_DMA_Init>:
 8002a90:	b500      	push	{lr}
 8002a92:	b083      	sub	sp, #12
 8002a94:	4b0a      	ldr	r3, [pc, #40]	; (8002ac0 <MX_DMA_Init+0x30>)
 8002a96:	695a      	ldr	r2, [r3, #20]
 8002a98:	f042 0201 	orr.w	r2, r2, #1
 8002a9c:	615a      	str	r2, [r3, #20]
 8002a9e:	695b      	ldr	r3, [r3, #20]
 8002aa0:	f003 0301 	and.w	r3, r3, #1
 8002aa4:	9301      	str	r3, [sp, #4]
 8002aa6:	9b01      	ldr	r3, [sp, #4]
 8002aa8:	2200      	movs	r2, #0
 8002aaa:	4611      	mov	r1, r2
 8002aac:	200f      	movs	r0, #15
 8002aae:	f000 fc9b 	bl	80033e8 <HAL_NVIC_SetPriority>
 8002ab2:	200f      	movs	r0, #15
 8002ab4:	f000 fcd0 	bl	8003458 <HAL_NVIC_EnableIRQ>
 8002ab8:	b003      	add	sp, #12
 8002aba:	f85d fb04 	ldr.w	pc, [sp], #4
 8002abe:	bf00      	nop
 8002ac0:	40021000 	.word	0x40021000

08002ac4 <send_tx_poll_msg>:
/*
 * The 'poll' message initiating the ranging exchange includes a 32-bit counter which is part
 * of the IV used to generate the scrambled timestamp sequence (STS) in the transmitted packet.
 */
static void send_tx_poll_msg(void)
{
 8002ac4:	b510      	push	{r4, lr}
    /* Write frame data to DW IC and prepare transmission. See NOTE 7 below. */
    tx_poll_msg[ALL_MSG_SN_IDX] = frame_seq_nb;
 8002ac6:	4c0e      	ldr	r4, [pc, #56]	; (8002b00 <send_tx_poll_msg+0x3c>)
 8002ac8:	4b0e      	ldr	r3, [pc, #56]	; (8002b04 <send_tx_poll_msg+0x40>)
 8002aca:	781b      	ldrb	r3, [r3, #0]
 8002acc:	70a3      	strb	r3, [r4, #2]

    dwt_write32bitreg(SYS_STATUS_ID, SYS_STATUS_TXFRS_BIT_MASK);
 8002ace:	2280      	movs	r2, #128	; 0x80
 8002ad0:	2100      	movs	r1, #0
 8002ad2:	2044      	movs	r0, #68	; 0x44
 8002ad4:	f7ff fb6d 	bl	80021b2 <dwt_write32bitoffsetreg>
    dwt_writetxdata(sizeof(tx_poll_msg), tx_poll_msg, 0); /* Zero offset in TX buffer. */
 8002ad8:	2200      	movs	r2, #0
 8002ada:	4621      	mov	r1, r4
 8002adc:	200c      	movs	r0, #12
 8002ade:	f7ff fd15 	bl	800250c <dwt_writetxdata>
    dwt_writetxfctrl(sizeof(tx_poll_msg), 0, 1); /* Zero offset in TX buffer, ranging. */
 8002ae2:	2201      	movs	r2, #1
 8002ae4:	2100      	movs	r1, #0
 8002ae6:	200c      	movs	r0, #12
 8002ae8:	f7ff fd3c 	bl	8002564 <dwt_writetxfctrl>

    /* Start transmission. */
    dwt_starttx(DWT_START_TX_IMMEDIATE | DWT_RESPONSE_EXPECTED);
 8002aec:	2002      	movs	r0, #2
 8002aee:	f7ff fe13 	bl	8002718 <dwt_starttx>

    /* Clear TXFRS event. */
    dwt_write32bitreg(SYS_STATUS_ID, SYS_STATUS_TXFRS_BIT_MASK);
 8002af2:	2280      	movs	r2, #128	; 0x80
 8002af4:	2100      	movs	r1, #0
 8002af6:	2044      	movs	r0, #68	; 0x44
 8002af8:	f7ff fb5b 	bl	80021b2 <dwt_write32bitoffsetreg>
}
 8002afc:	bd10      	pop	{r4, pc}
 8002afe:	bf00      	nop
 8002b00:	200000f0 	.word	0x200000f0
 8002b04:	200002cc 	.word	0x200002cc

08002b08 <ds_twr_initiator_sts>:
 * @param  none
 *
 * @return none
 */
int ds_twr_initiator_sts(void)
{
 8002b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b0c:	b085      	sub	sp, #20
    int16_t stsQual; /* This will contain STS quality index and status */
    int goodSts = 0; /* Used for checking STS quality in received signal */
    uint8_t firstLoopFlag = 0; /* Used for checking if the program has gone through the main loop for the first time */

    /* Reset DW IC */
    my_reset_DWIC(); /* Target specific drive of RSTn line into DW IC low for a period. */
 8002b0e:	f000 fae1 	bl	80030d4 <my_reset_DWIC>

    /* Configure the TX spectrum parameters (power, PG delay and PG count) */
    if(config_options.chan == 5)
 8002b12:	4bb8      	ldr	r3, [pc, #736]	; (8002df4 <ds_twr_initiator_sts+0x2ec>)
 8002b14:	781b      	ldrb	r3, [r3, #0]
 8002b16:	2b05      	cmp	r3, #5
 8002b18:	d02a      	beq.n	8002b70 <ds_twr_initiator_sts+0x68>
    {
        dwt_configuretxrf(&txconfig_options);
    }
    else
    {
        dwt_configuretxrf(&txconfig_options_ch9);
 8002b1a:	48b7      	ldr	r0, [pc, #732]	; (8002df8 <ds_twr_initiator_sts+0x2f0>)
 8002b1c:	f7ff fee8 	bl	80028f0 <dwt_configuretxrf>
    }

    /* ====> Enable frame filtering <==== */
#if INITIATOR_TYPE == 'E'
    // Enable 802.15.4 frame filtering to process only relevant data frames
	dwt_configureframefilter(DWT_FF_ENABLE_802_15_4, DWT_FF_DATA_EN);
 8002b20:	2102      	movs	r1, #2
 8002b22:	4608      	mov	r0, r1
 8002b24:	f7ff fdb2 	bl	800268c <dwt_configureframefilter>
    // Set the Personal Area Network (PAN) ID to 0xDECA
	dwt_setpanid(0xDECA);
 8002b28:	f64d 60ca 	movw	r0, #57034	; 0xdeca
 8002b2c:	f7ff fdca 	bl	80026c4 <dwt_setpanid>
    // Assign the device's 16-bit short address to 0x4556
	dwt_setaddress16(0x4556);
 8002b30:	f244 5056 	movw	r0, #17750	; 0x4556
 8002b34:	f7ff fdcd 	bl	80026d2 <dwt_setaddress16>
	dwt_setpanid(0xDECA);
	dwt_setaddress16(0x4756);
#endif

    /* Apply default antenna delay value. See NOTE 2 below. */
    dwt_setrxantennadelay(RX_ANT_DLY);
 8002b38:	f244 008d 	movw	r0, #16525	; 0x408d
 8002b3c:	f7ff fcd4 	bl	80024e8 <dwt_setrxantennadelay>
    dwt_settxantennadelay(TX_ANT_DLY);
 8002b40:	f244 008d 	movw	r0, #16525	; 0x408d
 8002b44:	f7ff fcd8 	bl	80024f8 <dwt_settxantennadelay>

    /* Set expected response's delay and timeout. See NOTE 14, 17 and 18 below.
     * As this example only handles one incoming frame with always the same delay and timeout, those values can be set here once for all. */
    dwt_setrxaftertxdelay(POLL_TX_TO_RESP_RX_DLY_UUS);
 8002b48:	f240 30b1 	movw	r0, #945	; 0x3b1
 8002b4c:	f7ff fdc8 	bl	80026e0 <dwt_setrxaftertxdelay>
    dwt_setrxtimeout(RESP_RX_TIMEOUT_UUS);
 8002b50:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8002b54:	f7ff fe7e 	bl	8002854 <dwt_setrxtimeout>

    /* Set expected response's timeout. See NOTE 1 and 5 below.
     * As this example only handles one incoming frame with always the same delay, this value can be set here once for all. */
    set_resp_rx_timeout(RESP_RX_TIMEOUT_UUS, &config_options);
 8002b58:	49a6      	ldr	r1, [pc, #664]	; (8002df4 <ds_twr_initiator_sts+0x2ec>)
 8002b5a:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8002b5e:	f000 fb21 	bl	80031a4 <set_resp_rx_timeout>

    // for random
    srand(time(NULL));
 8002b62:	2000      	movs	r0, #0
 8002b64:	f7fe f84e 	bl	8000c04 <time>
 8002b68:	f7fd ffce 	bl	8000b08 <srand>
    uint8_t firstLoopFlag = 0; /* Used for checking if the program has gone through the main loop for the first time */
 8002b6c:	2400      	movs	r4, #0
 8002b6e:	e125      	b.n	8002dbc <ds_twr_initiator_sts+0x2b4>
        dwt_configuretxrf(&txconfig_options);
 8002b70:	48a2      	ldr	r0, [pc, #648]	; (8002dfc <ds_twr_initiator_sts+0x2f4>)
 8002b72:	f7ff febd 	bl	80028f0 <dwt_configuretxrf>
 8002b76:	e7d3      	b.n	8002b20 <ds_twr_initiator_sts+0x18>
        else
        {
            /*
             * On subsequent loops, we only need to reload the lower 32 bits of STS IV.
             */
            dwt_writetodevice(STS_IV0_ID, 0, 4, (uint8_t *)&cp_iv);
 8002b78:	4ba1      	ldr	r3, [pc, #644]	; (8002e00 <ds_twr_initiator_sts+0x2f8>)
 8002b7a:	2204      	movs	r2, #4
 8002b7c:	2100      	movs	r1, #0
 8002b7e:	48a1      	ldr	r0, [pc, #644]	; (8002e04 <ds_twr_initiator_sts+0x2fc>)
 8002b80:	f7ff fb0e 	bl	80021a0 <dwt_writetodevice>
            dwt_configurestsloadiv();
 8002b84:	f7ff fca6 	bl	80024d4 <dwt_configurestsloadiv>
 8002b88:	e124      	b.n	8002dd4 <ds_twr_initiator_sts+0x2cc>
        /* ====> Check current number of anchor and put destination address <==== */
        switch (current_anchor)
        {
			case 1: // anchor 1 A
			{
				tx_poll_msg[DESTINATION_ADDRESS_IDX] = address_of_A[0];
 8002b8a:	499f      	ldr	r1, [pc, #636]	; (8002e08 <ds_twr_initiator_sts+0x300>)
 8002b8c:	2241      	movs	r2, #65	; 0x41
 8002b8e:	714a      	strb	r2, [r1, #5]
				tx_poll_msg[DESTINATION_ADDRESS_IDX + 1] = address_of_A[1];
 8002b90:	2301      	movs	r3, #1
 8002b92:	718b      	strb	r3, [r1, #6]

				rx_resp_msg[SOURCE_ADDRESS_IDX] = address_of_A[0];
 8002b94:	499d      	ldr	r1, [pc, #628]	; (8002e0c <ds_twr_initiator_sts+0x304>)
 8002b96:	71ca      	strb	r2, [r1, #7]
				rx_resp_msg[SOURCE_ADDRESS_IDX + 1] = address_of_A[1];
 8002b98:	720b      	strb	r3, [r1, #8]

				tx_final_msg[DESTINATION_ADDRESS_IDX] = address_of_A[0];
 8002b9a:	499d      	ldr	r1, [pc, #628]	; (8002e10 <ds_twr_initiator_sts+0x308>)
 8002b9c:	714a      	strb	r2, [r1, #5]
				tx_final_msg[DESTINATION_ADDRESS_IDX + 1] = address_of_A[1];
 8002b9e:	718b      	strb	r3, [r1, #6]
		}

        /*
         * Send the poll message to the responder.
         */
        send_tx_poll_msg();
 8002ba0:	f7ff ff90 	bl	8002ac4 <send_tx_poll_msg>

        /* We assume that the transmission is achieved correctly, poll for reception of a frame or error/timeout. See NOTE 8 below. */
        while (!((status_reg = dwt_read32bitreg(SYS_STATUS_ID)) & (SYS_STATUS_RXFCG_BIT_MASK | SYS_STATUS_ALL_RX_TO | SYS_STATUS_ALL_RX_ERR)))
 8002ba4:	2100      	movs	r1, #0
 8002ba6:	2044      	movs	r0, #68	; 0x44
 8002ba8:	f7ff fb79 	bl	800229e <dwt_read32bitoffsetreg>
 8002bac:	4b99      	ldr	r3, [pc, #612]	; (8002e14 <ds_twr_initiator_sts+0x30c>)
 8002bae:	6018      	str	r0, [r3, #0]
 8002bb0:	4b99      	ldr	r3, [pc, #612]	; (8002e18 <ds_twr_initiator_sts+0x310>)
 8002bb2:	4003      	ands	r3, r0
 8002bb4:	2b00      	cmp	r3, #0
 8002bb6:	d0f5      	beq.n	8002ba4 <ds_twr_initiator_sts+0x9c>
        /* ====> Take first tic of timer <==== */
        //timtick_1 = __HAL_TIM_GET_COUNTER(&htim2);
        /*
         * Need to check the STS has been received and is good.
         */
        goodSts = dwt_readstsquality(&stsQual);
 8002bb8:	f10d 000e 	add.w	r0, sp, #14
 8002bbc:	f7ff fd24 	bl	8002608 <dwt_readstsquality>

        /* Increment frame sequence number after transmission of the poll message (modulo 256). */
        frame_seq_nb++;
 8002bc0:	4a96      	ldr	r2, [pc, #600]	; (8002e1c <ds_twr_initiator_sts+0x314>)
 8002bc2:	7813      	ldrb	r3, [r2, #0]
 8002bc4:	3301      	adds	r3, #1
 8002bc6:	7013      	strb	r3, [r2, #0]

        /*
         * Here we are checking for a good frame and good STS quality.
         */
        if ((status_reg & SYS_STATUS_RXFCG_BIT_MASK) && (goodSts >= 0))
 8002bc8:	4b92      	ldr	r3, [pc, #584]	; (8002e14 <ds_twr_initiator_sts+0x30c>)
 8002bca:	681b      	ldr	r3, [r3, #0]
 8002bcc:	f413 4f80 	tst.w	r3, #16384	; 0x4000
 8002bd0:	f000 80d4 	beq.w	8002d7c <ds_twr_initiator_sts+0x274>
 8002bd4:	2800      	cmp	r0, #0
 8002bd6:	f2c0 80d1 	blt.w	8002d7c <ds_twr_initiator_sts+0x274>
        {
            uint32_t frame_len;

            /* Clear good RX frame event in the DW IC status register. */
            dwt_write32bitreg(SYS_STATUS_ID, SYS_STATUS_ALL_RX_GOOD);
 8002bda:	f44f 42de 	mov.w	r2, #28416	; 0x6f00
 8002bde:	2100      	movs	r1, #0
 8002be0:	2044      	movs	r0, #68	; 0x44
 8002be2:	f7ff fae6 	bl	80021b2 <dwt_write32bitoffsetreg>

            /* A frame has been received, read it into the local buffer. */
            frame_len = dwt_read32bitreg(RX_FINFO_ID) & RXFLEN_MASK;
 8002be6:	2100      	movs	r1, #0
 8002be8:	204c      	movs	r0, #76	; 0x4c
 8002bea:	f7ff fb58 	bl	800229e <dwt_read32bitoffsetreg>
 8002bee:	f000 017f 	and.w	r1, r0, #127	; 0x7f
            if (frame_len <= sizeof(rx_buffer))
 8002bf2:	2918      	cmp	r1, #24
 8002bf4:	f200 80b2 	bhi.w	8002d5c <ds_twr_initiator_sts+0x254>
            {
                dwt_readrxdata(rx_buffer, frame_len, 0);
 8002bf8:	4d89      	ldr	r5, [pc, #548]	; (8002e20 <ds_twr_initiator_sts+0x318>)
 8002bfa:	2200      	movs	r2, #0
 8002bfc:	4628      	mov	r0, r5
 8002bfe:	f7ff fcd1 	bl	80025a4 <dwt_readrxdata>

                /* Check that the frame is the expected response from the companion "DS TWR responder STS" example.
                 * As the sequence number field of the frame is not relevant, it is cleared to simplify the validation of the frame. */
                rx_buffer[ALL_MSG_SN_IDX] = 0;
 8002c02:	2300      	movs	r3, #0
 8002c04:	70ab      	strb	r3, [r5, #2]
                if (memcmp(rx_buffer, rx_resp_msg, ALL_MSG_COMMON_LEN) == 0)
 8002c06:	220a      	movs	r2, #10
 8002c08:	4980      	ldr	r1, [pc, #512]	; (8002e0c <ds_twr_initiator_sts+0x304>)
 8002c0a:	4628      	mov	r0, r5
 8002c0c:	f7fd fb76 	bl	80002fc <memcmp>
 8002c10:	2800      	cmp	r0, #0
 8002c12:	f040 8093 	bne.w	8002d3c <ds_twr_initiator_sts+0x234>
                    uint32_t final_tx_time;
                    uint64_t poll_tx_ts, resp_rx_ts, final_tx_ts;
                    int ret = DWT_ERROR;

                    /* Retrieve poll transmission and response reception timestamps. See NOTE 9 below. */
                    poll_tx_ts = get_tx_timestamp_u64();
 8002c16:	f000 fadc 	bl	80031d2 <get_tx_timestamp_u64>
 8002c1a:	4682      	mov	sl, r0
 8002c1c:	9101      	str	r1, [sp, #4]
                    resp_rx_ts = get_rx_timestamp_u64();
 8002c1e:	f000 faf2 	bl	8003206 <get_rx_timestamp_u64>
 8002c22:	4680      	mov	r8, r0
 8002c24:	4689      	mov	r9, r1

                    /* Compute final message transmission time. See NOTE 19 below. */
                    final_tx_time = (resp_rx_ts + (RESP_RX_TO_FINAL_TX_DLY_UUS * UUS_TO_DWT_TIME)) >> 8;
 8002c26:	4b7f      	ldr	r3, [pc, #508]	; (8002e24 <ds_twr_initiator_sts+0x31c>)
 8002c28:	18c3      	adds	r3, r0, r3
 8002c2a:	f141 0200 	adc.w	r2, r1, #0
 8002c2e:	0a1d      	lsrs	r5, r3, #8
 8002c30:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
                    dwt_setdelayedtrxtime(final_tx_time);
 8002c34:	4628      	mov	r0, r5
 8002c36:	f7ff fd67 	bl	8002708 <dwt_setdelayedtrxtime>

                    final_tx_ts = (((uint64_t)(final_tx_time & 0xFFFFFFFEUL)) << 8) + TX_ANT_DLY;
 8002c3a:	f04f 0b00 	mov.w	fp, #0
 8002c3e:	022f      	lsls	r7, r5, #8
 8002c40:	f427 77ff 	bic.w	r7, r7, #510	; 0x1fe
 8002c44:	f027 0701 	bic.w	r7, r7, #1
 8002c48:	0e2d      	lsrs	r5, r5, #24
 8002c4a:	f244 038d 	movw	r3, #16525	; 0x408d
 8002c4e:	18ff      	adds	r7, r7, r3
 8002c50:	f145 0500 	adc.w	r5, r5, #0

                    /* Write all timestamps in the final message. See NOTE 19 below. */
                    final_msg_set_ts(&tx_final_msg[FINAL_MSG_POLL_TX_TS_IDX], poll_tx_ts);
 8002c54:	4e6e      	ldr	r6, [pc, #440]	; (8002e10 <ds_twr_initiator_sts+0x308>)
 8002c56:	4652      	mov	r2, sl
 8002c58:	9b01      	ldr	r3, [sp, #4]
 8002c5a:	f106 000a 	add.w	r0, r6, #10
 8002c5e:	f000 faec 	bl	800323a <final_msg_set_ts>
                    final_msg_set_ts(&tx_final_msg[FINAL_MSG_RESP_RX_TS_IDX], resp_rx_ts);
 8002c62:	4642      	mov	r2, r8
 8002c64:	464b      	mov	r3, r9
 8002c66:	f106 000e 	add.w	r0, r6, #14
 8002c6a:	f000 fae6 	bl	800323a <final_msg_set_ts>
                    final_msg_set_ts(&tx_final_msg[FINAL_MSG_FINAL_TX_TS_IDX], final_tx_ts);
 8002c6e:	463a      	mov	r2, r7
 8002c70:	462b      	mov	r3, r5
 8002c72:	f106 0012 	add.w	r0, r6, #18
 8002c76:	f000 fae0 	bl	800323a <final_msg_set_ts>


                    /* Write and send final message. See NOTE 7 below. */
                    tx_final_msg[ALL_MSG_SN_IDX] = frame_seq_nb;
 8002c7a:	4b68      	ldr	r3, [pc, #416]	; (8002e1c <ds_twr_initiator_sts+0x314>)
 8002c7c:	781b      	ldrb	r3, [r3, #0]
 8002c7e:	70b3      	strb	r3, [r6, #2]
                     ///
                     memcpy(&tx_final_msg[22], (uint8_t*)received_data, sizeof(received_data)); 
 8002c80:	4d69      	ldr	r5, [pc, #420]	; (8002e28 <ds_twr_initiator_sts+0x320>)
 8002c82:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002c84:	f8c6 0016 	str.w	r0, [r6, #22]
 8002c88:	f8c6 101a 	str.w	r1, [r6, #26]
 8002c8c:	f8c6 201e 	str.w	r2, [r6, #30]
 8002c90:	f8c6 3022 	str.w	r3, [r6, #34]	; 0x22
 8002c94:	cd03      	ldmia	r5!, {r0, r1}
 8002c96:	f8c6 0026 	str.w	r0, [r6, #38]	; 0x26
 8002c9a:	f8c6 102a 	str.w	r1, [r6, #42]	; 0x2a

                    dwt_writetxdata(sizeof(tx_final_msg), tx_final_msg, 0); /* Zero offset in TX buffer. */
 8002c9e:	465a      	mov	r2, fp
 8002ca0:	4631      	mov	r1, r6
 8002ca2:	2030      	movs	r0, #48	; 0x30
 8002ca4:	f7ff fc32 	bl	800250c <dwt_writetxdata>
                    dwt_writetxfctrl(sizeof(tx_final_msg), 0, 1); /* Zero offset in TX buffer, ranging bit set. */
 8002ca8:	2201      	movs	r2, #1
 8002caa:	4659      	mov	r1, fp
 8002cac:	2030      	movs	r0, #48	; 0x30
 8002cae:	f7ff fc59 	bl	8002564 <dwt_writetxfctrl>
                    ret = dwt_starttx(DWT_START_TX_DELAYED);
 8002cb2:	2001      	movs	r0, #1
 8002cb4:	f7ff fd30 	bl	8002718 <dwt_starttx>


                    /* If dwt_starttx() returns an error, abandon this ranging exchange and proceed to the next one. See NOTE 13 below. */
                    if (ret == DWT_SUCCESS)
 8002cb8:	2800      	cmp	r0, #0
 8002cba:	d16a      	bne.n	8002d92 <ds_twr_initiator_sts+0x28a>
                    {
                       /* Poll DW IC until TX frame sent event set. See NOTE 8 below. */
                       while (!(dwt_read32bitreg(SYS_STATUS_ID) & SYS_STATUS_TXFRS_BIT_MASK))
 8002cbc:	2100      	movs	r1, #0
 8002cbe:	2044      	movs	r0, #68	; 0x44
 8002cc0:	f7ff faed 	bl	800229e <dwt_read32bitoffsetreg>
 8002cc4:	f010 0f80 	tst.w	r0, #128	; 0x80
 8002cc8:	d0f8      	beq.n	8002cbc <ds_twr_initiator_sts+0x1b4>
                       { };

                       /* Clear TXFRS event. */
                       dwt_write32bitreg(SYS_STATUS_ID, SYS_STATUS_TXFRS_BIT_MASK);
 8002cca:	2280      	movs	r2, #128	; 0x80
 8002ccc:	2100      	movs	r1, #0
 8002cce:	2044      	movs	r0, #68	; 0x44
 8002cd0:	f7ff fa6f 	bl	80021b2 <dwt_write32bitoffsetreg>

                       /* Increment frame sequence number after transmission of the final message (modulo 256). */
                       frame_seq_nb++;
 8002cd4:	4a51      	ldr	r2, [pc, #324]	; (8002e1c <ds_twr_initiator_sts+0x314>)
 8002cd6:	7813      	ldrb	r3, [r2, #0]
 8002cd8:	3301      	adds	r3, #1
 8002cda:	7013      	strb	r3, [r2, #0]
                       /* Increase a current anchor number */
                       current_anchor = (current_anchor + 1 ) % NUMBER_OF_ANCHORS;
 8002cdc:	4953      	ldr	r1, [pc, #332]	; (8002e2c <ds_twr_initiator_sts+0x324>)
 8002cde:	780b      	ldrb	r3, [r1, #0]
 8002ce0:	3301      	adds	r3, #1
 8002ce2:	425a      	negs	r2, r3
 8002ce4:	f003 0303 	and.w	r3, r3, #3
 8002ce8:	f002 0203 	and.w	r2, r2, #3
 8002cec:	bf58      	it	pl
 8002cee:	4253      	negpl	r3, r2
 8002cf0:	700b      	strb	r3, [r1, #0]
 8002cf2:	e04e      	b.n	8002d92 <ds_twr_initiator_sts+0x28a>
				tx_poll_msg[DESTINATION_ADDRESS_IDX] = address_of_B[0];
 8002cf4:	4944      	ldr	r1, [pc, #272]	; (8002e08 <ds_twr_initiator_sts+0x300>)
 8002cf6:	2242      	movs	r2, #66	; 0x42
 8002cf8:	714a      	strb	r2, [r1, #5]
				tx_poll_msg[DESTINATION_ADDRESS_IDX + 1] = address_of_B[1];
 8002cfa:	2302      	movs	r3, #2
 8002cfc:	718b      	strb	r3, [r1, #6]
				rx_resp_msg[SOURCE_ADDRESS_IDX] = address_of_B[0];
 8002cfe:	4943      	ldr	r1, [pc, #268]	; (8002e0c <ds_twr_initiator_sts+0x304>)
 8002d00:	71ca      	strb	r2, [r1, #7]
				rx_resp_msg[SOURCE_ADDRESS_IDX + 1] = address_of_B[1];
 8002d02:	720b      	strb	r3, [r1, #8]
				tx_final_msg[DESTINATION_ADDRESS_IDX] = address_of_B[0];
 8002d04:	4942      	ldr	r1, [pc, #264]	; (8002e10 <ds_twr_initiator_sts+0x308>)
 8002d06:	714a      	strb	r2, [r1, #5]
				tx_final_msg[DESTINATION_ADDRESS_IDX + 1] = address_of_B[1];
 8002d08:	718b      	strb	r3, [r1, #6]
				break;
 8002d0a:	e749      	b.n	8002ba0 <ds_twr_initiator_sts+0x98>
				tx_poll_msg[DESTINATION_ADDRESS_IDX] = address_of_C[0];
 8002d0c:	493e      	ldr	r1, [pc, #248]	; (8002e08 <ds_twr_initiator_sts+0x300>)
 8002d0e:	2243      	movs	r2, #67	; 0x43
 8002d10:	714a      	strb	r2, [r1, #5]
				tx_poll_msg[DESTINATION_ADDRESS_IDX + 1] = address_of_C[1];
 8002d12:	2303      	movs	r3, #3
 8002d14:	718b      	strb	r3, [r1, #6]
				rx_resp_msg[SOURCE_ADDRESS_IDX] = address_of_C[0];
 8002d16:	493d      	ldr	r1, [pc, #244]	; (8002e0c <ds_twr_initiator_sts+0x304>)
 8002d18:	71ca      	strb	r2, [r1, #7]
				rx_resp_msg[SOURCE_ADDRESS_IDX + 1] = address_of_C[1];
 8002d1a:	720b      	strb	r3, [r1, #8]
				tx_final_msg[DESTINATION_ADDRESS_IDX] = address_of_C[0];
 8002d1c:	493c      	ldr	r1, [pc, #240]	; (8002e10 <ds_twr_initiator_sts+0x308>)
 8002d1e:	714a      	strb	r2, [r1, #5]
				tx_final_msg[DESTINATION_ADDRESS_IDX + 1] = address_of_C[1];
 8002d20:	718b      	strb	r3, [r1, #6]
				break;
 8002d22:	e73d      	b.n	8002ba0 <ds_twr_initiator_sts+0x98>
				tx_poll_msg[DESTINATION_ADDRESS_IDX] = address_of_D[0];
 8002d24:	4938      	ldr	r1, [pc, #224]	; (8002e08 <ds_twr_initiator_sts+0x300>)
 8002d26:	2244      	movs	r2, #68	; 0x44
 8002d28:	714a      	strb	r2, [r1, #5]
				tx_poll_msg[DESTINATION_ADDRESS_IDX + 1] = address_of_D[1];
 8002d2a:	2304      	movs	r3, #4
 8002d2c:	718b      	strb	r3, [r1, #6]
				rx_resp_msg[SOURCE_ADDRESS_IDX] = address_of_D[0];
 8002d2e:	4937      	ldr	r1, [pc, #220]	; (8002e0c <ds_twr_initiator_sts+0x304>)
 8002d30:	71ca      	strb	r2, [r1, #7]
				rx_resp_msg[SOURCE_ADDRESS_IDX + 1] = address_of_D[1];
 8002d32:	720b      	strb	r3, [r1, #8]
				tx_final_msg[DESTINATION_ADDRESS_IDX] = address_of_D[0];
 8002d34:	4936      	ldr	r1, [pc, #216]	; (8002e10 <ds_twr_initiator_sts+0x308>)
 8002d36:	714a      	strb	r2, [r1, #5]
				tx_final_msg[DESTINATION_ADDRESS_IDX + 1] = address_of_D[1];
 8002d38:	718b      	strb	r3, [r1, #6]
				break;
 8002d3a:	e731      	b.n	8002ba0 <ds_twr_initiator_sts+0x98>
                    }
                }
                else
                {
                    errors[BAD_FRAME_ERR_IDX] += 1;
 8002d3c:	4a3c      	ldr	r2, [pc, #240]	; (8002e30 <ds_twr_initiator_sts+0x328>)
 8002d3e:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8002d40:	3301      	adds	r3, #1
 8002d42:	6293      	str	r3, [r2, #40]	; 0x28
                    /* Increase a current anchor number */
                    current_anchor = (current_anchor + 1 ) % NUMBER_OF_ANCHORS;
 8002d44:	4939      	ldr	r1, [pc, #228]	; (8002e2c <ds_twr_initiator_sts+0x324>)
 8002d46:	780b      	ldrb	r3, [r1, #0]
 8002d48:	3301      	adds	r3, #1
 8002d4a:	425a      	negs	r2, r3
 8002d4c:	f003 0303 	and.w	r3, r3, #3
 8002d50:	f002 0203 	and.w	r2, r2, #3
 8002d54:	bf58      	it	pl
 8002d56:	4253      	negpl	r3, r2
 8002d58:	700b      	strb	r3, [r1, #0]
 8002d5a:	e01a      	b.n	8002d92 <ds_twr_initiator_sts+0x28a>
                }
            }
            else
            {
                errors[RTO_ERR_IDX] += 1;
 8002d5c:	4a34      	ldr	r2, [pc, #208]	; (8002e30 <ds_twr_initiator_sts+0x328>)
 8002d5e:	6953      	ldr	r3, [r2, #20]
 8002d60:	3301      	adds	r3, #1
 8002d62:	6153      	str	r3, [r2, #20]
                /* Increase a current anchor number */
                current_anchor = (current_anchor + 1 ) % NUMBER_OF_ANCHORS;
 8002d64:	4931      	ldr	r1, [pc, #196]	; (8002e2c <ds_twr_initiator_sts+0x324>)
 8002d66:	780b      	ldrb	r3, [r1, #0]
 8002d68:	3301      	adds	r3, #1
 8002d6a:	425a      	negs	r2, r3
 8002d6c:	f003 0303 	and.w	r3, r3, #3
 8002d70:	f002 0203 	and.w	r2, r2, #3
 8002d74:	bf58      	it	pl
 8002d76:	4253      	negpl	r3, r2
 8002d78:	700b      	strb	r3, [r1, #0]
 8002d7a:	e00a      	b.n	8002d92 <ds_twr_initiator_sts+0x28a>
            {
                errors[CP_QUAL_ERR_IDX] += 1;
            }
#endif
            /* Increase a current anchor number */
            current_anchor = (current_anchor + 1 ) % NUMBER_OF_ANCHORS;
 8002d7c:	492b      	ldr	r1, [pc, #172]	; (8002e2c <ds_twr_initiator_sts+0x324>)
 8002d7e:	780b      	ldrb	r3, [r1, #0]
 8002d80:	3301      	adds	r3, #1
 8002d82:	425a      	negs	r2, r3
 8002d84:	f003 0303 	and.w	r3, r3, #3
 8002d88:	f002 0203 	and.w	r2, r2, #3
 8002d8c:	bf58      	it	pl
 8002d8e:	4253      	negpl	r3, r2
 8002d90:	700b      	strb	r3, [r1, #0]
        }

        /* Clear RX error/timeout events in the DW IC status register. */
        dwt_write32bitreg(SYS_STATUS_ID, SYS_STATUS_ALL_RX_GOOD | SYS_STATUS_ALL_RX_TO | SYS_STATUS_ALL_RX_ERR);
 8002d92:	4a28      	ldr	r2, [pc, #160]	; (8002e34 <ds_twr_initiator_sts+0x32c>)
 8002d94:	2100      	movs	r1, #0
 8002d96:	2044      	movs	r0, #68	; 0x44
 8002d98:	f7ff fa0b 	bl	80021b2 <dwt_write32bitoffsetreg>
        /* Execute a delay between ranging exchanges. */
        /* ====> Take second tic of timer to check all time <==== */
		//timtick_2 = __HAL_TIM_GET_COUNTER(&htim2);
		/* ====> Take difference  <==== */
		//diff = timtick_2 - timtick_1;
        randomDelay = rand() % 5;
 8002d9c:	f7fd fee6 	bl	8000b6c <rand>
 8002da0:	4a25      	ldr	r2, [pc, #148]	; (8002e38 <ds_twr_initiator_sts+0x330>)
 8002da2:	fb82 3200 	smull	r3, r2, r2, r0
 8002da6:	17c3      	asrs	r3, r0, #31
 8002da8:	ebc3 0362 	rsb	r3, r3, r2, asr #1
 8002dac:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8002db0:	1ac3      	subs	r3, r0, r3
 8002db2:	b2d8      	uxtb	r0, r3
 8002db4:	4b21      	ldr	r3, [pc, #132]	; (8002e3c <ds_twr_initiator_sts+0x334>)
 8002db6:	7018      	strb	r0, [r3, #0]
        Sleep(randomDelay);
 8002db8:	f000 f94a 	bl	8003050 <Sleep>
        if (!firstLoopFlag)
 8002dbc:	2c00      	cmp	r4, #0
 8002dbe:	f47f aedb 	bne.w	8002b78 <ds_twr_initiator_sts+0x70>
            dwt_configurestskey(&cp_key);
 8002dc2:	481f      	ldr	r0, [pc, #124]	; (8002e40 <ds_twr_initiator_sts+0x338>)
 8002dc4:	f7ff fb46 	bl	8002454 <dwt_configurestskey>
            dwt_configurestsiv(&cp_iv);
 8002dc8:	480d      	ldr	r0, [pc, #52]	; (8002e00 <ds_twr_initiator_sts+0x2f8>)
 8002dca:	f7ff fb63 	bl	8002494 <dwt_configurestsiv>
            dwt_configurestsloadiv();
 8002dce:	f7ff fb81 	bl	80024d4 <dwt_configurestsloadiv>
            firstLoopFlag = 1;
 8002dd2:	2401      	movs	r4, #1
        switch (current_anchor)
 8002dd4:	4b15      	ldr	r3, [pc, #84]	; (8002e2c <ds_twr_initiator_sts+0x324>)
 8002dd6:	781b      	ldrb	r3, [r3, #0]
 8002dd8:	2b03      	cmp	r3, #3
 8002dda:	f63f aee1 	bhi.w	8002ba0 <ds_twr_initiator_sts+0x98>
 8002dde:	a201      	add	r2, pc, #4	; (adr r2, 8002de4 <ds_twr_initiator_sts+0x2dc>)
 8002de0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002de4:	08002d25 	.word	0x08002d25
 8002de8:	08002b8b 	.word	0x08002b8b
 8002dec:	08002cf5 	.word	0x08002cf5
 8002df0:	08002d0d 	.word	0x08002d0d
 8002df4:	20000064 	.word	0x20000064
 8002df8:	20000080 	.word	0x20000080
 8002dfc:	20000074 	.word	0x20000074
 8002e00:	20000090 	.word	0x20000090
 8002e04:	0002001c 	.word	0x0002001c
 8002e08:	200000f0 	.word	0x200000f0
 8002e0c:	200000b4 	.word	0x200000b4
 8002e10:	200000c0 	.word	0x200000c0
 8002e14:	200002e8 	.word	0x200002e8
 8002e18:	2427d000 	.word	0x2427d000
 8002e1c:	200002cc 	.word	0x200002cc
 8002e20:	200002d0 	.word	0x200002d0
 8002e24:	078c764c 	.word	0x078c764c
 8002e28:	200002f0 	.word	0x200002f0
 8002e2c:	200000b0 	.word	0x200000b0
 8002e30:	20000270 	.word	0x20000270
 8002e34:	2427ff00 	.word	0x2427ff00
 8002e38:	66666667 	.word	0x66666667
 8002e3c:	200002cd 	.word	0x200002cd
 8002e40:	200000a0 	.word	0x200000a0

08002e44 <build_examples>:
#endif

#ifdef TEST_DS_TWR_INITIATOR_STS
    extern int ds_twr_initiator_sts(void);

    example_pointer=ds_twr_initiator_sts;
 8002e44:	4b01      	ldr	r3, [pc, #4]	; (8002e4c <build_examples+0x8>)
 8002e46:	4a02      	ldr	r2, [pc, #8]	; (8002e50 <build_examples+0xc>)
 8002e48:	601a      	str	r2, [r3, #0]
#endif

    //Check that only 1 test was enabled in test_selection.h file
    assert(test_cnt==1);

}
 8002e4a:	4770      	bx	lr
 8002e4c:	200002ec 	.word	0x200002ec
 8002e50:	08002b09 	.word	0x08002b09

08002e54 <MX_GPIO_Init>:
 8002e54:	b570      	push	{r4, r5, r6, lr}
 8002e56:	b088      	sub	sp, #32
 8002e58:	2400      	movs	r4, #0
 8002e5a:	9403      	str	r4, [sp, #12]
 8002e5c:	9404      	str	r4, [sp, #16]
 8002e5e:	9405      	str	r4, [sp, #20]
 8002e60:	9406      	str	r4, [sp, #24]
 8002e62:	9407      	str	r4, [sp, #28]
 8002e64:	4b1f      	ldr	r3, [pc, #124]	; (8002ee4 <MX_GPIO_Init+0x90>)
 8002e66:	695a      	ldr	r2, [r3, #20]
 8002e68:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8002e6c:	615a      	str	r2, [r3, #20]
 8002e6e:	695a      	ldr	r2, [r3, #20]
 8002e70:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8002e74:	9200      	str	r2, [sp, #0]
 8002e76:	9a00      	ldr	r2, [sp, #0]
 8002e78:	695a      	ldr	r2, [r3, #20]
 8002e7a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002e7e:	615a      	str	r2, [r3, #20]
 8002e80:	695a      	ldr	r2, [r3, #20]
 8002e82:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 8002e86:	9201      	str	r2, [sp, #4]
 8002e88:	9a01      	ldr	r2, [sp, #4]
 8002e8a:	695a      	ldr	r2, [r3, #20]
 8002e8c:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8002e90:	615a      	str	r2, [r3, #20]
 8002e92:	695b      	ldr	r3, [r3, #20]
 8002e94:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002e98:	9302      	str	r3, [sp, #8]
 8002e9a:	9b02      	ldr	r3, [sp, #8]
 8002e9c:	4622      	mov	r2, r4
 8002e9e:	2110      	movs	r1, #16
 8002ea0:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002ea4:	f000 fd20 	bl	80038e8 <HAL_GPIO_WritePin>
 8002ea8:	4d0f      	ldr	r5, [pc, #60]	; (8002ee8 <MX_GPIO_Init+0x94>)
 8002eaa:	4622      	mov	r2, r4
 8002eac:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8002eb0:	4628      	mov	r0, r5
 8002eb2:	f000 fd19 	bl	80038e8 <HAL_GPIO_WritePin>
 8002eb6:	2310      	movs	r3, #16
 8002eb8:	9303      	str	r3, [sp, #12]
 8002eba:	2601      	movs	r6, #1
 8002ebc:	9604      	str	r6, [sp, #16]
 8002ebe:	9405      	str	r4, [sp, #20]
 8002ec0:	9406      	str	r4, [sp, #24]
 8002ec2:	a903      	add	r1, sp, #12
 8002ec4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002ec8:	f000 fc2a 	bl	8003720 <HAL_GPIO_Init>
 8002ecc:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002ed0:	9303      	str	r3, [sp, #12]
 8002ed2:	9604      	str	r6, [sp, #16]
 8002ed4:	9405      	str	r4, [sp, #20]
 8002ed6:	9406      	str	r4, [sp, #24]
 8002ed8:	a903      	add	r1, sp, #12
 8002eda:	4628      	mov	r0, r5
 8002edc:	f000 fc20 	bl	8003720 <HAL_GPIO_Init>
 8002ee0:	b008      	add	sp, #32
 8002ee2:	bd70      	pop	{r4, r5, r6, pc}
 8002ee4:	40021000 	.word	0x40021000
 8002ee8:	48000400 	.word	0x48000400

08002eec <calculate_checksum>:
 * @param data The data buffer to calculate the checksum for.
 * @param len The length of the data buffer.
 *
 * @return The calculated checksum.
 */
uint8_t calculate_checksum(uint8_t *data, uint16_t len) {
 8002eec:	4684      	mov	ip, r0
  uint8_t sum = 0;
  for (uint16_t i = 0; i < len; i++) {
 8002eee:	2300      	movs	r3, #0
  uint8_t sum = 0;
 8002ef0:	4618      	mov	r0, r3
  for (uint16_t i = 0; i < len; i++) {
 8002ef2:	e005      	b.n	8002f00 <calculate_checksum+0x14>
      sum += data[i];
 8002ef4:	f81c 2003 	ldrb.w	r2, [ip, r3]
 8002ef8:	4410      	add	r0, r2
 8002efa:	b2c0      	uxtb	r0, r0
  for (uint16_t i = 0; i < len; i++) {
 8002efc:	3301      	adds	r3, #1
 8002efe:	b29b      	uxth	r3, r3
 8002f00:	428b      	cmp	r3, r1
 8002f02:	d3f7      	bcc.n	8002ef4 <calculate_checksum+0x8>
  }
  return sum & 0xFF;
}
 8002f04:	4770      	bx	lr
	...

08002f08 <HAL_UART_RxCpltCallback>:
 * @param  huart pointer to a UART_HandleTypeDef structure that contains
 *                the configuration information for the specified UART module.
 * @retval None
 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8002f08:	b538      	push	{r3, r4, r5, lr}
  if (huart->Instance == USART1) {
 8002f0a:	6802      	ldr	r2, [r0, #0]
 8002f0c:	4b19      	ldr	r3, [pc, #100]	; (8002f74 <HAL_UART_RxCpltCallback+0x6c>)
 8002f0e:	429a      	cmp	r2, r3
 8002f10:	d000      	beq.n	8002f14 <HAL_UART_RxCpltCallback+0xc>
      }

      // Restart DMA reception
      HAL_UART_Receive_DMA(&huart1, uart_rx_buffer, PACKET_SIZE);
  }
}
 8002f12:	bd38      	pop	{r3, r4, r5, pc}
      if (uart_rx_buffer[0] == STX && uart_rx_buffer[PACKET_SIZE - 1] == ETX) {
 8002f14:	4b18      	ldr	r3, [pc, #96]	; (8002f78 <HAL_UART_RxCpltCallback+0x70>)
 8002f16:	781b      	ldrb	r3, [r3, #0]
 8002f18:	2b02      	cmp	r3, #2
 8002f1a:	d005      	beq.n	8002f28 <HAL_UART_RxCpltCallback+0x20>
      HAL_UART_Receive_DMA(&huart1, uart_rx_buffer, PACKET_SIZE);
 8002f1c:	221d      	movs	r2, #29
 8002f1e:	4916      	ldr	r1, [pc, #88]	; (8002f78 <HAL_UART_RxCpltCallback+0x70>)
 8002f20:	4816      	ldr	r0, [pc, #88]	; (8002f7c <HAL_UART_RxCpltCallback+0x74>)
 8002f22:	f002 fe43 	bl	8005bac <HAL_UART_Receive_DMA>
}
 8002f26:	e7f4      	b.n	8002f12 <HAL_UART_RxCpltCallback+0xa>
      if (uart_rx_buffer[0] == STX && uart_rx_buffer[PACKET_SIZE - 1] == ETX) {
 8002f28:	4b13      	ldr	r3, [pc, #76]	; (8002f78 <HAL_UART_RxCpltCallback+0x70>)
 8002f2a:	7f1b      	ldrb	r3, [r3, #28]
 8002f2c:	2b03      	cmp	r3, #3
 8002f2e:	d1f5      	bne.n	8002f1c <HAL_UART_RxCpltCallback+0x14>
          uint16_t length = (uart_rx_buffer[1] << 8) | uart_rx_buffer[2];
 8002f30:	4a11      	ldr	r2, [pc, #68]	; (8002f78 <HAL_UART_RxCpltCallback+0x70>)
 8002f32:	7851      	ldrb	r1, [r2, #1]
 8002f34:	7893      	ldrb	r3, [r2, #2]
 8002f36:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8002f3a:	b21b      	sxth	r3, r3
          if (length == PAYLOAD_SIZE) {
 8002f3c:	2b18      	cmp	r3, #24
 8002f3e:	d1ed      	bne.n	8002f1c <HAL_UART_RxCpltCallback+0x14>
              uint8_t checksum = uart_rx_buffer[PACKET_SIZE - 2];
 8002f40:	4610      	mov	r0, r2
 8002f42:	7ed4      	ldrb	r4, [r2, #27]
              uint8_t calc_checksum = calculate_checksum(&uart_rx_buffer[3], PAYLOAD_SIZE);
 8002f44:	2118      	movs	r1, #24
 8002f46:	3003      	adds	r0, #3
 8002f48:	f7ff ffd0 	bl	8002eec <calculate_checksum>
              if (checksum == calc_checksum) {
 8002f4c:	4284      	cmp	r4, r0
 8002f4e:	d1e5      	bne.n	8002f1c <HAL_UART_RxCpltCallback+0x14>
                  memcpy(received_data, &uart_rx_buffer[3], PAYLOAD_SIZE);
 8002f50:	4c09      	ldr	r4, [pc, #36]	; (8002f78 <HAL_UART_RxCpltCallback+0x70>)
 8002f52:	4d0b      	ldr	r5, [pc, #44]	; (8002f80 <HAL_UART_RxCpltCallback+0x78>)
 8002f54:	f8d4 0003 	ldr.w	r0, [r4, #3]
 8002f58:	f8d4 1007 	ldr.w	r1, [r4, #7]
 8002f5c:	f8d4 200b 	ldr.w	r2, [r4, #11]
 8002f60:	f8d4 300f 	ldr.w	r3, [r4, #15]
 8002f64:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002f66:	f8d4 0013 	ldr.w	r0, [r4, #19]
 8002f6a:	f8d4 1017 	ldr.w	r1, [r4, #23]
 8002f6e:	c503      	stmia	r5!, {r0, r1}
 8002f70:	e7d4      	b.n	8002f1c <HAL_UART_RxCpltCallback+0x14>
 8002f72:	bf00      	nop
 8002f74:	40013800 	.word	0x40013800
 8002f78:	20000308 	.word	0x20000308
 8002f7c:	20000424 	.word	0x20000424
 8002f80:	200002f0 	.word	0x200002f0

08002f84 <Error_Handler>:
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002f84:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002f86:	e7fe      	b.n	8002f86 <Error_Handler+0x2>

08002f88 <SystemClock_Config>:
{
 8002f88:	b500      	push	{lr}
 8002f8a:	b09f      	sub	sp, #124	; 0x7c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002f8c:	2228      	movs	r2, #40	; 0x28
 8002f8e:	2100      	movs	r1, #0
 8002f90:	a814      	add	r0, sp, #80	; 0x50
 8002f92:	f7fd f9e5 	bl	8000360 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002f96:	2100      	movs	r1, #0
 8002f98:	910f      	str	r1, [sp, #60]	; 0x3c
 8002f9a:	9110      	str	r1, [sp, #64]	; 0x40
 8002f9c:	9111      	str	r1, [sp, #68]	; 0x44
 8002f9e:	9112      	str	r1, [sp, #72]	; 0x48
 8002fa0:	9113      	str	r1, [sp, #76]	; 0x4c
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002fa2:	223c      	movs	r2, #60	; 0x3c
 8002fa4:	4668      	mov	r0, sp
 8002fa6:	f7fd f9db 	bl	8000360 <memset>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8002faa:	2301      	movs	r3, #1
 8002fac:	9314      	str	r3, [sp, #80]	; 0x50
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002fae:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8002fb2:	9215      	str	r2, [sp, #84]	; 0x54
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 8002fb4:	9316      	str	r3, [sp, #88]	; 0x58
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002fb6:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002fb8:	2302      	movs	r3, #2
 8002fba:	931b      	str	r3, [sp, #108]	; 0x6c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002fbc:	921c      	str	r2, [sp, #112]	; 0x70
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8002fbe:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8002fc2:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002fc4:	a814      	add	r0, sp, #80	; 0x50
 8002fc6:	f000 fcad 	bl	8003924 <HAL_RCC_OscConfig>
 8002fca:	b9c0      	cbnz	r0, 8002ffe <SystemClock_Config+0x76>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002fcc:	230f      	movs	r3, #15
 8002fce:	930f      	str	r3, [sp, #60]	; 0x3c
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002fd0:	2102      	movs	r1, #2
 8002fd2:	9110      	str	r1, [sp, #64]	; 0x40
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002fd4:	2300      	movs	r3, #0
 8002fd6:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8002fd8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002fdc:	9212      	str	r2, [sp, #72]	; 0x48
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8002fde:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8002fe0:	a80f      	add	r0, sp, #60	; 0x3c
 8002fe2:	f000 ffe9 	bl	8003fb8 <HAL_RCC_ClockConfig>
 8002fe6:	b960      	cbnz	r0, 8003002 <SystemClock_Config+0x7a>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8002fe8:	2301      	movs	r3, #1
 8002fea:	9300      	str	r3, [sp, #0]
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8002fec:	2300      	movs	r3, #0
 8002fee:	9302      	str	r3, [sp, #8]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002ff0:	4668      	mov	r0, sp
 8002ff2:	f001 f8e7 	bl	80041c4 <HAL_RCCEx_PeriphCLKConfig>
 8002ff6:	b930      	cbnz	r0, 8003006 <SystemClock_Config+0x7e>
}
 8002ff8:	b01f      	add	sp, #124	; 0x7c
 8002ffa:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8002ffe:	f7ff ffc1 	bl	8002f84 <Error_Handler>
    Error_Handler();
 8003002:	f7ff ffbf 	bl	8002f84 <Error_Handler>
    Error_Handler();
 8003006:	f7ff ffbd 	bl	8002f84 <Error_Handler>
	...

0800300c <main>:
{
 800300c:	b508      	push	{r3, lr}
  build_examples();
 800300e:	f7ff ff19 	bl	8002e44 <build_examples>
  HAL_Init();
 8003012:	f000 f99f 	bl	8003354 <HAL_Init>
  SystemClock_Config();
 8003016:	f7ff ffb7 	bl	8002f88 <SystemClock_Config>
  MX_GPIO_Init();
 800301a:	f7ff ff1b 	bl	8002e54 <MX_GPIO_Init>
  MX_DMA_Init();
 800301e:	f7ff fd37 	bl	8002a90 <MX_DMA_Init>
  MX_SPI1_Init();
 8003022:	f000 f917 	bl	8003254 <MX_SPI1_Init>
  MX_TIM2_Init();
 8003026:	f002 fe67 	bl	8005cf8 <MX_TIM2_Init>
  MX_USART1_UART_Init();
 800302a:	f002 feb1 	bl	8005d90 <MX_USART1_UART_Init>
  port_DisableEXT_IRQ();
 800302e:	f000 f81a 	bl	8003066 <port_DisableEXT_IRQ>
  example_pointer();
 8003032:	4b04      	ldr	r3, [pc, #16]	; (8003044 <main+0x38>)
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	4798      	blx	r3
    HAL_UART_Receive_DMA(&huart1, uart_rx_buffer, PACKET_SIZE);
 8003038:	221d      	movs	r2, #29
 800303a:	4903      	ldr	r1, [pc, #12]	; (8003048 <main+0x3c>)
 800303c:	4803      	ldr	r0, [pc, #12]	; (800304c <main+0x40>)
 800303e:	f002 fdb5 	bl	8005bac <HAL_UART_Receive_DMA>
  while (1)
 8003042:	e7f9      	b.n	8003038 <main+0x2c>
 8003044:	200002ec 	.word	0x200002ec
 8003048:	20000308 	.word	0x20000308
 800304c:	20000424 	.word	0x20000424

08003050 <Sleep>:
/* @fn    Sleep
 * @brief Sleep delay in ms using SysTick timer
 * */
__INLINE void
Sleep(uint32_t x)
{
 8003050:	b580      	push	{r7, lr}
 8003052:	b082      	sub	sp, #8
 8003054:	af00      	add	r7, sp, #0
 8003056:	6078      	str	r0, [r7, #4]
    HAL_Delay(x);
 8003058:	6878      	ldr	r0, [r7, #4]
 800305a:	f000 f99f 	bl	800339c <HAL_Delay>
}
 800305e:	bf00      	nop
 8003060:	3708      	adds	r7, #8
 8003062:	46bd      	mov	sp, r7
 8003064:	bd80      	pop	{r7, pc}

08003066 <port_DisableEXT_IRQ>:
/* @fn      port_DisableEXT_IRQ
 * @brief   wrapper to disable DW_IRQ pin IRQ
 *          in current implementation it disables all IRQ from lines 5:9
 * */
__INLINE void port_DisableEXT_IRQ(void)
{
 8003066:	b580      	push	{r7, lr}
 8003068:	af00      	add	r7, sp, #0
    NVIC_DisableIRQ(EXTI0_IRQn);
 800306a:	2006      	movs	r0, #6
 800306c:	f000 f85c 	bl	8003128 <__NVIC_DisableIRQ>
}
 8003070:	bf00      	nop
 8003072:	bd80      	pop	{r7, pc}

08003074 <port_EnableEXT_IRQ>:
/* @fn      port_EnableEXT_IRQ
 * @brief   wrapper to enable DW_IRQ pin IRQ
 *          in current implementation it enables all IRQ from lines 5:9
 * */
__INLINE void port_EnableEXT_IRQ(void)
{
 8003074:	b580      	push	{r7, lr}
 8003076:	af00      	add	r7, sp, #0
    NVIC_EnableIRQ(EXTI0_IRQn);
 8003078:	2006      	movs	r0, #6
 800307a:	f000 f847 	bl	800310c <__NVIC_EnableIRQ>
}
 800307e:	bf00      	nop
 8003080:	bd80      	pop	{r7, pc}
	...

08003084 <EXTI_GetITEnStatus>:
  * @brief  Checks whether the specified IRQn line is enabled or not.
  * @param  IRQn: specifies the IRQn line to check.
  * @return "0" when IRQn is "not enabled" and !0 otherwise
  */
ITStatus EXTI_GetITEnStatus(IRQn_Type IRQn)
{
 8003084:	b480      	push	{r7}
 8003086:	b083      	sub	sp, #12
 8003088:	af00      	add	r7, sp, #0
 800308a:	4603      	mov	r3, r0
 800308c:	71fb      	strb	r3, [r7, #7]
        return ((NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] &\
 800308e:	4a0c      	ldr	r2, [pc, #48]	; (80030c0 <EXTI_GetITEnStatus+0x3c>)
 8003090:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003094:	095b      	lsrs	r3, r3, #5
 8003096:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
            (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL)) ) == (uint32_t)RESET)?(RESET):(SET);
 800309a:	79fb      	ldrb	r3, [r7, #7]
 800309c:	f003 031f 	and.w	r3, r3, #31
 80030a0:	fa22 f303 	lsr.w	r3, r2, r3
 80030a4:	f003 0301 	and.w	r3, r3, #1
 80030a8:	2b00      	cmp	r3, #0
 80030aa:	bf14      	ite	ne
 80030ac:	2301      	movne	r3, #1
 80030ae:	2300      	moveq	r3, #0
 80030b0:	b2db      	uxtb	r3, r3
}
 80030b2:	4618      	mov	r0, r3
 80030b4:	370c      	adds	r7, #12
 80030b6:	46bd      	mov	sp, r7
 80030b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030bc:	4770      	bx	lr
 80030be:	bf00      	nop
 80030c0:	e000e100 	.word	0xe000e100

080030c4 <port_GetEXT_IRQStatus>:

/* @fn      port_GetEXT_IRQStatus
 * @brief   wrapper to read a DW_IRQ pin IRQ status
 * */
__INLINE uint32_t port_GetEXT_IRQStatus(void)
{
 80030c4:	b580      	push	{r7, lr}
 80030c6:	af00      	add	r7, sp, #0
    return EXTI_GetITEnStatus(EXTI0_IRQn);
 80030c8:	2006      	movs	r0, #6
 80030ca:	f7ff ffdb 	bl	8003084 <EXTI_GetITEnStatus>
 80030ce:	4603      	mov	r3, r0
}
 80030d0:	4618      	mov	r0, r3
 80030d2:	bd80      	pop	{r7, pc}

080030d4 <my_reset_DWIC>:
    setup_DWICRSTnIRQ(0);
    Sleep(2);

}
void my_reset_DWIC(void)
{
 80030d4:	b580      	push	{r7, lr}
 80030d6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DW_RESET_GPIO_Port, DW_RESET_Pin, GPIO_PIN_RESET);
 80030d8:	2200      	movs	r2, #0
 80030da:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80030de:	480a      	ldr	r0, [pc, #40]	; (8003108 <my_reset_DWIC+0x34>)
 80030e0:	f000 fc02 	bl	80038e8 <HAL_GPIO_WritePin>
	HAL_Delay(6);
 80030e4:	2006      	movs	r0, #6
 80030e6:	f000 f959 	bl	800339c <HAL_Delay>
	HAL_GPIO_WritePin(DW_RESET_GPIO_Port, DW_RESET_Pin, GPIO_PIN_SET);
 80030ea:	2201      	movs	r2, #1
 80030ec:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80030f0:	4805      	ldr	r0, [pc, #20]	; (8003108 <my_reset_DWIC+0x34>)
 80030f2:	f000 fbf9 	bl	80038e8 <HAL_GPIO_WritePin>
	HAL_Delay(3);
 80030f6:	2003      	movs	r0, #3
 80030f8:	f000 f950 	bl	800339c <HAL_Delay>
	Sleep(2); // Time needed for DW3000 to start up (transition from INIT_RC to IDLE_RC)
 80030fc:	2002      	movs	r0, #2
 80030fe:	f7ff ffa7 	bl	8003050 <Sleep>
}
 8003102:	bf00      	nop
 8003104:	bd80      	pop	{r7, pc}
 8003106:	bf00      	nop
 8003108:	48000400 	.word	0x48000400

0800310c <__NVIC_EnableIRQ>:
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
 800310c:	2800      	cmp	r0, #0
 800310e:	db07      	blt.n	8003120 <__NVIC_EnableIRQ+0x14>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003110:	f000 021f 	and.w	r2, r0, #31
 8003114:	0940      	lsrs	r0, r0, #5
 8003116:	2301      	movs	r3, #1
 8003118:	4093      	lsls	r3, r2
 800311a:	4a02      	ldr	r2, [pc, #8]	; (8003124 <__NVIC_EnableIRQ+0x18>)
 800311c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  }
}
 8003120:	4770      	bx	lr
 8003122:	bf00      	nop
 8003124:	e000e100 	.word	0xe000e100

08003128 <__NVIC_DisableIRQ>:
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
 8003128:	2800      	cmp	r0, #0
 800312a:	db0c      	blt.n	8003146 <__NVIC_DisableIRQ+0x1e>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800312c:	f000 021f 	and.w	r2, r0, #31
 8003130:	0940      	lsrs	r0, r0, #5
 8003132:	2301      	movs	r3, #1
 8003134:	4093      	lsls	r3, r2
 8003136:	3020      	adds	r0, #32
 8003138:	4a03      	ldr	r2, [pc, #12]	; (8003148 <__NVIC_DisableIRQ+0x20>)
 800313a:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800313e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003142:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
  }
}
 8003146:	4770      	bx	lr
 8003148:	e000e100 	.word	0xe000e100

0800314c <get_rx_delay_time_txpreamble>:
{
    uint32_t delay_time = 0;
    /* Standard delay values for preamble lengths of 32, 64, 72 & 128 should be adequate.
     * Additional time delay will be needed for larger preamble lengths.
     * Delay required is dependent on the preamble length as it increases the frame length. */
    switch (config_options.txPreambLength)
 800314c:	4b0f      	ldr	r3, [pc, #60]	; (800318c <get_rx_delay_time_txpreamble+0x40>)
 800314e:	785b      	ldrb	r3, [r3, #1]
 8003150:	3b02      	subs	r3, #2
 8003152:	2b0b      	cmp	r3, #11
 8003154:	d807      	bhi.n	8003166 <get_rx_delay_time_txpreamble+0x1a>
 8003156:	e8df f003 	tbb	[pc, r3]
 800315a:	140b      	.short	0x140b
 800315c:	060e0606 	.word	0x060e0606
 8003160:	06111706 	.word	0x06111706
 8003164:	0806      	.short	0x0806
 8003166:	2000      	movs	r0, #0
 8003168:	4770      	bx	lr
    {
    case DWT_PLEN_256:
        delay_time += 128; /* 256 - 128 */
        break;
    case DWT_PLEN_512:
        delay_time += 384; /* 512 - 128 */
 800316a:	f44f 70c0 	mov.w	r0, #384	; 0x180
        break;
 800316e:	4770      	bx	lr
    case DWT_PLEN_1024:
        delay_time += 896; /* 1024 - 128 */
 8003170:	f44f 7060 	mov.w	r0, #896	; 0x380
        break;
 8003174:	4770      	bx	lr
    case DWT_PLEN_1536:
        delay_time += 1408; /* 1536 - 128 */
 8003176:	f44f 60b0 	mov.w	r0, #1408	; 0x580
        break;
 800317a:	4770      	bx	lr
    case DWT_PLEN_2048:
        delay_time += 1920; /* 2048 - 128 */
 800317c:	f44f 60f0 	mov.w	r0, #1920	; 0x780
        break;
 8003180:	4770      	bx	lr
    case DWT_PLEN_4096:
        delay_time += 3968; /* 4096 - 128 */
 8003182:	f44f 6078 	mov.w	r0, #3968	; 0xf80
        break;
 8003186:	4770      	bx	lr
        delay_time += 128; /* 256 - 128 */
 8003188:	2080      	movs	r0, #128	; 0x80
    default:
        break;
    }

    return delay_time;
}
 800318a:	4770      	bx	lr
 800318c:	20000064 	.word	0x20000064

08003190 <get_rx_delay_time_data_rate>:
    uint32_t delay_time = 0;
    /*
     * If data rate is set to 850k (slower rate),
     * increase the delay time
     */
    switch (config_options.dataRate)
 8003190:	4b03      	ldr	r3, [pc, #12]	; (80031a0 <get_rx_delay_time_data_rate+0x10>)
 8003192:	799b      	ldrb	r3, [r3, #6]
 8003194:	b10b      	cbz	r3, 800319a <get_rx_delay_time_data_rate+0xa>
    uint32_t delay_time = 0;
 8003196:	2000      	movs	r0, #0
 8003198:	4770      	bx	lr
    {
    case DWT_BR_850K:
        delay_time += 200;
 800319a:	20c8      	movs	r0, #200	; 0xc8
    default:
        break;
    }

    return delay_time;
}
 800319c:	4770      	bx	lr
 800319e:	bf00      	nop
 80031a0:	20000064 	.word	0x20000064

080031a4 <set_resp_rx_timeout>:
 *                         is called.
 *
 * @return None
 */
void set_resp_rx_timeout(uint32_t delay, dwt_config_t *config_options)
{
 80031a4:	b538      	push	{r3, r4, r5, lr}
 80031a6:	4604      	mov	r4, r0
 80031a8:	460d      	mov	r5, r1
    /*
     * The program will need to adjust the timeout value depending on the size of the frame
     * Different sized frames require different time delays.
     */
    uint32_t delay_time = delay + get_rx_delay_time_data_rate() + get_rx_delay_time_txpreamble() + 500;
 80031aa:	f7ff fff1 	bl	8003190 <get_rx_delay_time_data_rate>
 80031ae:	4404      	add	r4, r0
 80031b0:	f7ff ffcc 	bl	800314c <get_rx_delay_time_txpreamble>
 80031b4:	4420      	add	r0, r4
 80031b6:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4

    /* Length of the STS effects the size of the frame also.
     * This means the delay required is greater for larger STS lengths. */
    switch (config_options->stsLength)
 80031ba:	7b6b      	ldrb	r3, [r5, #13]
 80031bc:	1eda      	subs	r2, r3, #3
 80031be:	2a03      	cmp	r2, #3
 80031c0:	d804      	bhi.n	80031cc <set_resp_rx_timeout+0x28>
    {
    case DWT_STS_LEN_256:
    case DWT_STS_LEN_512:
    case DWT_STS_LEN_1024:
    case DWT_STS_LEN_2048:
        delay_time += ((1<<(config_options->stsLength+2))*8);
 80031c2:	3302      	adds	r3, #2
 80031c4:	2208      	movs	r2, #8
 80031c6:	fa02 f303 	lsl.w	r3, r2, r3
 80031ca:	4418      	add	r0, r3
    case DWT_STS_LEN_128:
    default:
        break;
    }

    dwt_setrxtimeout(delay_time);
 80031cc:	f7ff fb42 	bl	8002854 <dwt_setrxtimeout>
}
 80031d0:	bd38      	pop	{r3, r4, r5, pc}

080031d2 <get_tx_timestamp_u64>:
 * @param  none
 *
 * @return  64-bit value of the read time-stamp.
 */
uint64_t get_tx_timestamp_u64(void)
{
 80031d2:	b500      	push	{lr}
 80031d4:	b083      	sub	sp, #12
    uint8_t ts_tab[5];
    uint64_t ts = 0;
    int8_t i;
    dwt_readtxtimestamp(ts_tab);
 80031d6:	4668      	mov	r0, sp
 80031d8:	f7ff fa30 	bl	800263c <dwt_readtxtimestamp>
    for (i = 4; i >= 0; i--)
 80031dc:	2304      	movs	r3, #4
    uint64_t ts = 0;
 80031de:	2000      	movs	r0, #0
 80031e0:	4601      	mov	r1, r0
    for (i = 4; i >= 0; i--)
 80031e2:	e00b      	b.n	80031fc <get_tx_timestamp_u64+0x2a>
    {
        ts <<= 8;
 80031e4:	0209      	lsls	r1, r1, #8
 80031e6:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
        ts |= ts_tab[i];
 80031ea:	f103 0208 	add.w	r2, r3, #8
 80031ee:	446a      	add	r2, sp
 80031f0:	f812 2c08 	ldrb.w	r2, [r2, #-8]
 80031f4:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    for (i = 4; i >= 0; i--)
 80031f8:	3b01      	subs	r3, #1
 80031fa:	b25b      	sxtb	r3, r3
 80031fc:	2b00      	cmp	r3, #0
 80031fe:	daf1      	bge.n	80031e4 <get_tx_timestamp_u64+0x12>
    }
    return ts;
}
 8003200:	b003      	add	sp, #12
 8003202:	f85d fb04 	ldr.w	pc, [sp], #4

08003206 <get_rx_timestamp_u64>:
 * @param  none
 *
 * @return  64-bit value of the read time-stamp.
 */
uint64_t get_rx_timestamp_u64(void)
{
 8003206:	b500      	push	{lr}
 8003208:	b083      	sub	sp, #12
    uint8_t ts_tab[5];
    uint64_t ts = 0;
    int8_t i;
    dwt_readrxtimestamp(ts_tab);
 800320a:	4668      	mov	r0, sp
 800320c:	f7ff fa1e 	bl	800264c <dwt_readrxtimestamp>
    for (i = 4; i >= 0; i--)
 8003210:	2304      	movs	r3, #4
    uint64_t ts = 0;
 8003212:	2000      	movs	r0, #0
 8003214:	4601      	mov	r1, r0
    for (i = 4; i >= 0; i--)
 8003216:	e00b      	b.n	8003230 <get_rx_timestamp_u64+0x2a>
    {
        ts <<= 8;
 8003218:	0209      	lsls	r1, r1, #8
 800321a:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
        ts |= ts_tab[i];
 800321e:	f103 0208 	add.w	r2, r3, #8
 8003222:	446a      	add	r2, sp
 8003224:	f812 2c08 	ldrb.w	r2, [r2, #-8]
 8003228:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    for (i = 4; i >= 0; i--)
 800322c:	3b01      	subs	r3, #1
 800322e:	b25b      	sxtb	r3, r3
 8003230:	2b00      	cmp	r3, #0
 8003232:	daf1      	bge.n	8003218 <get_rx_timestamp_u64+0x12>
    }
    return ts;
}
 8003234:	b003      	add	sp, #12
 8003236:	f85d fb04 	ldr.w	pc, [sp], #4

0800323a <final_msg_set_ts>:
 * @return none
 */
void final_msg_set_ts(uint8_t *ts_field, uint64_t ts)
{
    uint8_t i;
    for (i = 0; i < FINAL_MSG_TS_LEN; i++)
 800323a:	2100      	movs	r1, #0
 800323c:	e006      	b.n	800324c <final_msg_set_ts+0x12>
    {
        ts_field[i] = (uint8_t)ts;
 800323e:	5442      	strb	r2, [r0, r1]
        ts >>= 8;
 8003240:	0a12      	lsrs	r2, r2, #8
 8003242:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
 8003246:	0a1b      	lsrs	r3, r3, #8
    for (i = 0; i < FINAL_MSG_TS_LEN; i++)
 8003248:	3101      	adds	r1, #1
 800324a:	b2c9      	uxtb	r1, r1
 800324c:	2903      	cmp	r1, #3
 800324e:	d9f6      	bls.n	800323e <final_msg_set_ts+0x4>
    }
}
 8003250:	4770      	bx	lr
	...

08003254 <MX_SPI1_Init>:
 8003254:	b508      	push	{r3, lr}
 8003256:	4810      	ldr	r0, [pc, #64]	; (8003298 <MX_SPI1_Init+0x44>)
 8003258:	4b10      	ldr	r3, [pc, #64]	; (800329c <MX_SPI1_Init+0x48>)
 800325a:	6003      	str	r3, [r0, #0]
 800325c:	f44f 7382 	mov.w	r3, #260	; 0x104
 8003260:	6043      	str	r3, [r0, #4]
 8003262:	2300      	movs	r3, #0
 8003264:	6083      	str	r3, [r0, #8]
 8003266:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 800326a:	60c2      	str	r2, [r0, #12]
 800326c:	6103      	str	r3, [r0, #16]
 800326e:	6143      	str	r3, [r0, #20]
 8003270:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003274:	6182      	str	r2, [r0, #24]
 8003276:	2218      	movs	r2, #24
 8003278:	61c2      	str	r2, [r0, #28]
 800327a:	6203      	str	r3, [r0, #32]
 800327c:	6243      	str	r3, [r0, #36]	; 0x24
 800327e:	6283      	str	r3, [r0, #40]	; 0x28
 8003280:	2207      	movs	r2, #7
 8003282:	62c2      	str	r2, [r0, #44]	; 0x2c
 8003284:	6303      	str	r3, [r0, #48]	; 0x30
 8003286:	2308      	movs	r3, #8
 8003288:	6343      	str	r3, [r0, #52]	; 0x34
 800328a:	f001 fa21 	bl	80046d0 <HAL_SPI_Init>
 800328e:	b900      	cbnz	r0, 8003292 <MX_SPI1_Init+0x3e>
 8003290:	bd08      	pop	{r3, pc}
 8003292:	f7ff fe77 	bl	8002f84 <Error_Handler>
 8003296:	e7fb      	b.n	8003290 <MX_SPI1_Init+0x3c>
 8003298:	20000328 	.word	0x20000328
 800329c:	40013000 	.word	0x40013000

080032a0 <HAL_SPI_MspInit>:
 80032a0:	b500      	push	{lr}
 80032a2:	b089      	sub	sp, #36	; 0x24
 80032a4:	2300      	movs	r3, #0
 80032a6:	9303      	str	r3, [sp, #12]
 80032a8:	9304      	str	r3, [sp, #16]
 80032aa:	9305      	str	r3, [sp, #20]
 80032ac:	9306      	str	r3, [sp, #24]
 80032ae:	9307      	str	r3, [sp, #28]
 80032b0:	6802      	ldr	r2, [r0, #0]
 80032b2:	4b14      	ldr	r3, [pc, #80]	; (8003304 <HAL_SPI_MspInit+0x64>)
 80032b4:	429a      	cmp	r2, r3
 80032b6:	d002      	beq.n	80032be <HAL_SPI_MspInit+0x1e>
 80032b8:	b009      	add	sp, #36	; 0x24
 80032ba:	f85d fb04 	ldr.w	pc, [sp], #4
 80032be:	f503 4360 	add.w	r3, r3, #57344	; 0xe000
 80032c2:	699a      	ldr	r2, [r3, #24]
 80032c4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80032c8:	619a      	str	r2, [r3, #24]
 80032ca:	699a      	ldr	r2, [r3, #24]
 80032cc:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 80032d0:	9201      	str	r2, [sp, #4]
 80032d2:	9a01      	ldr	r2, [sp, #4]
 80032d4:	695a      	ldr	r2, [r3, #20]
 80032d6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80032da:	615a      	str	r2, [r3, #20]
 80032dc:	695b      	ldr	r3, [r3, #20]
 80032de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80032e2:	9302      	str	r3, [sp, #8]
 80032e4:	9b02      	ldr	r3, [sp, #8]
 80032e6:	23e0      	movs	r3, #224	; 0xe0
 80032e8:	9303      	str	r3, [sp, #12]
 80032ea:	2302      	movs	r3, #2
 80032ec:	9304      	str	r3, [sp, #16]
 80032ee:	2303      	movs	r3, #3
 80032f0:	9306      	str	r3, [sp, #24]
 80032f2:	2305      	movs	r3, #5
 80032f4:	9307      	str	r3, [sp, #28]
 80032f6:	a903      	add	r1, sp, #12
 80032f8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80032fc:	f000 fa10 	bl	8003720 <HAL_GPIO_Init>
 8003300:	e7da      	b.n	80032b8 <HAL_SPI_MspInit+0x18>
 8003302:	bf00      	nop
 8003304:	40013000 	.word	0x40013000

08003308 <HAL_InitTick>:
 8003308:	b510      	push	{r4, lr}
 800330a:	4604      	mov	r4, r0
 800330c:	4b0e      	ldr	r3, [pc, #56]	; (8003348 <HAL_InitTick+0x40>)
 800330e:	7818      	ldrb	r0, [r3, #0]
 8003310:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003314:	fbb3 f3f0 	udiv	r3, r3, r0
 8003318:	4a0c      	ldr	r2, [pc, #48]	; (800334c <HAL_InitTick+0x44>)
 800331a:	6810      	ldr	r0, [r2, #0]
 800331c:	fbb0 f0f3 	udiv	r0, r0, r3
 8003320:	f000 f8a8 	bl	8003474 <HAL_SYSTICK_Config>
 8003324:	b968      	cbnz	r0, 8003342 <HAL_InitTick+0x3a>
 8003326:	2c0f      	cmp	r4, #15
 8003328:	d901      	bls.n	800332e <HAL_InitTick+0x26>
 800332a:	2001      	movs	r0, #1
 800332c:	e00a      	b.n	8003344 <HAL_InitTick+0x3c>
 800332e:	2200      	movs	r2, #0
 8003330:	4621      	mov	r1, r4
 8003332:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003336:	f000 f857 	bl	80033e8 <HAL_NVIC_SetPriority>
 800333a:	4b05      	ldr	r3, [pc, #20]	; (8003350 <HAL_InitTick+0x48>)
 800333c:	601c      	str	r4, [r3, #0]
 800333e:	2000      	movs	r0, #0
 8003340:	e000      	b.n	8003344 <HAL_InitTick+0x3c>
 8003342:	2001      	movs	r0, #1
 8003344:	bd10      	pop	{r4, pc}
 8003346:	bf00      	nop
 8003348:	200000fc 	.word	0x200000fc
 800334c:	20000104 	.word	0x20000104
 8003350:	20000100 	.word	0x20000100

08003354 <HAL_Init>:
 8003354:	b508      	push	{r3, lr}
 8003356:	4a07      	ldr	r2, [pc, #28]	; (8003374 <HAL_Init+0x20>)
 8003358:	6813      	ldr	r3, [r2, #0]
 800335a:	f043 0310 	orr.w	r3, r3, #16
 800335e:	6013      	str	r3, [r2, #0]
 8003360:	2003      	movs	r0, #3
 8003362:	f000 f82f 	bl	80033c4 <HAL_NVIC_SetPriorityGrouping>
 8003366:	200f      	movs	r0, #15
 8003368:	f7ff ffce 	bl	8003308 <HAL_InitTick>
 800336c:	f000 fac2 	bl	80038f4 <HAL_MspInit>
 8003370:	2000      	movs	r0, #0
 8003372:	bd08      	pop	{r3, pc}
 8003374:	40022000 	.word	0x40022000

08003378 <HAL_IncTick>:
 8003378:	4a03      	ldr	r2, [pc, #12]	; (8003388 <HAL_IncTick+0x10>)
 800337a:	6811      	ldr	r1, [r2, #0]
 800337c:	4b03      	ldr	r3, [pc, #12]	; (800338c <HAL_IncTick+0x14>)
 800337e:	781b      	ldrb	r3, [r3, #0]
 8003380:	440b      	add	r3, r1
 8003382:	6013      	str	r3, [r2, #0]
 8003384:	4770      	bx	lr
 8003386:	bf00      	nop
 8003388:	2000038c 	.word	0x2000038c
 800338c:	200000fc 	.word	0x200000fc

08003390 <HAL_GetTick>:
 8003390:	4b01      	ldr	r3, [pc, #4]	; (8003398 <HAL_GetTick+0x8>)
 8003392:	6818      	ldr	r0, [r3, #0]
 8003394:	4770      	bx	lr
 8003396:	bf00      	nop
 8003398:	2000038c 	.word	0x2000038c

0800339c <HAL_Delay>:
 800339c:	b538      	push	{r3, r4, r5, lr}
 800339e:	4604      	mov	r4, r0
 80033a0:	f7ff fff6 	bl	8003390 <HAL_GetTick>
 80033a4:	4605      	mov	r5, r0
 80033a6:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
 80033aa:	d002      	beq.n	80033b2 <HAL_Delay+0x16>
 80033ac:	4b04      	ldr	r3, [pc, #16]	; (80033c0 <HAL_Delay+0x24>)
 80033ae:	781b      	ldrb	r3, [r3, #0]
 80033b0:	441c      	add	r4, r3
 80033b2:	f7ff ffed 	bl	8003390 <HAL_GetTick>
 80033b6:	1b40      	subs	r0, r0, r5
 80033b8:	42a0      	cmp	r0, r4
 80033ba:	d3fa      	bcc.n	80033b2 <HAL_Delay+0x16>
 80033bc:	bd38      	pop	{r3, r4, r5, pc}
 80033be:	bf00      	nop
 80033c0:	200000fc 	.word	0x200000fc

080033c4 <HAL_NVIC_SetPriorityGrouping>:
 80033c4:	4a07      	ldr	r2, [pc, #28]	; (80033e4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80033c6:	68d3      	ldr	r3, [r2, #12]
 80033c8:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80033cc:	041b      	lsls	r3, r3, #16
 80033ce:	0c1b      	lsrs	r3, r3, #16
 80033d0:	0200      	lsls	r0, r0, #8
 80033d2:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 80033d6:	4303      	orrs	r3, r0
 80033d8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80033dc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80033e0:	60d3      	str	r3, [r2, #12]
 80033e2:	4770      	bx	lr
 80033e4:	e000ed00 	.word	0xe000ed00

080033e8 <HAL_NVIC_SetPriority>:
 80033e8:	b500      	push	{lr}
 80033ea:	4b19      	ldr	r3, [pc, #100]	; (8003450 <HAL_NVIC_SetPriority+0x68>)
 80033ec:	68db      	ldr	r3, [r3, #12]
 80033ee:	f3c3 2302 	ubfx	r3, r3, #8, #3
 80033f2:	f1c3 0c07 	rsb	ip, r3, #7
 80033f6:	f1bc 0f04 	cmp.w	ip, #4
 80033fa:	bf28      	it	cs
 80033fc:	f04f 0c04 	movcs.w	ip, #4
 8003400:	f103 0e04 	add.w	lr, r3, #4
 8003404:	f1be 0f06 	cmp.w	lr, #6
 8003408:	d918      	bls.n	800343c <HAL_NVIC_SetPriority+0x54>
 800340a:	3b03      	subs	r3, #3
 800340c:	f04f 3eff 	mov.w	lr, #4294967295	; 0xffffffff
 8003410:	fa0e fc0c 	lsl.w	ip, lr, ip
 8003414:	ea21 010c 	bic.w	r1, r1, ip
 8003418:	4099      	lsls	r1, r3
 800341a:	fa0e f303 	lsl.w	r3, lr, r3
 800341e:	ea22 0303 	bic.w	r3, r2, r3
 8003422:	4319      	orrs	r1, r3
 8003424:	2800      	cmp	r0, #0
 8003426:	db0b      	blt.n	8003440 <HAL_NVIC_SetPriority+0x58>
 8003428:	0109      	lsls	r1, r1, #4
 800342a:	b2c9      	uxtb	r1, r1
 800342c:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8003430:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8003434:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
 8003438:	f85d fb04 	ldr.w	pc, [sp], #4
 800343c:	2300      	movs	r3, #0
 800343e:	e7e5      	b.n	800340c <HAL_NVIC_SetPriority+0x24>
 8003440:	f000 000f 	and.w	r0, r0, #15
 8003444:	0109      	lsls	r1, r1, #4
 8003446:	b2c9      	uxtb	r1, r1
 8003448:	4b02      	ldr	r3, [pc, #8]	; (8003454 <HAL_NVIC_SetPriority+0x6c>)
 800344a:	5419      	strb	r1, [r3, r0]
 800344c:	e7f4      	b.n	8003438 <HAL_NVIC_SetPriority+0x50>
 800344e:	bf00      	nop
 8003450:	e000ed00 	.word	0xe000ed00
 8003454:	e000ed14 	.word	0xe000ed14

08003458 <HAL_NVIC_EnableIRQ>:
 8003458:	2800      	cmp	r0, #0
 800345a:	db07      	blt.n	800346c <HAL_NVIC_EnableIRQ+0x14>
 800345c:	f000 021f 	and.w	r2, r0, #31
 8003460:	0940      	lsrs	r0, r0, #5
 8003462:	2301      	movs	r3, #1
 8003464:	4093      	lsls	r3, r2
 8003466:	4a02      	ldr	r2, [pc, #8]	; (8003470 <HAL_NVIC_EnableIRQ+0x18>)
 8003468:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 800346c:	4770      	bx	lr
 800346e:	bf00      	nop
 8003470:	e000e100 	.word	0xe000e100

08003474 <HAL_SYSTICK_Config>:
 8003474:	3801      	subs	r0, #1
 8003476:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800347a:	d20b      	bcs.n	8003494 <HAL_SYSTICK_Config+0x20>
 800347c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8003480:	6158      	str	r0, [r3, #20]
 8003482:	4a05      	ldr	r2, [pc, #20]	; (8003498 <HAL_SYSTICK_Config+0x24>)
 8003484:	21f0      	movs	r1, #240	; 0xf0
 8003486:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
 800348a:	2000      	movs	r0, #0
 800348c:	6198      	str	r0, [r3, #24]
 800348e:	2207      	movs	r2, #7
 8003490:	611a      	str	r2, [r3, #16]
 8003492:	4770      	bx	lr
 8003494:	2001      	movs	r0, #1
 8003496:	4770      	bx	lr
 8003498:	e000ed00 	.word	0xe000ed00

0800349c <DMA_SetConfig>:
 800349c:	b430      	push	{r4, r5}
 800349e:	2401      	movs	r4, #1
 80034a0:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80034a2:	40ac      	lsls	r4, r5
 80034a4:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 80034a6:	606c      	str	r4, [r5, #4]
 80034a8:	6804      	ldr	r4, [r0, #0]
 80034aa:	6063      	str	r3, [r4, #4]
 80034ac:	6843      	ldr	r3, [r0, #4]
 80034ae:	2b10      	cmp	r3, #16
 80034b0:	d005      	beq.n	80034be <DMA_SetConfig+0x22>
 80034b2:	6803      	ldr	r3, [r0, #0]
 80034b4:	6099      	str	r1, [r3, #8]
 80034b6:	6803      	ldr	r3, [r0, #0]
 80034b8:	60da      	str	r2, [r3, #12]
 80034ba:	bc30      	pop	{r4, r5}
 80034bc:	4770      	bx	lr
 80034be:	6803      	ldr	r3, [r0, #0]
 80034c0:	609a      	str	r2, [r3, #8]
 80034c2:	6803      	ldr	r3, [r0, #0]
 80034c4:	60d9      	str	r1, [r3, #12]
 80034c6:	e7f8      	b.n	80034ba <DMA_SetConfig+0x1e>

080034c8 <DMA_CalcBaseAndBitshift>:
 80034c8:	6802      	ldr	r2, [r0, #0]
 80034ca:	4b0c      	ldr	r3, [pc, #48]	; (80034fc <DMA_CalcBaseAndBitshift+0x34>)
 80034cc:	429a      	cmp	r2, r3
 80034ce:	d80a      	bhi.n	80034e6 <DMA_CalcBaseAndBitshift+0x1e>
 80034d0:	4b0b      	ldr	r3, [pc, #44]	; (8003500 <DMA_CalcBaseAndBitshift+0x38>)
 80034d2:	4413      	add	r3, r2
 80034d4:	4a0b      	ldr	r2, [pc, #44]	; (8003504 <DMA_CalcBaseAndBitshift+0x3c>)
 80034d6:	fba2 2303 	umull	r2, r3, r2, r3
 80034da:	091b      	lsrs	r3, r3, #4
 80034dc:	009b      	lsls	r3, r3, #2
 80034de:	6403      	str	r3, [r0, #64]	; 0x40
 80034e0:	4b09      	ldr	r3, [pc, #36]	; (8003508 <DMA_CalcBaseAndBitshift+0x40>)
 80034e2:	63c3      	str	r3, [r0, #60]	; 0x3c
 80034e4:	4770      	bx	lr
 80034e6:	4b09      	ldr	r3, [pc, #36]	; (800350c <DMA_CalcBaseAndBitshift+0x44>)
 80034e8:	4413      	add	r3, r2
 80034ea:	4a06      	ldr	r2, [pc, #24]	; (8003504 <DMA_CalcBaseAndBitshift+0x3c>)
 80034ec:	fba2 2303 	umull	r2, r3, r2, r3
 80034f0:	091b      	lsrs	r3, r3, #4
 80034f2:	009b      	lsls	r3, r3, #2
 80034f4:	6403      	str	r3, [r0, #64]	; 0x40
 80034f6:	4b06      	ldr	r3, [pc, #24]	; (8003510 <DMA_CalcBaseAndBitshift+0x48>)
 80034f8:	63c3      	str	r3, [r0, #60]	; 0x3c
 80034fa:	4770      	bx	lr
 80034fc:	40020407 	.word	0x40020407
 8003500:	bffdfff8 	.word	0xbffdfff8
 8003504:	cccccccd 	.word	0xcccccccd
 8003508:	40020000 	.word	0x40020000
 800350c:	bffdfbf8 	.word	0xbffdfbf8
 8003510:	40020400 	.word	0x40020400

08003514 <HAL_DMA_Init>:
 8003514:	b320      	cbz	r0, 8003560 <HAL_DMA_Init+0x4c>
 8003516:	b510      	push	{r4, lr}
 8003518:	4604      	mov	r4, r0
 800351a:	2302      	movs	r3, #2
 800351c:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
 8003520:	6801      	ldr	r1, [r0, #0]
 8003522:	680a      	ldr	r2, [r1, #0]
 8003524:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8003528:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 800352c:	6843      	ldr	r3, [r0, #4]
 800352e:	6880      	ldr	r0, [r0, #8]
 8003530:	4303      	orrs	r3, r0
 8003532:	68e0      	ldr	r0, [r4, #12]
 8003534:	4303      	orrs	r3, r0
 8003536:	6920      	ldr	r0, [r4, #16]
 8003538:	4303      	orrs	r3, r0
 800353a:	6960      	ldr	r0, [r4, #20]
 800353c:	4303      	orrs	r3, r0
 800353e:	69a0      	ldr	r0, [r4, #24]
 8003540:	4303      	orrs	r3, r0
 8003542:	69e0      	ldr	r0, [r4, #28]
 8003544:	4303      	orrs	r3, r0
 8003546:	4313      	orrs	r3, r2
 8003548:	600b      	str	r3, [r1, #0]
 800354a:	4620      	mov	r0, r4
 800354c:	f7ff ffbc 	bl	80034c8 <DMA_CalcBaseAndBitshift>
 8003550:	2000      	movs	r0, #0
 8003552:	63a0      	str	r0, [r4, #56]	; 0x38
 8003554:	2301      	movs	r3, #1
 8003556:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800355a:	f884 0020 	strb.w	r0, [r4, #32]
 800355e:	bd10      	pop	{r4, pc}
 8003560:	2001      	movs	r0, #1
 8003562:	4770      	bx	lr

08003564 <HAL_DMA_Start_IT>:
 8003564:	b538      	push	{r3, r4, r5, lr}
 8003566:	4604      	mov	r4, r0
 8003568:	f890 0020 	ldrb.w	r0, [r0, #32]
 800356c:	2801      	cmp	r0, #1
 800356e:	d031      	beq.n	80035d4 <HAL_DMA_Start_IT+0x70>
 8003570:	2001      	movs	r0, #1
 8003572:	f884 0020 	strb.w	r0, [r4, #32]
 8003576:	f894 0021 	ldrb.w	r0, [r4, #33]	; 0x21
 800357a:	2801      	cmp	r0, #1
 800357c:	d004      	beq.n	8003588 <HAL_DMA_Start_IT+0x24>
 800357e:	2300      	movs	r3, #0
 8003580:	f884 3020 	strb.w	r3, [r4, #32]
 8003584:	2002      	movs	r0, #2
 8003586:	bd38      	pop	{r3, r4, r5, pc}
 8003588:	2002      	movs	r0, #2
 800358a:	f884 0021 	strb.w	r0, [r4, #33]	; 0x21
 800358e:	2000      	movs	r0, #0
 8003590:	63a0      	str	r0, [r4, #56]	; 0x38
 8003592:	6825      	ldr	r5, [r4, #0]
 8003594:	6828      	ldr	r0, [r5, #0]
 8003596:	f020 0001 	bic.w	r0, r0, #1
 800359a:	6028      	str	r0, [r5, #0]
 800359c:	4620      	mov	r0, r4
 800359e:	f7ff ff7d 	bl	800349c <DMA_SetConfig>
 80035a2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80035a4:	b15b      	cbz	r3, 80035be <HAL_DMA_Start_IT+0x5a>
 80035a6:	6822      	ldr	r2, [r4, #0]
 80035a8:	6813      	ldr	r3, [r2, #0]
 80035aa:	f043 030e 	orr.w	r3, r3, #14
 80035ae:	6013      	str	r3, [r2, #0]
 80035b0:	6822      	ldr	r2, [r4, #0]
 80035b2:	6813      	ldr	r3, [r2, #0]
 80035b4:	f043 0301 	orr.w	r3, r3, #1
 80035b8:	6013      	str	r3, [r2, #0]
 80035ba:	2000      	movs	r0, #0
 80035bc:	e7e3      	b.n	8003586 <HAL_DMA_Start_IT+0x22>
 80035be:	6822      	ldr	r2, [r4, #0]
 80035c0:	6813      	ldr	r3, [r2, #0]
 80035c2:	f043 030a 	orr.w	r3, r3, #10
 80035c6:	6013      	str	r3, [r2, #0]
 80035c8:	6822      	ldr	r2, [r4, #0]
 80035ca:	6813      	ldr	r3, [r2, #0]
 80035cc:	f023 0304 	bic.w	r3, r3, #4
 80035d0:	6013      	str	r3, [r2, #0]
 80035d2:	e7ed      	b.n	80035b0 <HAL_DMA_Start_IT+0x4c>
 80035d4:	2002      	movs	r0, #2
 80035d6:	e7d6      	b.n	8003586 <HAL_DMA_Start_IT+0x22>

080035d8 <HAL_DMA_Abort>:
 80035d8:	4603      	mov	r3, r0
 80035da:	b300      	cbz	r0, 800361e <HAL_DMA_Abort+0x46>
 80035dc:	f890 2021 	ldrb.w	r2, [r0, #33]	; 0x21
 80035e0:	2a02      	cmp	r2, #2
 80035e2:	d006      	beq.n	80035f2 <HAL_DMA_Abort+0x1a>
 80035e4:	2204      	movs	r2, #4
 80035e6:	6382      	str	r2, [r0, #56]	; 0x38
 80035e8:	2200      	movs	r2, #0
 80035ea:	f880 2020 	strb.w	r2, [r0, #32]
 80035ee:	2001      	movs	r0, #1
 80035f0:	4770      	bx	lr
 80035f2:	6801      	ldr	r1, [r0, #0]
 80035f4:	680a      	ldr	r2, [r1, #0]
 80035f6:	f022 020e 	bic.w	r2, r2, #14
 80035fa:	600a      	str	r2, [r1, #0]
 80035fc:	6801      	ldr	r1, [r0, #0]
 80035fe:	680a      	ldr	r2, [r1, #0]
 8003600:	f022 0201 	bic.w	r2, r2, #1
 8003604:	600a      	str	r2, [r1, #0]
 8003606:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8003608:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800360a:	2101      	movs	r1, #1
 800360c:	fa01 f202 	lsl.w	r2, r1, r2
 8003610:	6042      	str	r2, [r0, #4]
 8003612:	f883 1021 	strb.w	r1, [r3, #33]	; 0x21
 8003616:	2000      	movs	r0, #0
 8003618:	f883 0020 	strb.w	r0, [r3, #32]
 800361c:	4770      	bx	lr
 800361e:	2001      	movs	r0, #1
 8003620:	4770      	bx	lr

08003622 <HAL_DMA_Abort_IT>:
 8003622:	b508      	push	{r3, lr}
 8003624:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 8003628:	2b02      	cmp	r3, #2
 800362a:	d003      	beq.n	8003634 <HAL_DMA_Abort_IT+0x12>
 800362c:	2304      	movs	r3, #4
 800362e:	6383      	str	r3, [r0, #56]	; 0x38
 8003630:	2001      	movs	r0, #1
 8003632:	bd08      	pop	{r3, pc}
 8003634:	6802      	ldr	r2, [r0, #0]
 8003636:	6813      	ldr	r3, [r2, #0]
 8003638:	f023 030e 	bic.w	r3, r3, #14
 800363c:	6013      	str	r3, [r2, #0]
 800363e:	6802      	ldr	r2, [r0, #0]
 8003640:	6813      	ldr	r3, [r2, #0]
 8003642:	f023 0301 	bic.w	r3, r3, #1
 8003646:	6013      	str	r3, [r2, #0]
 8003648:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800364a:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
 800364c:	2201      	movs	r2, #1
 800364e:	fa02 f303 	lsl.w	r3, r2, r3
 8003652:	604b      	str	r3, [r1, #4]
 8003654:	f880 2021 	strb.w	r2, [r0, #33]	; 0x21
 8003658:	2300      	movs	r3, #0
 800365a:	f880 3020 	strb.w	r3, [r0, #32]
 800365e:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8003660:	b113      	cbz	r3, 8003668 <HAL_DMA_Abort_IT+0x46>
 8003662:	4798      	blx	r3
 8003664:	2000      	movs	r0, #0
 8003666:	e7e4      	b.n	8003632 <HAL_DMA_Abort_IT+0x10>
 8003668:	2000      	movs	r0, #0
 800366a:	e7e2      	b.n	8003632 <HAL_DMA_Abort_IT+0x10>

0800366c <HAL_DMA_IRQHandler>:
 800366c:	b538      	push	{r3, r4, r5, lr}
 800366e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8003670:	681a      	ldr	r2, [r3, #0]
 8003672:	6804      	ldr	r4, [r0, #0]
 8003674:	6825      	ldr	r5, [r4, #0]
 8003676:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8003678:	2304      	movs	r3, #4
 800367a:	408b      	lsls	r3, r1
 800367c:	4213      	tst	r3, r2
 800367e:	d013      	beq.n	80036a8 <HAL_DMA_IRQHandler+0x3c>
 8003680:	f015 0f04 	tst.w	r5, #4
 8003684:	d010      	beq.n	80036a8 <HAL_DMA_IRQHandler+0x3c>
 8003686:	6823      	ldr	r3, [r4, #0]
 8003688:	f013 0f20 	tst.w	r3, #32
 800368c:	d103      	bne.n	8003696 <HAL_DMA_IRQHandler+0x2a>
 800368e:	6823      	ldr	r3, [r4, #0]
 8003690:	f023 0304 	bic.w	r3, r3, #4
 8003694:	6023      	str	r3, [r4, #0]
 8003696:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8003698:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800369a:	2304      	movs	r3, #4
 800369c:	408b      	lsls	r3, r1
 800369e:	6053      	str	r3, [r2, #4]
 80036a0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80036a2:	b103      	cbz	r3, 80036a6 <HAL_DMA_IRQHandler+0x3a>
 80036a4:	4798      	blx	r3
 80036a6:	bd38      	pop	{r3, r4, r5, pc}
 80036a8:	2302      	movs	r3, #2
 80036aa:	408b      	lsls	r3, r1
 80036ac:	4213      	tst	r3, r2
 80036ae:	d01a      	beq.n	80036e6 <HAL_DMA_IRQHandler+0x7a>
 80036b0:	f015 0f02 	tst.w	r5, #2
 80036b4:	d017      	beq.n	80036e6 <HAL_DMA_IRQHandler+0x7a>
 80036b6:	6823      	ldr	r3, [r4, #0]
 80036b8:	f013 0f20 	tst.w	r3, #32
 80036bc:	d106      	bne.n	80036cc <HAL_DMA_IRQHandler+0x60>
 80036be:	6823      	ldr	r3, [r4, #0]
 80036c0:	f023 030a 	bic.w	r3, r3, #10
 80036c4:	6023      	str	r3, [r4, #0]
 80036c6:	2301      	movs	r3, #1
 80036c8:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
 80036cc:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80036ce:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80036d0:	2302      	movs	r3, #2
 80036d2:	408b      	lsls	r3, r1
 80036d4:	6053      	str	r3, [r2, #4]
 80036d6:	2300      	movs	r3, #0
 80036d8:	f880 3020 	strb.w	r3, [r0, #32]
 80036dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80036de:	2b00      	cmp	r3, #0
 80036e0:	d0e1      	beq.n	80036a6 <HAL_DMA_IRQHandler+0x3a>
 80036e2:	4798      	blx	r3
 80036e4:	e7df      	b.n	80036a6 <HAL_DMA_IRQHandler+0x3a>
 80036e6:	2308      	movs	r3, #8
 80036e8:	fa03 f101 	lsl.w	r1, r3, r1
 80036ec:	4211      	tst	r1, r2
 80036ee:	d0da      	beq.n	80036a6 <HAL_DMA_IRQHandler+0x3a>
 80036f0:	f015 0f08 	tst.w	r5, #8
 80036f4:	d0d7      	beq.n	80036a6 <HAL_DMA_IRQHandler+0x3a>
 80036f6:	6823      	ldr	r3, [r4, #0]
 80036f8:	f023 030e 	bic.w	r3, r3, #14
 80036fc:	6023      	str	r3, [r4, #0]
 80036fe:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8003700:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
 8003702:	2301      	movs	r3, #1
 8003704:	fa03 f202 	lsl.w	r2, r3, r2
 8003708:	604a      	str	r2, [r1, #4]
 800370a:	6383      	str	r3, [r0, #56]	; 0x38
 800370c:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
 8003710:	2300      	movs	r3, #0
 8003712:	f880 3020 	strb.w	r3, [r0, #32]
 8003716:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8003718:	2b00      	cmp	r3, #0
 800371a:	d0c4      	beq.n	80036a6 <HAL_DMA_IRQHandler+0x3a>
 800371c:	4798      	blx	r3
 800371e:	e7c2      	b.n	80036a6 <HAL_DMA_IRQHandler+0x3a>

08003720 <HAL_GPIO_Init>:
 8003720:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003722:	b083      	sub	sp, #12
 8003724:	2300      	movs	r3, #0
 8003726:	e062      	b.n	80037ee <HAL_GPIO_Init+0xce>
 8003728:	6885      	ldr	r5, [r0, #8]
 800372a:	005e      	lsls	r6, r3, #1
 800372c:	2403      	movs	r4, #3
 800372e:	40b4      	lsls	r4, r6
 8003730:	ea25 0504 	bic.w	r5, r5, r4
 8003734:	68cc      	ldr	r4, [r1, #12]
 8003736:	40b4      	lsls	r4, r6
 8003738:	432c      	orrs	r4, r5
 800373a:	6084      	str	r4, [r0, #8]
 800373c:	6844      	ldr	r4, [r0, #4]
 800373e:	ea24 0c0c 	bic.w	ip, r4, ip
 8003742:	684c      	ldr	r4, [r1, #4]
 8003744:	f3c4 1400 	ubfx	r4, r4, #4, #1
 8003748:	409c      	lsls	r4, r3
 800374a:	ea44 040c 	orr.w	r4, r4, ip
 800374e:	6044      	str	r4, [r0, #4]
 8003750:	e05e      	b.n	8003810 <HAL_GPIO_Init+0xf0>
 8003752:	08dd      	lsrs	r5, r3, #3
 8003754:	3508      	adds	r5, #8
 8003756:	f850 6025 	ldr.w	r6, [r0, r5, lsl #2]
 800375a:	f003 0407 	and.w	r4, r3, #7
 800375e:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 8003762:	240f      	movs	r4, #15
 8003764:	fa04 f40c 	lsl.w	r4, r4, ip
 8003768:	ea26 0e04 	bic.w	lr, r6, r4
 800376c:	690c      	ldr	r4, [r1, #16]
 800376e:	fa04 f40c 	lsl.w	r4, r4, ip
 8003772:	ea44 040e 	orr.w	r4, r4, lr
 8003776:	f840 4025 	str.w	r4, [r0, r5, lsl #2]
 800377a:	e060      	b.n	800383e <HAL_GPIO_Init+0x11e>
 800377c:	2404      	movs	r4, #4
 800377e:	e000      	b.n	8003782 <HAL_GPIO_Init+0x62>
 8003780:	2400      	movs	r4, #0
 8003782:	fa04 f40e 	lsl.w	r4, r4, lr
 8003786:	432c      	orrs	r4, r5
 8003788:	f10c 0c02 	add.w	ip, ip, #2
 800378c:	4d52      	ldr	r5, [pc, #328]	; (80038d8 <HAL_GPIO_Init+0x1b8>)
 800378e:	f845 402c 	str.w	r4, [r5, ip, lsl #2]
 8003792:	4c52      	ldr	r4, [pc, #328]	; (80038dc <HAL_GPIO_Init+0x1bc>)
 8003794:	68a5      	ldr	r5, [r4, #8]
 8003796:	43d4      	mvns	r4, r2
 8003798:	ea25 0602 	bic.w	r6, r5, r2
 800379c:	684f      	ldr	r7, [r1, #4]
 800379e:	f417 1f80 	tst.w	r7, #1048576	; 0x100000
 80037a2:	d001      	beq.n	80037a8 <HAL_GPIO_Init+0x88>
 80037a4:	ea42 0605 	orr.w	r6, r2, r5
 80037a8:	4d4c      	ldr	r5, [pc, #304]	; (80038dc <HAL_GPIO_Init+0x1bc>)
 80037aa:	60ae      	str	r6, [r5, #8]
 80037ac:	68ed      	ldr	r5, [r5, #12]
 80037ae:	ea04 0605 	and.w	r6, r4, r5
 80037b2:	684f      	ldr	r7, [r1, #4]
 80037b4:	f417 1f00 	tst.w	r7, #2097152	; 0x200000
 80037b8:	d001      	beq.n	80037be <HAL_GPIO_Init+0x9e>
 80037ba:	ea42 0605 	orr.w	r6, r2, r5
 80037be:	4d47      	ldr	r5, [pc, #284]	; (80038dc <HAL_GPIO_Init+0x1bc>)
 80037c0:	60ee      	str	r6, [r5, #12]
 80037c2:	686d      	ldr	r5, [r5, #4]
 80037c4:	ea04 0605 	and.w	r6, r4, r5
 80037c8:	684f      	ldr	r7, [r1, #4]
 80037ca:	f417 3f00 	tst.w	r7, #131072	; 0x20000
 80037ce:	d001      	beq.n	80037d4 <HAL_GPIO_Init+0xb4>
 80037d0:	ea42 0605 	orr.w	r6, r2, r5
 80037d4:	4d41      	ldr	r5, [pc, #260]	; (80038dc <HAL_GPIO_Init+0x1bc>)
 80037d6:	606e      	str	r6, [r5, #4]
 80037d8:	682d      	ldr	r5, [r5, #0]
 80037da:	402c      	ands	r4, r5
 80037dc:	684e      	ldr	r6, [r1, #4]
 80037de:	f416 3f80 	tst.w	r6, #65536	; 0x10000
 80037e2:	d001      	beq.n	80037e8 <HAL_GPIO_Init+0xc8>
 80037e4:	ea42 0405 	orr.w	r4, r2, r5
 80037e8:	4a3c      	ldr	r2, [pc, #240]	; (80038dc <HAL_GPIO_Init+0x1bc>)
 80037ea:	6014      	str	r4, [r2, #0]
 80037ec:	3301      	adds	r3, #1
 80037ee:	680a      	ldr	r2, [r1, #0]
 80037f0:	fa32 f403 	lsrs.w	r4, r2, r3
 80037f4:	d06e      	beq.n	80038d4 <HAL_GPIO_Init+0x1b4>
 80037f6:	f04f 0c01 	mov.w	ip, #1
 80037fa:	fa0c fc03 	lsl.w	ip, ip, r3
 80037fe:	ea1c 0202 	ands.w	r2, ip, r2
 8003802:	d0f3      	beq.n	80037ec <HAL_GPIO_Init+0xcc>
 8003804:	684c      	ldr	r4, [r1, #4]
 8003806:	f004 0403 	and.w	r4, r4, #3
 800380a:	3c01      	subs	r4, #1
 800380c:	2c01      	cmp	r4, #1
 800380e:	d98b      	bls.n	8003728 <HAL_GPIO_Init+0x8>
 8003810:	684c      	ldr	r4, [r1, #4]
 8003812:	f004 0403 	and.w	r4, r4, #3
 8003816:	2c03      	cmp	r4, #3
 8003818:	d00c      	beq.n	8003834 <HAL_GPIO_Init+0x114>
 800381a:	68c4      	ldr	r4, [r0, #12]
 800381c:	005d      	lsls	r5, r3, #1
 800381e:	f04f 0c03 	mov.w	ip, #3
 8003822:	fa0c fc05 	lsl.w	ip, ip, r5
 8003826:	ea24 0c0c 	bic.w	ip, r4, ip
 800382a:	688c      	ldr	r4, [r1, #8]
 800382c:	40ac      	lsls	r4, r5
 800382e:	ea44 040c 	orr.w	r4, r4, ip
 8003832:	60c4      	str	r4, [r0, #12]
 8003834:	684c      	ldr	r4, [r1, #4]
 8003836:	f004 0403 	and.w	r4, r4, #3
 800383a:	2c02      	cmp	r4, #2
 800383c:	d089      	beq.n	8003752 <HAL_GPIO_Init+0x32>
 800383e:	6804      	ldr	r4, [r0, #0]
 8003840:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 8003844:	f04f 0c03 	mov.w	ip, #3
 8003848:	fa0c fc0e 	lsl.w	ip, ip, lr
 800384c:	ea24 0c0c 	bic.w	ip, r4, ip
 8003850:	684c      	ldr	r4, [r1, #4]
 8003852:	f004 0403 	and.w	r4, r4, #3
 8003856:	fa04 f40e 	lsl.w	r4, r4, lr
 800385a:	ea44 040c 	orr.w	r4, r4, ip
 800385e:	6004      	str	r4, [r0, #0]
 8003860:	684c      	ldr	r4, [r1, #4]
 8003862:	f414 3f40 	tst.w	r4, #196608	; 0x30000
 8003866:	d0c1      	beq.n	80037ec <HAL_GPIO_Init+0xcc>
 8003868:	4c1d      	ldr	r4, [pc, #116]	; (80038e0 <HAL_GPIO_Init+0x1c0>)
 800386a:	69a5      	ldr	r5, [r4, #24]
 800386c:	f045 0501 	orr.w	r5, r5, #1
 8003870:	61a5      	str	r5, [r4, #24]
 8003872:	69a4      	ldr	r4, [r4, #24]
 8003874:	f004 0401 	and.w	r4, r4, #1
 8003878:	9401      	str	r4, [sp, #4]
 800387a:	9c01      	ldr	r4, [sp, #4]
 800387c:	ea4f 0c93 	mov.w	ip, r3, lsr #2
 8003880:	f10c 0502 	add.w	r5, ip, #2
 8003884:	4c14      	ldr	r4, [pc, #80]	; (80038d8 <HAL_GPIO_Init+0x1b8>)
 8003886:	f854 5025 	ldr.w	r5, [r4, r5, lsl #2]
 800388a:	f003 0403 	and.w	r4, r3, #3
 800388e:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 8003892:	240f      	movs	r4, #15
 8003894:	fa04 f40e 	lsl.w	r4, r4, lr
 8003898:	ea25 0504 	bic.w	r5, r5, r4
 800389c:	f1b0 4f90 	cmp.w	r0, #1207959552	; 0x48000000
 80038a0:	f43f af6e 	beq.w	8003780 <HAL_GPIO_Init+0x60>
 80038a4:	4c0f      	ldr	r4, [pc, #60]	; (80038e4 <HAL_GPIO_Init+0x1c4>)
 80038a6:	42a0      	cmp	r0, r4
 80038a8:	d00e      	beq.n	80038c8 <HAL_GPIO_Init+0x1a8>
 80038aa:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80038ae:	42a0      	cmp	r0, r4
 80038b0:	d00c      	beq.n	80038cc <HAL_GPIO_Init+0x1ac>
 80038b2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80038b6:	42a0      	cmp	r0, r4
 80038b8:	d00a      	beq.n	80038d0 <HAL_GPIO_Init+0x1b0>
 80038ba:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80038be:	42a0      	cmp	r0, r4
 80038c0:	f43f af5c 	beq.w	800377c <HAL_GPIO_Init+0x5c>
 80038c4:	2405      	movs	r4, #5
 80038c6:	e75c      	b.n	8003782 <HAL_GPIO_Init+0x62>
 80038c8:	2401      	movs	r4, #1
 80038ca:	e75a      	b.n	8003782 <HAL_GPIO_Init+0x62>
 80038cc:	2402      	movs	r4, #2
 80038ce:	e758      	b.n	8003782 <HAL_GPIO_Init+0x62>
 80038d0:	2403      	movs	r4, #3
 80038d2:	e756      	b.n	8003782 <HAL_GPIO_Init+0x62>
 80038d4:	b003      	add	sp, #12
 80038d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80038d8:	40010000 	.word	0x40010000
 80038dc:	40010400 	.word	0x40010400
 80038e0:	40021000 	.word	0x40021000
 80038e4:	48000400 	.word	0x48000400

080038e8 <HAL_GPIO_WritePin>:
 80038e8:	b10a      	cbz	r2, 80038ee <HAL_GPIO_WritePin+0x6>
 80038ea:	6181      	str	r1, [r0, #24]
 80038ec:	4770      	bx	lr
 80038ee:	6281      	str	r1, [r0, #40]	; 0x28
 80038f0:	4770      	bx	lr
	...

080038f4 <HAL_MspInit>:
 80038f4:	b082      	sub	sp, #8
 80038f6:	4b0a      	ldr	r3, [pc, #40]	; (8003920 <HAL_MspInit+0x2c>)
 80038f8:	699a      	ldr	r2, [r3, #24]
 80038fa:	f042 0201 	orr.w	r2, r2, #1
 80038fe:	619a      	str	r2, [r3, #24]
 8003900:	699a      	ldr	r2, [r3, #24]
 8003902:	f002 0201 	and.w	r2, r2, #1
 8003906:	9200      	str	r2, [sp, #0]
 8003908:	9a00      	ldr	r2, [sp, #0]
 800390a:	69da      	ldr	r2, [r3, #28]
 800390c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003910:	61da      	str	r2, [r3, #28]
 8003912:	69db      	ldr	r3, [r3, #28]
 8003914:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003918:	9301      	str	r3, [sp, #4]
 800391a:	9b01      	ldr	r3, [sp, #4]
 800391c:	b002      	add	sp, #8
 800391e:	4770      	bx	lr
 8003920:	40021000 	.word	0x40021000

08003924 <HAL_RCC_OscConfig>:
 8003924:	2800      	cmp	r0, #0
 8003926:	f000 8301 	beq.w	8003f2c <HAL_RCC_OscConfig+0x608>
 800392a:	b570      	push	{r4, r5, r6, lr}
 800392c:	b082      	sub	sp, #8
 800392e:	4604      	mov	r4, r0
 8003930:	6803      	ldr	r3, [r0, #0]
 8003932:	f013 0f01 	tst.w	r3, #1
 8003936:	d03b      	beq.n	80039b0 <HAL_RCC_OscConfig+0x8c>
 8003938:	4bb5      	ldr	r3, [pc, #724]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 800393a:	685b      	ldr	r3, [r3, #4]
 800393c:	f003 030c 	and.w	r3, r3, #12
 8003940:	2b04      	cmp	r3, #4
 8003942:	d01e      	beq.n	8003982 <HAL_RCC_OscConfig+0x5e>
 8003944:	4bb2      	ldr	r3, [pc, #712]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003946:	685b      	ldr	r3, [r3, #4]
 8003948:	f003 030c 	and.w	r3, r3, #12
 800394c:	2b08      	cmp	r3, #8
 800394e:	d013      	beq.n	8003978 <HAL_RCC_OscConfig+0x54>
 8003950:	6863      	ldr	r3, [r4, #4]
 8003952:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003956:	d068      	beq.n	8003a2a <HAL_RCC_OscConfig+0x106>
 8003958:	2b00      	cmp	r3, #0
 800395a:	f040 8092 	bne.w	8003a82 <HAL_RCC_OscConfig+0x15e>
 800395e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8003962:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8003966:	681a      	ldr	r2, [r3, #0]
 8003968:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800396c:	601a      	str	r2, [r3, #0]
 800396e:	681a      	ldr	r2, [r3, #0]
 8003970:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003974:	601a      	str	r2, [r3, #0]
 8003976:	e05d      	b.n	8003a34 <HAL_RCC_OscConfig+0x110>
 8003978:	4ba5      	ldr	r3, [pc, #660]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 800397a:	685b      	ldr	r3, [r3, #4]
 800397c:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8003980:	d0e6      	beq.n	8003950 <HAL_RCC_OscConfig+0x2c>
 8003982:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003986:	fa93 f3a3 	rbit	r3, r3
 800398a:	4ba1      	ldr	r3, [pc, #644]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 800398c:	6819      	ldr	r1, [r3, #0]
 800398e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003992:	fa93 f3a3 	rbit	r3, r3
 8003996:	fab3 f383 	clz	r3, r3
 800399a:	f003 031f 	and.w	r3, r3, #31
 800399e:	2201      	movs	r2, #1
 80039a0:	fa02 f303 	lsl.w	r3, r2, r3
 80039a4:	420b      	tst	r3, r1
 80039a6:	d003      	beq.n	80039b0 <HAL_RCC_OscConfig+0x8c>
 80039a8:	6863      	ldr	r3, [r4, #4]
 80039aa:	2b00      	cmp	r3, #0
 80039ac:	f000 82c0 	beq.w	8003f30 <HAL_RCC_OscConfig+0x60c>
 80039b0:	6823      	ldr	r3, [r4, #0]
 80039b2:	f013 0f02 	tst.w	r3, #2
 80039b6:	f000 80c5 	beq.w	8003b44 <HAL_RCC_OscConfig+0x220>
 80039ba:	4b95      	ldr	r3, [pc, #596]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 80039bc:	685b      	ldr	r3, [r3, #4]
 80039be:	f013 0f0c 	tst.w	r3, #12
 80039c2:	f000 809c 	beq.w	8003afe <HAL_RCC_OscConfig+0x1da>
 80039c6:	4b92      	ldr	r3, [pc, #584]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 80039c8:	685b      	ldr	r3, [r3, #4]
 80039ca:	f003 030c 	and.w	r3, r3, #12
 80039ce:	2b08      	cmp	r3, #8
 80039d0:	f000 808f 	beq.w	8003af2 <HAL_RCC_OscConfig+0x1ce>
 80039d4:	6923      	ldr	r3, [r4, #16]
 80039d6:	2b00      	cmp	r3, #0
 80039d8:	f000 80f2 	beq.w	8003bc0 <HAL_RCC_OscConfig+0x29c>
 80039dc:	2201      	movs	r2, #1
 80039de:	fa92 f3a2 	rbit	r3, r2
 80039e2:	fab3 f383 	clz	r3, r3
 80039e6:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80039ea:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 80039ee:	009b      	lsls	r3, r3, #2
 80039f0:	601a      	str	r2, [r3, #0]
 80039f2:	f7ff fccd 	bl	8003390 <HAL_GetTick>
 80039f6:	4605      	mov	r5, r0
 80039f8:	2302      	movs	r3, #2
 80039fa:	fa93 f3a3 	rbit	r3, r3
 80039fe:	4b84      	ldr	r3, [pc, #528]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003a00:	6819      	ldr	r1, [r3, #0]
 8003a02:	2302      	movs	r3, #2
 8003a04:	fa93 f3a3 	rbit	r3, r3
 8003a08:	fab3 f383 	clz	r3, r3
 8003a0c:	f003 031f 	and.w	r3, r3, #31
 8003a10:	2201      	movs	r2, #1
 8003a12:	fa02 f303 	lsl.w	r3, r2, r3
 8003a16:	420b      	tst	r3, r1
 8003a18:	f040 80c3 	bne.w	8003ba2 <HAL_RCC_OscConfig+0x27e>
 8003a1c:	f7ff fcb8 	bl	8003390 <HAL_GetTick>
 8003a20:	1b40      	subs	r0, r0, r5
 8003a22:	2802      	cmp	r0, #2
 8003a24:	d9e8      	bls.n	80039f8 <HAL_RCC_OscConfig+0xd4>
 8003a26:	2003      	movs	r0, #3
 8003a28:	e28b      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003a2a:	4a79      	ldr	r2, [pc, #484]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003a2c:	6813      	ldr	r3, [r2, #0]
 8003a2e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003a32:	6013      	str	r3, [r2, #0]
 8003a34:	4a76      	ldr	r2, [pc, #472]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003a36:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8003a38:	f023 030f 	bic.w	r3, r3, #15
 8003a3c:	68a1      	ldr	r1, [r4, #8]
 8003a3e:	430b      	orrs	r3, r1
 8003a40:	62d3      	str	r3, [r2, #44]	; 0x2c
 8003a42:	6863      	ldr	r3, [r4, #4]
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	d036      	beq.n	8003ab6 <HAL_RCC_OscConfig+0x192>
 8003a48:	f7ff fca2 	bl	8003390 <HAL_GetTick>
 8003a4c:	4605      	mov	r5, r0
 8003a4e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003a52:	fa93 f3a3 	rbit	r3, r3
 8003a56:	4b6e      	ldr	r3, [pc, #440]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003a58:	6819      	ldr	r1, [r3, #0]
 8003a5a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003a5e:	fa93 f3a3 	rbit	r3, r3
 8003a62:	fab3 f383 	clz	r3, r3
 8003a66:	f003 031f 	and.w	r3, r3, #31
 8003a6a:	2201      	movs	r2, #1
 8003a6c:	fa02 f303 	lsl.w	r3, r2, r3
 8003a70:	420b      	tst	r3, r1
 8003a72:	d19d      	bne.n	80039b0 <HAL_RCC_OscConfig+0x8c>
 8003a74:	f7ff fc8c 	bl	8003390 <HAL_GetTick>
 8003a78:	1b40      	subs	r0, r0, r5
 8003a7a:	2864      	cmp	r0, #100	; 0x64
 8003a7c:	d9e7      	bls.n	8003a4e <HAL_RCC_OscConfig+0x12a>
 8003a7e:	2003      	movs	r0, #3
 8003a80:	e25f      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003a82:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003a86:	d009      	beq.n	8003a9c <HAL_RCC_OscConfig+0x178>
 8003a88:	4b61      	ldr	r3, [pc, #388]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003a8a:	681a      	ldr	r2, [r3, #0]
 8003a8c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8003a90:	601a      	str	r2, [r3, #0]
 8003a92:	681a      	ldr	r2, [r3, #0]
 8003a94:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003a98:	601a      	str	r2, [r3, #0]
 8003a9a:	e7cb      	b.n	8003a34 <HAL_RCC_OscConfig+0x110>
 8003a9c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8003aa0:	f5a3 333c 	sub.w	r3, r3, #192512	; 0x2f000
 8003aa4:	681a      	ldr	r2, [r3, #0]
 8003aa6:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003aaa:	601a      	str	r2, [r3, #0]
 8003aac:	681a      	ldr	r2, [r3, #0]
 8003aae:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8003ab2:	601a      	str	r2, [r3, #0]
 8003ab4:	e7be      	b.n	8003a34 <HAL_RCC_OscConfig+0x110>
 8003ab6:	f7ff fc6b 	bl	8003390 <HAL_GetTick>
 8003aba:	4605      	mov	r5, r0
 8003abc:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003ac0:	fa93 f3a3 	rbit	r3, r3
 8003ac4:	4b52      	ldr	r3, [pc, #328]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003ac6:	6819      	ldr	r1, [r3, #0]
 8003ac8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003acc:	fa93 f3a3 	rbit	r3, r3
 8003ad0:	fab3 f383 	clz	r3, r3
 8003ad4:	f003 031f 	and.w	r3, r3, #31
 8003ad8:	2201      	movs	r2, #1
 8003ada:	fa02 f303 	lsl.w	r3, r2, r3
 8003ade:	420b      	tst	r3, r1
 8003ae0:	f43f af66 	beq.w	80039b0 <HAL_RCC_OscConfig+0x8c>
 8003ae4:	f7ff fc54 	bl	8003390 <HAL_GetTick>
 8003ae8:	1b40      	subs	r0, r0, r5
 8003aea:	2864      	cmp	r0, #100	; 0x64
 8003aec:	d9e6      	bls.n	8003abc <HAL_RCC_OscConfig+0x198>
 8003aee:	2003      	movs	r0, #3
 8003af0:	e227      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003af2:	4b47      	ldr	r3, [pc, #284]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003af4:	685b      	ldr	r3, [r3, #4]
 8003af6:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8003afa:	f47f af6b 	bne.w	80039d4 <HAL_RCC_OscConfig+0xb0>
 8003afe:	2302      	movs	r3, #2
 8003b00:	fa93 f3a3 	rbit	r3, r3
 8003b04:	4b42      	ldr	r3, [pc, #264]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003b06:	6819      	ldr	r1, [r3, #0]
 8003b08:	2302      	movs	r3, #2
 8003b0a:	fa93 f3a3 	rbit	r3, r3
 8003b0e:	fab3 f383 	clz	r3, r3
 8003b12:	f003 031f 	and.w	r3, r3, #31
 8003b16:	2201      	movs	r2, #1
 8003b18:	fa02 f303 	lsl.w	r3, r2, r3
 8003b1c:	420b      	tst	r3, r1
 8003b1e:	d003      	beq.n	8003b28 <HAL_RCC_OscConfig+0x204>
 8003b20:	6923      	ldr	r3, [r4, #16]
 8003b22:	4293      	cmp	r3, r2
 8003b24:	f040 8206 	bne.w	8003f34 <HAL_RCC_OscConfig+0x610>
 8003b28:	4839      	ldr	r0, [pc, #228]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003b2a:	6803      	ldr	r3, [r0, #0]
 8003b2c:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8003b30:	6961      	ldr	r1, [r4, #20]
 8003b32:	22f8      	movs	r2, #248	; 0xf8
 8003b34:	fa92 f2a2 	rbit	r2, r2
 8003b38:	fab2 f282 	clz	r2, r2
 8003b3c:	fa01 f202 	lsl.w	r2, r1, r2
 8003b40:	4313      	orrs	r3, r2
 8003b42:	6003      	str	r3, [r0, #0]
 8003b44:	6823      	ldr	r3, [r4, #0]
 8003b46:	f013 0f08 	tst.w	r3, #8
 8003b4a:	f000 808d 	beq.w	8003c68 <HAL_RCC_OscConfig+0x344>
 8003b4e:	69a3      	ldr	r3, [r4, #24]
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d061      	beq.n	8003c18 <HAL_RCC_OscConfig+0x2f4>
 8003b54:	2101      	movs	r1, #1
 8003b56:	fa91 f2a1 	rbit	r2, r1
 8003b5a:	fab2 f282 	clz	r2, r2
 8003b5e:	4b2d      	ldr	r3, [pc, #180]	; (8003c14 <HAL_RCC_OscConfig+0x2f0>)
 8003b60:	4413      	add	r3, r2
 8003b62:	009b      	lsls	r3, r3, #2
 8003b64:	6019      	str	r1, [r3, #0]
 8003b66:	f7ff fc13 	bl	8003390 <HAL_GetTick>
 8003b6a:	4605      	mov	r5, r0
 8003b6c:	2302      	movs	r3, #2
 8003b6e:	fa93 f2a3 	rbit	r2, r3
 8003b72:	fa93 f2a3 	rbit	r2, r3
 8003b76:	fa93 f2a3 	rbit	r2, r3
 8003b7a:	4a25      	ldr	r2, [pc, #148]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003b7c:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8003b7e:	fa93 f3a3 	rbit	r3, r3
 8003b82:	fab3 f383 	clz	r3, r3
 8003b86:	f003 031f 	and.w	r3, r3, #31
 8003b8a:	2201      	movs	r2, #1
 8003b8c:	fa02 f303 	lsl.w	r3, r2, r3
 8003b90:	420b      	tst	r3, r1
 8003b92:	d169      	bne.n	8003c68 <HAL_RCC_OscConfig+0x344>
 8003b94:	f7ff fbfc 	bl	8003390 <HAL_GetTick>
 8003b98:	1b40      	subs	r0, r0, r5
 8003b9a:	2802      	cmp	r0, #2
 8003b9c:	d9e6      	bls.n	8003b6c <HAL_RCC_OscConfig+0x248>
 8003b9e:	2003      	movs	r0, #3
 8003ba0:	e1cf      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003ba2:	481b      	ldr	r0, [pc, #108]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003ba4:	6803      	ldr	r3, [r0, #0]
 8003ba6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8003baa:	6961      	ldr	r1, [r4, #20]
 8003bac:	22f8      	movs	r2, #248	; 0xf8
 8003bae:	fa92 f2a2 	rbit	r2, r2
 8003bb2:	fab2 f282 	clz	r2, r2
 8003bb6:	fa01 f202 	lsl.w	r2, r1, r2
 8003bba:	4313      	orrs	r3, r2
 8003bbc:	6003      	str	r3, [r0, #0]
 8003bbe:	e7c1      	b.n	8003b44 <HAL_RCC_OscConfig+0x220>
 8003bc0:	2301      	movs	r3, #1
 8003bc2:	fa93 f3a3 	rbit	r3, r3
 8003bc6:	fab3 f383 	clz	r3, r3
 8003bca:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8003bce:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8003bd2:	009b      	lsls	r3, r3, #2
 8003bd4:	2200      	movs	r2, #0
 8003bd6:	601a      	str	r2, [r3, #0]
 8003bd8:	f7ff fbda 	bl	8003390 <HAL_GetTick>
 8003bdc:	4605      	mov	r5, r0
 8003bde:	2302      	movs	r3, #2
 8003be0:	fa93 f3a3 	rbit	r3, r3
 8003be4:	4b0a      	ldr	r3, [pc, #40]	; (8003c10 <HAL_RCC_OscConfig+0x2ec>)
 8003be6:	6819      	ldr	r1, [r3, #0]
 8003be8:	2302      	movs	r3, #2
 8003bea:	fa93 f3a3 	rbit	r3, r3
 8003bee:	fab3 f383 	clz	r3, r3
 8003bf2:	f003 031f 	and.w	r3, r3, #31
 8003bf6:	2201      	movs	r2, #1
 8003bf8:	fa02 f303 	lsl.w	r3, r2, r3
 8003bfc:	420b      	tst	r3, r1
 8003bfe:	d0a1      	beq.n	8003b44 <HAL_RCC_OscConfig+0x220>
 8003c00:	f7ff fbc6 	bl	8003390 <HAL_GetTick>
 8003c04:	1b40      	subs	r0, r0, r5
 8003c06:	2802      	cmp	r0, #2
 8003c08:	d9e9      	bls.n	8003bde <HAL_RCC_OscConfig+0x2ba>
 8003c0a:	2003      	movs	r0, #3
 8003c0c:	e199      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003c0e:	bf00      	nop
 8003c10:	40021000 	.word	0x40021000
 8003c14:	10908120 	.word	0x10908120
 8003c18:	2201      	movs	r2, #1
 8003c1a:	fa92 f2a2 	rbit	r2, r2
 8003c1e:	fab2 f282 	clz	r2, r2
 8003c22:	4bb7      	ldr	r3, [pc, #732]	; (8003f00 <HAL_RCC_OscConfig+0x5dc>)
 8003c24:	4413      	add	r3, r2
 8003c26:	009b      	lsls	r3, r3, #2
 8003c28:	2200      	movs	r2, #0
 8003c2a:	601a      	str	r2, [r3, #0]
 8003c2c:	f7ff fbb0 	bl	8003390 <HAL_GetTick>
 8003c30:	4605      	mov	r5, r0
 8003c32:	2302      	movs	r3, #2
 8003c34:	fa93 f2a3 	rbit	r2, r3
 8003c38:	fa93 f2a3 	rbit	r2, r3
 8003c3c:	fa93 f2a3 	rbit	r2, r3
 8003c40:	4ab0      	ldr	r2, [pc, #704]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003c42:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8003c44:	fa93 f3a3 	rbit	r3, r3
 8003c48:	fab3 f383 	clz	r3, r3
 8003c4c:	f003 031f 	and.w	r3, r3, #31
 8003c50:	2201      	movs	r2, #1
 8003c52:	fa02 f303 	lsl.w	r3, r2, r3
 8003c56:	420b      	tst	r3, r1
 8003c58:	d006      	beq.n	8003c68 <HAL_RCC_OscConfig+0x344>
 8003c5a:	f7ff fb99 	bl	8003390 <HAL_GetTick>
 8003c5e:	1b40      	subs	r0, r0, r5
 8003c60:	2802      	cmp	r0, #2
 8003c62:	d9e6      	bls.n	8003c32 <HAL_RCC_OscConfig+0x30e>
 8003c64:	2003      	movs	r0, #3
 8003c66:	e16c      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003c68:	6823      	ldr	r3, [r4, #0]
 8003c6a:	f013 0f04 	tst.w	r3, #4
 8003c6e:	f000 80a9 	beq.w	8003dc4 <HAL_RCC_OscConfig+0x4a0>
 8003c72:	4ba4      	ldr	r3, [pc, #656]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003c74:	69db      	ldr	r3, [r3, #28]
 8003c76:	f013 5f80 	tst.w	r3, #268435456	; 0x10000000
 8003c7a:	d120      	bne.n	8003cbe <HAL_RCC_OscConfig+0x39a>
 8003c7c:	4ba1      	ldr	r3, [pc, #644]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003c7e:	69da      	ldr	r2, [r3, #28]
 8003c80:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003c84:	61da      	str	r2, [r3, #28]
 8003c86:	69db      	ldr	r3, [r3, #28]
 8003c88:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003c8c:	9301      	str	r3, [sp, #4]
 8003c8e:	9b01      	ldr	r3, [sp, #4]
 8003c90:	2501      	movs	r5, #1
 8003c92:	4b9d      	ldr	r3, [pc, #628]	; (8003f08 <HAL_RCC_OscConfig+0x5e4>)
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	f413 7f80 	tst.w	r3, #256	; 0x100
 8003c9a:	d012      	beq.n	8003cc2 <HAL_RCC_OscConfig+0x39e>
 8003c9c:	68e3      	ldr	r3, [r4, #12]
 8003c9e:	2b01      	cmp	r3, #1
 8003ca0:	d023      	beq.n	8003cea <HAL_RCC_OscConfig+0x3c6>
 8003ca2:	bb73      	cbnz	r3, 8003d02 <HAL_RCC_OscConfig+0x3de>
 8003ca4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8003ca8:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8003cac:	6a1a      	ldr	r2, [r3, #32]
 8003cae:	f022 0201 	bic.w	r2, r2, #1
 8003cb2:	621a      	str	r2, [r3, #32]
 8003cb4:	6a1a      	ldr	r2, [r3, #32]
 8003cb6:	f022 0204 	bic.w	r2, r2, #4
 8003cba:	621a      	str	r2, [r3, #32]
 8003cbc:	e01a      	b.n	8003cf4 <HAL_RCC_OscConfig+0x3d0>
 8003cbe:	2500      	movs	r5, #0
 8003cc0:	e7e7      	b.n	8003c92 <HAL_RCC_OscConfig+0x36e>
 8003cc2:	4a91      	ldr	r2, [pc, #580]	; (8003f08 <HAL_RCC_OscConfig+0x5e4>)
 8003cc4:	6813      	ldr	r3, [r2, #0]
 8003cc6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003cca:	6013      	str	r3, [r2, #0]
 8003ccc:	f7ff fb60 	bl	8003390 <HAL_GetTick>
 8003cd0:	4606      	mov	r6, r0
 8003cd2:	4b8d      	ldr	r3, [pc, #564]	; (8003f08 <HAL_RCC_OscConfig+0x5e4>)
 8003cd4:	681b      	ldr	r3, [r3, #0]
 8003cd6:	f413 7f80 	tst.w	r3, #256	; 0x100
 8003cda:	d1df      	bne.n	8003c9c <HAL_RCC_OscConfig+0x378>
 8003cdc:	f7ff fb58 	bl	8003390 <HAL_GetTick>
 8003ce0:	1b80      	subs	r0, r0, r6
 8003ce2:	2864      	cmp	r0, #100	; 0x64
 8003ce4:	d9f5      	bls.n	8003cd2 <HAL_RCC_OscConfig+0x3ae>
 8003ce6:	2003      	movs	r0, #3
 8003ce8:	e12b      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003cea:	4a86      	ldr	r2, [pc, #536]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003cec:	6a13      	ldr	r3, [r2, #32]
 8003cee:	f043 0301 	orr.w	r3, r3, #1
 8003cf2:	6213      	str	r3, [r2, #32]
 8003cf4:	68e3      	ldr	r3, [r4, #12]
 8003cf6:	2b00      	cmp	r3, #0
 8003cf8:	d03c      	beq.n	8003d74 <HAL_RCC_OscConfig+0x450>
 8003cfa:	f7ff fb49 	bl	8003390 <HAL_GetTick>
 8003cfe:	4606      	mov	r6, r0
 8003d00:	e02b      	b.n	8003d5a <HAL_RCC_OscConfig+0x436>
 8003d02:	2b05      	cmp	r3, #5
 8003d04:	d009      	beq.n	8003d1a <HAL_RCC_OscConfig+0x3f6>
 8003d06:	4b7f      	ldr	r3, [pc, #508]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003d08:	6a1a      	ldr	r2, [r3, #32]
 8003d0a:	f022 0201 	bic.w	r2, r2, #1
 8003d0e:	621a      	str	r2, [r3, #32]
 8003d10:	6a1a      	ldr	r2, [r3, #32]
 8003d12:	f022 0204 	bic.w	r2, r2, #4
 8003d16:	621a      	str	r2, [r3, #32]
 8003d18:	e7ec      	b.n	8003cf4 <HAL_RCC_OscConfig+0x3d0>
 8003d1a:	4b7a      	ldr	r3, [pc, #488]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003d1c:	6a1a      	ldr	r2, [r3, #32]
 8003d1e:	f042 0204 	orr.w	r2, r2, #4
 8003d22:	621a      	str	r2, [r3, #32]
 8003d24:	6a1a      	ldr	r2, [r3, #32]
 8003d26:	f042 0201 	orr.w	r2, r2, #1
 8003d2a:	621a      	str	r2, [r3, #32]
 8003d2c:	e7e2      	b.n	8003cf4 <HAL_RCC_OscConfig+0x3d0>
 8003d2e:	4b75      	ldr	r3, [pc, #468]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003d30:	6a19      	ldr	r1, [r3, #32]
 8003d32:	2302      	movs	r3, #2
 8003d34:	fa93 f3a3 	rbit	r3, r3
 8003d38:	fab3 f383 	clz	r3, r3
 8003d3c:	f003 031f 	and.w	r3, r3, #31
 8003d40:	2201      	movs	r2, #1
 8003d42:	fa02 f303 	lsl.w	r3, r2, r3
 8003d46:	4219      	tst	r1, r3
 8003d48:	d13b      	bne.n	8003dc2 <HAL_RCC_OscConfig+0x49e>
 8003d4a:	f7ff fb21 	bl	8003390 <HAL_GetTick>
 8003d4e:	1b80      	subs	r0, r0, r6
 8003d50:	f241 3388 	movw	r3, #5000	; 0x1388
 8003d54:	4298      	cmp	r0, r3
 8003d56:	f200 80ef 	bhi.w	8003f38 <HAL_RCC_OscConfig+0x614>
 8003d5a:	2302      	movs	r3, #2
 8003d5c:	fa93 f2a3 	rbit	r2, r3
 8003d60:	fa93 f3a3 	rbit	r3, r3
 8003d64:	2b00      	cmp	r3, #0
 8003d66:	d1e2      	bne.n	8003d2e <HAL_RCC_OscConfig+0x40a>
 8003d68:	2302      	movs	r3, #2
 8003d6a:	fa93 f3a3 	rbit	r3, r3
 8003d6e:	4b65      	ldr	r3, [pc, #404]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003d70:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003d72:	e7de      	b.n	8003d32 <HAL_RCC_OscConfig+0x40e>
 8003d74:	f7ff fb0c 	bl	8003390 <HAL_GetTick>
 8003d78:	4606      	mov	r6, r0
 8003d7a:	e015      	b.n	8003da8 <HAL_RCC_OscConfig+0x484>
 8003d7c:	4b61      	ldr	r3, [pc, #388]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003d7e:	6a19      	ldr	r1, [r3, #32]
 8003d80:	2302      	movs	r3, #2
 8003d82:	fa93 f3a3 	rbit	r3, r3
 8003d86:	fab3 f383 	clz	r3, r3
 8003d8a:	f003 031f 	and.w	r3, r3, #31
 8003d8e:	2201      	movs	r2, #1
 8003d90:	fa02 f303 	lsl.w	r3, r2, r3
 8003d94:	4219      	tst	r1, r3
 8003d96:	d014      	beq.n	8003dc2 <HAL_RCC_OscConfig+0x49e>
 8003d98:	f7ff fafa 	bl	8003390 <HAL_GetTick>
 8003d9c:	1b80      	subs	r0, r0, r6
 8003d9e:	f241 3388 	movw	r3, #5000	; 0x1388
 8003da2:	4298      	cmp	r0, r3
 8003da4:	f200 80ca 	bhi.w	8003f3c <HAL_RCC_OscConfig+0x618>
 8003da8:	2302      	movs	r3, #2
 8003daa:	fa93 f2a3 	rbit	r2, r3
 8003dae:	fa93 f3a3 	rbit	r3, r3
 8003db2:	2b00      	cmp	r3, #0
 8003db4:	d1e2      	bne.n	8003d7c <HAL_RCC_OscConfig+0x458>
 8003db6:	2302      	movs	r3, #2
 8003db8:	fa93 f3a3 	rbit	r3, r3
 8003dbc:	4b51      	ldr	r3, [pc, #324]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003dbe:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003dc0:	e7de      	b.n	8003d80 <HAL_RCC_OscConfig+0x45c>
 8003dc2:	bbb5      	cbnz	r5, 8003e32 <HAL_RCC_OscConfig+0x50e>
 8003dc4:	69e3      	ldr	r3, [r4, #28]
 8003dc6:	2b00      	cmp	r3, #0
 8003dc8:	f000 80ba 	beq.w	8003f40 <HAL_RCC_OscConfig+0x61c>
 8003dcc:	4a4d      	ldr	r2, [pc, #308]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003dce:	6852      	ldr	r2, [r2, #4]
 8003dd0:	f002 020c 	and.w	r2, r2, #12
 8003dd4:	2a08      	cmp	r2, #8
 8003dd6:	f000 8099 	beq.w	8003f0c <HAL_RCC_OscConfig+0x5e8>
 8003dda:	2b02      	cmp	r3, #2
 8003ddc:	d02f      	beq.n	8003e3e <HAL_RCC_OscConfig+0x51a>
 8003dde:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003de2:	fa93 f3a3 	rbit	r3, r3
 8003de6:	fab3 f383 	clz	r3, r3
 8003dea:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8003dee:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8003df2:	009b      	lsls	r3, r3, #2
 8003df4:	2200      	movs	r2, #0
 8003df6:	601a      	str	r2, [r3, #0]
 8003df8:	f7ff faca 	bl	8003390 <HAL_GetTick>
 8003dfc:	4604      	mov	r4, r0
 8003dfe:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003e02:	fa93 f3a3 	rbit	r3, r3
 8003e06:	4b3f      	ldr	r3, [pc, #252]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003e08:	6819      	ldr	r1, [r3, #0]
 8003e0a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003e0e:	fa93 f3a3 	rbit	r3, r3
 8003e12:	fab3 f383 	clz	r3, r3
 8003e16:	f003 031f 	and.w	r3, r3, #31
 8003e1a:	2201      	movs	r2, #1
 8003e1c:	fa02 f303 	lsl.w	r3, r2, r3
 8003e20:	4219      	tst	r1, r3
 8003e22:	d06b      	beq.n	8003efc <HAL_RCC_OscConfig+0x5d8>
 8003e24:	f7ff fab4 	bl	8003390 <HAL_GetTick>
 8003e28:	1b00      	subs	r0, r0, r4
 8003e2a:	2802      	cmp	r0, #2
 8003e2c:	d9e7      	bls.n	8003dfe <HAL_RCC_OscConfig+0x4da>
 8003e2e:	2003      	movs	r0, #3
 8003e30:	e087      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003e32:	4a34      	ldr	r2, [pc, #208]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003e34:	69d3      	ldr	r3, [r2, #28]
 8003e36:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003e3a:	61d3      	str	r3, [r2, #28]
 8003e3c:	e7c2      	b.n	8003dc4 <HAL_RCC_OscConfig+0x4a0>
 8003e3e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003e42:	fa93 f3a3 	rbit	r3, r3
 8003e46:	fab3 f383 	clz	r3, r3
 8003e4a:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8003e4e:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8003e52:	009b      	lsls	r3, r3, #2
 8003e54:	2200      	movs	r2, #0
 8003e56:	601a      	str	r2, [r3, #0]
 8003e58:	f7ff fa9a 	bl	8003390 <HAL_GetTick>
 8003e5c:	4605      	mov	r5, r0
 8003e5e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003e62:	fa93 f3a3 	rbit	r3, r3
 8003e66:	4b27      	ldr	r3, [pc, #156]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003e68:	6819      	ldr	r1, [r3, #0]
 8003e6a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003e6e:	fa93 f3a3 	rbit	r3, r3
 8003e72:	fab3 f383 	clz	r3, r3
 8003e76:	f003 031f 	and.w	r3, r3, #31
 8003e7a:	2201      	movs	r2, #1
 8003e7c:	fa02 f303 	lsl.w	r3, r2, r3
 8003e80:	4219      	tst	r1, r3
 8003e82:	d006      	beq.n	8003e92 <HAL_RCC_OscConfig+0x56e>
 8003e84:	f7ff fa84 	bl	8003390 <HAL_GetTick>
 8003e88:	1b40      	subs	r0, r0, r5
 8003e8a:	2802      	cmp	r0, #2
 8003e8c:	d9e7      	bls.n	8003e5e <HAL_RCC_OscConfig+0x53a>
 8003e8e:	2003      	movs	r0, #3
 8003e90:	e057      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003e92:	491c      	ldr	r1, [pc, #112]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003e94:	684b      	ldr	r3, [r1, #4]
 8003e96:	f423 1374 	bic.w	r3, r3, #3997696	; 0x3d0000
 8003e9a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003e9c:	6a20      	ldr	r0, [r4, #32]
 8003e9e:	4302      	orrs	r2, r0
 8003ea0:	4313      	orrs	r3, r2
 8003ea2:	604b      	str	r3, [r1, #4]
 8003ea4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003ea8:	fa93 f3a3 	rbit	r3, r3
 8003eac:	fab3 f383 	clz	r3, r3
 8003eb0:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8003eb4:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8003eb8:	009b      	lsls	r3, r3, #2
 8003eba:	2201      	movs	r2, #1
 8003ebc:	601a      	str	r2, [r3, #0]
 8003ebe:	f7ff fa67 	bl	8003390 <HAL_GetTick>
 8003ec2:	4604      	mov	r4, r0
 8003ec4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003ec8:	fa93 f3a3 	rbit	r3, r3
 8003ecc:	4b0d      	ldr	r3, [pc, #52]	; (8003f04 <HAL_RCC_OscConfig+0x5e0>)
 8003ece:	6819      	ldr	r1, [r3, #0]
 8003ed0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003ed4:	fa93 f3a3 	rbit	r3, r3
 8003ed8:	fab3 f383 	clz	r3, r3
 8003edc:	f003 031f 	and.w	r3, r3, #31
 8003ee0:	2201      	movs	r2, #1
 8003ee2:	fa02 f303 	lsl.w	r3, r2, r3
 8003ee6:	4219      	tst	r1, r3
 8003ee8:	d106      	bne.n	8003ef8 <HAL_RCC_OscConfig+0x5d4>
 8003eea:	f7ff fa51 	bl	8003390 <HAL_GetTick>
 8003eee:	1b00      	subs	r0, r0, r4
 8003ef0:	2802      	cmp	r0, #2
 8003ef2:	d9e7      	bls.n	8003ec4 <HAL_RCC_OscConfig+0x5a0>
 8003ef4:	2003      	movs	r0, #3
 8003ef6:	e024      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003ef8:	2000      	movs	r0, #0
 8003efa:	e022      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003efc:	2000      	movs	r0, #0
 8003efe:	e020      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003f00:	10908120 	.word	0x10908120
 8003f04:	40021000 	.word	0x40021000
 8003f08:	40007000 	.word	0x40007000
 8003f0c:	2b01      	cmp	r3, #1
 8003f0e:	d01a      	beq.n	8003f46 <HAL_RCC_OscConfig+0x622>
 8003f10:	4b10      	ldr	r3, [pc, #64]	; (8003f54 <HAL_RCC_OscConfig+0x630>)
 8003f12:	685b      	ldr	r3, [r3, #4]
 8003f14:	f403 3180 	and.w	r1, r3, #65536	; 0x10000
 8003f18:	6a22      	ldr	r2, [r4, #32]
 8003f1a:	4291      	cmp	r1, r2
 8003f1c:	d115      	bne.n	8003f4a <HAL_RCC_OscConfig+0x626>
 8003f1e:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 8003f22:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003f24:	4293      	cmp	r3, r2
 8003f26:	d112      	bne.n	8003f4e <HAL_RCC_OscConfig+0x62a>
 8003f28:	2000      	movs	r0, #0
 8003f2a:	e00a      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003f2c:	2001      	movs	r0, #1
 8003f2e:	4770      	bx	lr
 8003f30:	2001      	movs	r0, #1
 8003f32:	e006      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003f34:	2001      	movs	r0, #1
 8003f36:	e004      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003f38:	2003      	movs	r0, #3
 8003f3a:	e002      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003f3c:	2003      	movs	r0, #3
 8003f3e:	e000      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003f40:	2000      	movs	r0, #0
 8003f42:	b002      	add	sp, #8
 8003f44:	bd70      	pop	{r4, r5, r6, pc}
 8003f46:	2001      	movs	r0, #1
 8003f48:	e7fb      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003f4a:	2001      	movs	r0, #1
 8003f4c:	e7f9      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003f4e:	2001      	movs	r0, #1
 8003f50:	e7f7      	b.n	8003f42 <HAL_RCC_OscConfig+0x61e>
 8003f52:	bf00      	nop
 8003f54:	40021000 	.word	0x40021000

08003f58 <HAL_RCC_GetSysClockFreq>:
 8003f58:	4b11      	ldr	r3, [pc, #68]	; (8003fa0 <HAL_RCC_GetSysClockFreq+0x48>)
 8003f5a:	685a      	ldr	r2, [r3, #4]
 8003f5c:	f002 030c 	and.w	r3, r2, #12
 8003f60:	2b04      	cmp	r3, #4
 8003f62:	d018      	beq.n	8003f96 <HAL_RCC_GetSysClockFreq+0x3e>
 8003f64:	2b08      	cmp	r3, #8
 8003f66:	d118      	bne.n	8003f9a <HAL_RCC_GetSysClockFreq+0x42>
 8003f68:	f3c2 4383 	ubfx	r3, r2, #18, #4
 8003f6c:	490d      	ldr	r1, [pc, #52]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x4c>)
 8003f6e:	5cc8      	ldrb	r0, [r1, r3]
 8003f70:	4b0b      	ldr	r3, [pc, #44]	; (8003fa0 <HAL_RCC_GetSysClockFreq+0x48>)
 8003f72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f74:	f003 030f 	and.w	r3, r3, #15
 8003f78:	490b      	ldr	r1, [pc, #44]	; (8003fa8 <HAL_RCC_GetSysClockFreq+0x50>)
 8003f7a:	5cc9      	ldrb	r1, [r1, r3]
 8003f7c:	f412 3f80 	tst.w	r2, #65536	; 0x10000
 8003f80:	d005      	beq.n	8003f8e <HAL_RCC_GetSysClockFreq+0x36>
 8003f82:	4b0a      	ldr	r3, [pc, #40]	; (8003fac <HAL_RCC_GetSysClockFreq+0x54>)
 8003f84:	fbb3 f3f1 	udiv	r3, r3, r1
 8003f88:	fb03 f000 	mul.w	r0, r3, r0
 8003f8c:	4770      	bx	lr
 8003f8e:	4b08      	ldr	r3, [pc, #32]	; (8003fb0 <HAL_RCC_GetSysClockFreq+0x58>)
 8003f90:	fb03 f000 	mul.w	r0, r3, r0
 8003f94:	4770      	bx	lr
 8003f96:	4805      	ldr	r0, [pc, #20]	; (8003fac <HAL_RCC_GetSysClockFreq+0x54>)
 8003f98:	4770      	bx	lr
 8003f9a:	4806      	ldr	r0, [pc, #24]	; (8003fb4 <HAL_RCC_GetSysClockFreq+0x5c>)
 8003f9c:	4770      	bx	lr
 8003f9e:	bf00      	nop
 8003fa0:	40021000 	.word	0x40021000
 8003fa4:	08006034 	.word	0x08006034
 8003fa8:	08006044 	.word	0x08006044
 8003fac:	00f42400 	.word	0x00f42400
 8003fb0:	003d0900 	.word	0x003d0900
 8003fb4:	007a1200 	.word	0x007a1200

08003fb8 <HAL_RCC_ClockConfig>:
 8003fb8:	2800      	cmp	r0, #0
 8003fba:	f000 80be 	beq.w	800413a <HAL_RCC_ClockConfig+0x182>
 8003fbe:	b570      	push	{r4, r5, r6, lr}
 8003fc0:	460d      	mov	r5, r1
 8003fc2:	4604      	mov	r4, r0
 8003fc4:	4b61      	ldr	r3, [pc, #388]	; (800414c <HAL_RCC_ClockConfig+0x194>)
 8003fc6:	681b      	ldr	r3, [r3, #0]
 8003fc8:	f003 0307 	and.w	r3, r3, #7
 8003fcc:	428b      	cmp	r3, r1
 8003fce:	d20b      	bcs.n	8003fe8 <HAL_RCC_ClockConfig+0x30>
 8003fd0:	4a5e      	ldr	r2, [pc, #376]	; (800414c <HAL_RCC_ClockConfig+0x194>)
 8003fd2:	6813      	ldr	r3, [r2, #0]
 8003fd4:	f023 0307 	bic.w	r3, r3, #7
 8003fd8:	430b      	orrs	r3, r1
 8003fda:	6013      	str	r3, [r2, #0]
 8003fdc:	6813      	ldr	r3, [r2, #0]
 8003fde:	f003 0307 	and.w	r3, r3, #7
 8003fe2:	428b      	cmp	r3, r1
 8003fe4:	f040 80ab 	bne.w	800413e <HAL_RCC_ClockConfig+0x186>
 8003fe8:	6823      	ldr	r3, [r4, #0]
 8003fea:	f013 0f02 	tst.w	r3, #2
 8003fee:	d006      	beq.n	8003ffe <HAL_RCC_ClockConfig+0x46>
 8003ff0:	4a57      	ldr	r2, [pc, #348]	; (8004150 <HAL_RCC_ClockConfig+0x198>)
 8003ff2:	6853      	ldr	r3, [r2, #4]
 8003ff4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003ff8:	68a1      	ldr	r1, [r4, #8]
 8003ffa:	430b      	orrs	r3, r1
 8003ffc:	6053      	str	r3, [r2, #4]
 8003ffe:	6823      	ldr	r3, [r4, #0]
 8004000:	f013 0f01 	tst.w	r3, #1
 8004004:	d05a      	beq.n	80040bc <HAL_RCC_ClockConfig+0x104>
 8004006:	6863      	ldr	r3, [r4, #4]
 8004008:	2b01      	cmp	r3, #1
 800400a:	d02d      	beq.n	8004068 <HAL_RCC_ClockConfig+0xb0>
 800400c:	2b02      	cmp	r3, #2
 800400e:	d040      	beq.n	8004092 <HAL_RCC_ClockConfig+0xda>
 8004010:	2202      	movs	r2, #2
 8004012:	fa92 f2a2 	rbit	r2, r2
 8004016:	4a4e      	ldr	r2, [pc, #312]	; (8004150 <HAL_RCC_ClockConfig+0x198>)
 8004018:	6810      	ldr	r0, [r2, #0]
 800401a:	2202      	movs	r2, #2
 800401c:	fa92 f2a2 	rbit	r2, r2
 8004020:	fab2 f282 	clz	r2, r2
 8004024:	f002 021f 	and.w	r2, r2, #31
 8004028:	2101      	movs	r1, #1
 800402a:	fa01 f202 	lsl.w	r2, r1, r2
 800402e:	4210      	tst	r0, r2
 8004030:	f000 8087 	beq.w	8004142 <HAL_RCC_ClockConfig+0x18a>
 8004034:	4946      	ldr	r1, [pc, #280]	; (8004150 <HAL_RCC_ClockConfig+0x198>)
 8004036:	684a      	ldr	r2, [r1, #4]
 8004038:	f022 0203 	bic.w	r2, r2, #3
 800403c:	4313      	orrs	r3, r2
 800403e:	604b      	str	r3, [r1, #4]
 8004040:	f7ff f9a6 	bl	8003390 <HAL_GetTick>
 8004044:	4606      	mov	r6, r0
 8004046:	4b42      	ldr	r3, [pc, #264]	; (8004150 <HAL_RCC_ClockConfig+0x198>)
 8004048:	685b      	ldr	r3, [r3, #4]
 800404a:	f003 030c 	and.w	r3, r3, #12
 800404e:	6862      	ldr	r2, [r4, #4]
 8004050:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8004054:	d032      	beq.n	80040bc <HAL_RCC_ClockConfig+0x104>
 8004056:	f7ff f99b 	bl	8003390 <HAL_GetTick>
 800405a:	1b80      	subs	r0, r0, r6
 800405c:	f241 3388 	movw	r3, #5000	; 0x1388
 8004060:	4298      	cmp	r0, r3
 8004062:	d9f0      	bls.n	8004046 <HAL_RCC_ClockConfig+0x8e>
 8004064:	2003      	movs	r0, #3
 8004066:	e067      	b.n	8004138 <HAL_RCC_ClockConfig+0x180>
 8004068:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800406c:	fa92 f2a2 	rbit	r2, r2
 8004070:	4a37      	ldr	r2, [pc, #220]	; (8004150 <HAL_RCC_ClockConfig+0x198>)
 8004072:	6810      	ldr	r0, [r2, #0]
 8004074:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8004078:	fa92 f2a2 	rbit	r2, r2
 800407c:	fab2 f282 	clz	r2, r2
 8004080:	f002 021f 	and.w	r2, r2, #31
 8004084:	2101      	movs	r1, #1
 8004086:	fa01 f202 	lsl.w	r2, r1, r2
 800408a:	4202      	tst	r2, r0
 800408c:	d1d2      	bne.n	8004034 <HAL_RCC_ClockConfig+0x7c>
 800408e:	2001      	movs	r0, #1
 8004090:	e052      	b.n	8004138 <HAL_RCC_ClockConfig+0x180>
 8004092:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8004096:	fa92 f2a2 	rbit	r2, r2
 800409a:	4a2d      	ldr	r2, [pc, #180]	; (8004150 <HAL_RCC_ClockConfig+0x198>)
 800409c:	6810      	ldr	r0, [r2, #0]
 800409e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80040a2:	fa92 f2a2 	rbit	r2, r2
 80040a6:	fab2 f282 	clz	r2, r2
 80040aa:	f002 021f 	and.w	r2, r2, #31
 80040ae:	2101      	movs	r1, #1
 80040b0:	fa01 f202 	lsl.w	r2, r1, r2
 80040b4:	4210      	tst	r0, r2
 80040b6:	d1bd      	bne.n	8004034 <HAL_RCC_ClockConfig+0x7c>
 80040b8:	2001      	movs	r0, #1
 80040ba:	e03d      	b.n	8004138 <HAL_RCC_ClockConfig+0x180>
 80040bc:	4b23      	ldr	r3, [pc, #140]	; (800414c <HAL_RCC_ClockConfig+0x194>)
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	f003 0307 	and.w	r3, r3, #7
 80040c4:	42ab      	cmp	r3, r5
 80040c6:	d90a      	bls.n	80040de <HAL_RCC_ClockConfig+0x126>
 80040c8:	4a20      	ldr	r2, [pc, #128]	; (800414c <HAL_RCC_ClockConfig+0x194>)
 80040ca:	6813      	ldr	r3, [r2, #0]
 80040cc:	f023 0307 	bic.w	r3, r3, #7
 80040d0:	432b      	orrs	r3, r5
 80040d2:	6013      	str	r3, [r2, #0]
 80040d4:	6813      	ldr	r3, [r2, #0]
 80040d6:	f003 0307 	and.w	r3, r3, #7
 80040da:	42ab      	cmp	r3, r5
 80040dc:	d133      	bne.n	8004146 <HAL_RCC_ClockConfig+0x18e>
 80040de:	6823      	ldr	r3, [r4, #0]
 80040e0:	f013 0f04 	tst.w	r3, #4
 80040e4:	d006      	beq.n	80040f4 <HAL_RCC_ClockConfig+0x13c>
 80040e6:	4a1a      	ldr	r2, [pc, #104]	; (8004150 <HAL_RCC_ClockConfig+0x198>)
 80040e8:	6853      	ldr	r3, [r2, #4]
 80040ea:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80040ee:	68e1      	ldr	r1, [r4, #12]
 80040f0:	430b      	orrs	r3, r1
 80040f2:	6053      	str	r3, [r2, #4]
 80040f4:	6823      	ldr	r3, [r4, #0]
 80040f6:	f013 0f08 	tst.w	r3, #8
 80040fa:	d007      	beq.n	800410c <HAL_RCC_ClockConfig+0x154>
 80040fc:	4a14      	ldr	r2, [pc, #80]	; (8004150 <HAL_RCC_ClockConfig+0x198>)
 80040fe:	6853      	ldr	r3, [r2, #4]
 8004100:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8004104:	6921      	ldr	r1, [r4, #16]
 8004106:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800410a:	6053      	str	r3, [r2, #4]
 800410c:	f7ff ff24 	bl	8003f58 <HAL_RCC_GetSysClockFreq>
 8004110:	4b0f      	ldr	r3, [pc, #60]	; (8004150 <HAL_RCC_ClockConfig+0x198>)
 8004112:	685b      	ldr	r3, [r3, #4]
 8004114:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004118:	22f0      	movs	r2, #240	; 0xf0
 800411a:	fa92 f2a2 	rbit	r2, r2
 800411e:	fab2 f282 	clz	r2, r2
 8004122:	40d3      	lsrs	r3, r2
 8004124:	4a0b      	ldr	r2, [pc, #44]	; (8004154 <HAL_RCC_ClockConfig+0x19c>)
 8004126:	5cd3      	ldrb	r3, [r2, r3]
 8004128:	40d8      	lsrs	r0, r3
 800412a:	4b0b      	ldr	r3, [pc, #44]	; (8004158 <HAL_RCC_ClockConfig+0x1a0>)
 800412c:	6018      	str	r0, [r3, #0]
 800412e:	4b0b      	ldr	r3, [pc, #44]	; (800415c <HAL_RCC_ClockConfig+0x1a4>)
 8004130:	6818      	ldr	r0, [r3, #0]
 8004132:	f7ff f8e9 	bl	8003308 <HAL_InitTick>
 8004136:	2000      	movs	r0, #0
 8004138:	bd70      	pop	{r4, r5, r6, pc}
 800413a:	2001      	movs	r0, #1
 800413c:	4770      	bx	lr
 800413e:	2001      	movs	r0, #1
 8004140:	e7fa      	b.n	8004138 <HAL_RCC_ClockConfig+0x180>
 8004142:	2001      	movs	r0, #1
 8004144:	e7f8      	b.n	8004138 <HAL_RCC_ClockConfig+0x180>
 8004146:	2001      	movs	r0, #1
 8004148:	e7f6      	b.n	8004138 <HAL_RCC_ClockConfig+0x180>
 800414a:	bf00      	nop
 800414c:	40022000 	.word	0x40022000
 8004150:	40021000 	.word	0x40021000
 8004154:	08006054 	.word	0x08006054
 8004158:	20000104 	.word	0x20000104
 800415c:	20000100 	.word	0x20000100

08004160 <HAL_RCC_GetHCLKFreq>:
 8004160:	4b01      	ldr	r3, [pc, #4]	; (8004168 <HAL_RCC_GetHCLKFreq+0x8>)
 8004162:	6818      	ldr	r0, [r3, #0]
 8004164:	4770      	bx	lr
 8004166:	bf00      	nop
 8004168:	20000104 	.word	0x20000104

0800416c <HAL_RCC_GetPCLK1Freq>:
 800416c:	b508      	push	{r3, lr}
 800416e:	f7ff fff7 	bl	8004160 <HAL_RCC_GetHCLKFreq>
 8004172:	4b07      	ldr	r3, [pc, #28]	; (8004190 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004174:	685b      	ldr	r3, [r3, #4]
 8004176:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800417a:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 800417e:	fa92 f2a2 	rbit	r2, r2
 8004182:	fab2 f282 	clz	r2, r2
 8004186:	40d3      	lsrs	r3, r2
 8004188:	4a02      	ldr	r2, [pc, #8]	; (8004194 <HAL_RCC_GetPCLK1Freq+0x28>)
 800418a:	5cd3      	ldrb	r3, [r2, r3]
 800418c:	40d8      	lsrs	r0, r3
 800418e:	bd08      	pop	{r3, pc}
 8004190:	40021000 	.word	0x40021000
 8004194:	08006064 	.word	0x08006064

08004198 <HAL_RCC_GetPCLK2Freq>:
 8004198:	b508      	push	{r3, lr}
 800419a:	f7ff ffe1 	bl	8004160 <HAL_RCC_GetHCLKFreq>
 800419e:	4b07      	ldr	r3, [pc, #28]	; (80041bc <HAL_RCC_GetPCLK2Freq+0x24>)
 80041a0:	685b      	ldr	r3, [r3, #4]
 80041a2:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 80041a6:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 80041aa:	fa92 f2a2 	rbit	r2, r2
 80041ae:	fab2 f282 	clz	r2, r2
 80041b2:	40d3      	lsrs	r3, r2
 80041b4:	4a02      	ldr	r2, [pc, #8]	; (80041c0 <HAL_RCC_GetPCLK2Freq+0x28>)
 80041b6:	5cd3      	ldrb	r3, [r2, r3]
 80041b8:	40d8      	lsrs	r0, r3
 80041ba:	bd08      	pop	{r3, pc}
 80041bc:	40021000 	.word	0x40021000
 80041c0:	08006064 	.word	0x08006064

080041c4 <HAL_RCCEx_PeriphCLKConfig>:
 80041c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80041c6:	b083      	sub	sp, #12
 80041c8:	4604      	mov	r4, r0
 80041ca:	6803      	ldr	r3, [r0, #0]
 80041cc:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80041d0:	d048      	beq.n	8004264 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 80041d2:	4b91      	ldr	r3, [pc, #580]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80041d4:	69db      	ldr	r3, [r3, #28]
 80041d6:	f013 5f80 	tst.w	r3, #268435456	; 0x10000000
 80041da:	f040 80d4 	bne.w	8004386 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
 80041de:	4b8e      	ldr	r3, [pc, #568]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80041e0:	69da      	ldr	r2, [r3, #28]
 80041e2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80041e6:	61da      	str	r2, [r3, #28]
 80041e8:	69db      	ldr	r3, [r3, #28]
 80041ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80041ee:	9301      	str	r3, [sp, #4]
 80041f0:	9b01      	ldr	r3, [sp, #4]
 80041f2:	2501      	movs	r5, #1
 80041f4:	4b89      	ldr	r3, [pc, #548]	; (800441c <HAL_RCCEx_PeriphCLKConfig+0x258>)
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	f413 7f80 	tst.w	r3, #256	; 0x100
 80041fc:	f000 80c5 	beq.w	800438a <HAL_RCCEx_PeriphCLKConfig+0x1c6>
 8004200:	4b85      	ldr	r3, [pc, #532]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004202:	6a1b      	ldr	r3, [r3, #32]
 8004204:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8004208:	d022      	beq.n	8004250 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 800420a:	6862      	ldr	r2, [r4, #4]
 800420c:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8004210:	429a      	cmp	r2, r3
 8004212:	d01d      	beq.n	8004250 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8004214:	4880      	ldr	r0, [pc, #512]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004216:	6a01      	ldr	r1, [r0, #32]
 8004218:	f421 7640 	bic.w	r6, r1, #768	; 0x300
 800421c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8004220:	fa93 f2a3 	rbit	r2, r3
 8004224:	fab2 f282 	clz	r2, r2
 8004228:	4f7d      	ldr	r7, [pc, #500]	; (8004420 <HAL_RCCEx_PeriphCLKConfig+0x25c>)
 800422a:	443a      	add	r2, r7
 800422c:	0092      	lsls	r2, r2, #2
 800422e:	f04f 0c01 	mov.w	ip, #1
 8004232:	f8c2 c000 	str.w	ip, [r2]
 8004236:	fa93 f3a3 	rbit	r3, r3
 800423a:	fab3 f383 	clz	r3, r3
 800423e:	443b      	add	r3, r7
 8004240:	009b      	lsls	r3, r3, #2
 8004242:	2200      	movs	r2, #0
 8004244:	601a      	str	r2, [r3, #0]
 8004246:	6206      	str	r6, [r0, #32]
 8004248:	f011 0f01 	tst.w	r1, #1
 800424c:	f040 80b2 	bne.w	80043b4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 8004250:	4a71      	ldr	r2, [pc, #452]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004252:	6a13      	ldr	r3, [r2, #32]
 8004254:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004258:	6861      	ldr	r1, [r4, #4]
 800425a:	430b      	orrs	r3, r1
 800425c:	6213      	str	r3, [r2, #32]
 800425e:	2d00      	cmp	r5, #0
 8004260:	f040 80cf 	bne.w	8004402 <HAL_RCCEx_PeriphCLKConfig+0x23e>
 8004264:	6823      	ldr	r3, [r4, #0]
 8004266:	f013 0f01 	tst.w	r3, #1
 800426a:	d006      	beq.n	800427a <HAL_RCCEx_PeriphCLKConfig+0xb6>
 800426c:	4a6a      	ldr	r2, [pc, #424]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800426e:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8004270:	f023 0303 	bic.w	r3, r3, #3
 8004274:	68a1      	ldr	r1, [r4, #8]
 8004276:	430b      	orrs	r3, r1
 8004278:	6313      	str	r3, [r2, #48]	; 0x30
 800427a:	6823      	ldr	r3, [r4, #0]
 800427c:	f013 0f02 	tst.w	r3, #2
 8004280:	d006      	beq.n	8004290 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8004282:	4a65      	ldr	r2, [pc, #404]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004284:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8004286:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800428a:	68e1      	ldr	r1, [r4, #12]
 800428c:	430b      	orrs	r3, r1
 800428e:	6313      	str	r3, [r2, #48]	; 0x30
 8004290:	6823      	ldr	r3, [r4, #0]
 8004292:	f013 0f04 	tst.w	r3, #4
 8004296:	d006      	beq.n	80042a6 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 8004298:	4a5f      	ldr	r2, [pc, #380]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800429a:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800429c:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 80042a0:	6921      	ldr	r1, [r4, #16]
 80042a2:	430b      	orrs	r3, r1
 80042a4:	6313      	str	r3, [r2, #48]	; 0x30
 80042a6:	6823      	ldr	r3, [r4, #0]
 80042a8:	f013 0f20 	tst.w	r3, #32
 80042ac:	d006      	beq.n	80042bc <HAL_RCCEx_PeriphCLKConfig+0xf8>
 80042ae:	4a5a      	ldr	r2, [pc, #360]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80042b0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80042b2:	f023 0310 	bic.w	r3, r3, #16
 80042b6:	69e1      	ldr	r1, [r4, #28]
 80042b8:	430b      	orrs	r3, r1
 80042ba:	6313      	str	r3, [r2, #48]	; 0x30
 80042bc:	6823      	ldr	r3, [r4, #0]
 80042be:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80042c2:	d006      	beq.n	80042d2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80042c4:	4a54      	ldr	r2, [pc, #336]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80042c6:	6853      	ldr	r3, [r2, #4]
 80042c8:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 80042cc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80042ce:	430b      	orrs	r3, r1
 80042d0:	6053      	str	r3, [r2, #4]
 80042d2:	6823      	ldr	r3, [r4, #0]
 80042d4:	f013 0f40 	tst.w	r3, #64	; 0x40
 80042d8:	d006      	beq.n	80042e8 <HAL_RCCEx_PeriphCLKConfig+0x124>
 80042da:	4a4f      	ldr	r2, [pc, #316]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80042dc:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80042de:	f023 0320 	bic.w	r3, r3, #32
 80042e2:	6a21      	ldr	r1, [r4, #32]
 80042e4:	430b      	orrs	r3, r1
 80042e6:	6313      	str	r3, [r2, #48]	; 0x30
 80042e8:	6823      	ldr	r3, [r4, #0]
 80042ea:	f013 0f08 	tst.w	r3, #8
 80042ee:	d006      	beq.n	80042fe <HAL_RCCEx_PeriphCLKConfig+0x13a>
 80042f0:	4a49      	ldr	r2, [pc, #292]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80042f2:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80042f4:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80042f8:	6961      	ldr	r1, [r4, #20]
 80042fa:	430b      	orrs	r3, r1
 80042fc:	6313      	str	r3, [r2, #48]	; 0x30
 80042fe:	6823      	ldr	r3, [r4, #0]
 8004300:	f013 0f10 	tst.w	r3, #16
 8004304:	d006      	beq.n	8004314 <HAL_RCCEx_PeriphCLKConfig+0x150>
 8004306:	4a44      	ldr	r2, [pc, #272]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004308:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800430a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 800430e:	69a1      	ldr	r1, [r4, #24]
 8004310:	430b      	orrs	r3, r1
 8004312:	6313      	str	r3, [r2, #48]	; 0x30
 8004314:	6823      	ldr	r3, [r4, #0]
 8004316:	f413 7f00 	tst.w	r3, #512	; 0x200
 800431a:	d006      	beq.n	800432a <HAL_RCCEx_PeriphCLKConfig+0x166>
 800431c:	4a3e      	ldr	r2, [pc, #248]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800431e:	6853      	ldr	r3, [r2, #4]
 8004320:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8004324:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8004326:	430b      	orrs	r3, r1
 8004328:	6053      	str	r3, [r2, #4]
 800432a:	6823      	ldr	r3, [r4, #0]
 800432c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8004330:	d006      	beq.n	8004340 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8004332:	4a39      	ldr	r2, [pc, #228]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004334:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8004336:	f423 73f8 	bic.w	r3, r3, #496	; 0x1f0
 800433a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800433c:	430b      	orrs	r3, r1
 800433e:	62d3      	str	r3, [r2, #44]	; 0x2c
 8004340:	6823      	ldr	r3, [r4, #0]
 8004342:	f413 7f80 	tst.w	r3, #256	; 0x100
 8004346:	d006      	beq.n	8004356 <HAL_RCCEx_PeriphCLKConfig+0x192>
 8004348:	4a33      	ldr	r2, [pc, #204]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800434a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800434c:	f423 5378 	bic.w	r3, r3, #15872	; 0x3e00
 8004350:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8004352:	430b      	orrs	r3, r1
 8004354:	62d3      	str	r3, [r2, #44]	; 0x2c
 8004356:	6823      	ldr	r3, [r4, #0]
 8004358:	f413 5f80 	tst.w	r3, #4096	; 0x1000
 800435c:	d006      	beq.n	800436c <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 800435e:	4a2e      	ldr	r2, [pc, #184]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004360:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8004362:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004366:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8004368:	430b      	orrs	r3, r1
 800436a:	6313      	str	r3, [r2, #48]	; 0x30
 800436c:	6823      	ldr	r3, [r4, #0]
 800436e:	f413 5f00 	tst.w	r3, #8192	; 0x2000
 8004372:	d04d      	beq.n	8004410 <HAL_RCCEx_PeriphCLKConfig+0x24c>
 8004374:	4a28      	ldr	r2, [pc, #160]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004376:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8004378:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800437c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800437e:	430b      	orrs	r3, r1
 8004380:	6313      	str	r3, [r2, #48]	; 0x30
 8004382:	2000      	movs	r0, #0
 8004384:	e045      	b.n	8004412 <HAL_RCCEx_PeriphCLKConfig+0x24e>
 8004386:	2500      	movs	r5, #0
 8004388:	e734      	b.n	80041f4 <HAL_RCCEx_PeriphCLKConfig+0x30>
 800438a:	4a24      	ldr	r2, [pc, #144]	; (800441c <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800438c:	6813      	ldr	r3, [r2, #0]
 800438e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004392:	6013      	str	r3, [r2, #0]
 8004394:	f7fe fffc 	bl	8003390 <HAL_GetTick>
 8004398:	4606      	mov	r6, r0
 800439a:	4b20      	ldr	r3, [pc, #128]	; (800441c <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	f413 7f80 	tst.w	r3, #256	; 0x100
 80043a2:	f47f af2d 	bne.w	8004200 <HAL_RCCEx_PeriphCLKConfig+0x3c>
 80043a6:	f7fe fff3 	bl	8003390 <HAL_GetTick>
 80043aa:	1b80      	subs	r0, r0, r6
 80043ac:	2864      	cmp	r0, #100	; 0x64
 80043ae:	d9f4      	bls.n	800439a <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 80043b0:	2003      	movs	r0, #3
 80043b2:	e02e      	b.n	8004412 <HAL_RCCEx_PeriphCLKConfig+0x24e>
 80043b4:	f7fe ffec 	bl	8003390 <HAL_GetTick>
 80043b8:	4606      	mov	r6, r0
 80043ba:	e015      	b.n	80043e8 <HAL_RCCEx_PeriphCLKConfig+0x224>
 80043bc:	4b16      	ldr	r3, [pc, #88]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80043be:	6a19      	ldr	r1, [r3, #32]
 80043c0:	2302      	movs	r3, #2
 80043c2:	fa93 f3a3 	rbit	r3, r3
 80043c6:	fab3 f383 	clz	r3, r3
 80043ca:	f003 031f 	and.w	r3, r3, #31
 80043ce:	2201      	movs	r2, #1
 80043d0:	fa02 f303 	lsl.w	r3, r2, r3
 80043d4:	420b      	tst	r3, r1
 80043d6:	f47f af3b 	bne.w	8004250 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 80043da:	f7fe ffd9 	bl	8003390 <HAL_GetTick>
 80043de:	1b80      	subs	r0, r0, r6
 80043e0:	f241 3388 	movw	r3, #5000	; 0x1388
 80043e4:	4298      	cmp	r0, r3
 80043e6:	d811      	bhi.n	800440c <HAL_RCCEx_PeriphCLKConfig+0x248>
 80043e8:	2302      	movs	r3, #2
 80043ea:	fa93 f2a3 	rbit	r2, r3
 80043ee:	fa93 f3a3 	rbit	r3, r3
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	d1e2      	bne.n	80043bc <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 80043f6:	2302      	movs	r3, #2
 80043f8:	fa93 f3a3 	rbit	r3, r3
 80043fc:	4b06      	ldr	r3, [pc, #24]	; (8004418 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80043fe:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004400:	e7de      	b.n	80043c0 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
 8004402:	69d3      	ldr	r3, [r2, #28]
 8004404:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004408:	61d3      	str	r3, [r2, #28]
 800440a:	e72b      	b.n	8004264 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 800440c:	2003      	movs	r0, #3
 800440e:	e000      	b.n	8004412 <HAL_RCCEx_PeriphCLKConfig+0x24e>
 8004410:	2000      	movs	r0, #0
 8004412:	b003      	add	sp, #12
 8004414:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004416:	bf00      	nop
 8004418:	40021000 	.word	0x40021000
 800441c:	40007000 	.word	0x40007000
 8004420:	10908100 	.word	0x10908100

08004424 <SPI_WaitFlagStateUntilTimeout>:
 8004424:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004428:	b082      	sub	sp, #8
 800442a:	4605      	mov	r5, r0
 800442c:	4688      	mov	r8, r1
 800442e:	4617      	mov	r7, r2
 8004430:	461e      	mov	r6, r3
 8004432:	f7fe ffad 	bl	8003390 <HAL_GetTick>
 8004436:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004438:	1a1b      	subs	r3, r3, r0
 800443a:	eb03 0906 	add.w	r9, r3, r6
 800443e:	f7fe ffa7 	bl	8003390 <HAL_GetTick>
 8004442:	4682      	mov	sl, r0
 8004444:	4b2b      	ldr	r3, [pc, #172]	; (80044f4 <SPI_WaitFlagStateUntilTimeout+0xd0>)
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800444c:	fb09 f303 	mul.w	r3, r9, r3
 8004450:	9301      	str	r3, [sp, #4]
 8004452:	682b      	ldr	r3, [r5, #0]
 8004454:	689c      	ldr	r4, [r3, #8]
 8004456:	ea38 0304 	bics.w	r3, r8, r4
 800445a:	bf0c      	ite	eq
 800445c:	f04f 0c01 	moveq.w	ip, #1
 8004460:	f04f 0c00 	movne.w	ip, #0
 8004464:	45bc      	cmp	ip, r7
 8004466:	d040      	beq.n	80044ea <SPI_WaitFlagStateUntilTimeout+0xc6>
 8004468:	f1b6 3fff 	cmp.w	r6, #4294967295	; 0xffffffff
 800446c:	d0f1      	beq.n	8004452 <SPI_WaitFlagStateUntilTimeout+0x2e>
 800446e:	f7fe ff8f 	bl	8003390 <HAL_GetTick>
 8004472:	eba0 000a 	sub.w	r0, r0, sl
 8004476:	4548      	cmp	r0, r9
 8004478:	d20a      	bcs.n	8004490 <SPI_WaitFlagStateUntilTimeout+0x6c>
 800447a:	f1b9 0f00 	cmp.w	r9, #0
 800447e:	d007      	beq.n	8004490 <SPI_WaitFlagStateUntilTimeout+0x6c>
 8004480:	9a01      	ldr	r2, [sp, #4]
 8004482:	b102      	cbz	r2, 8004486 <SPI_WaitFlagStateUntilTimeout+0x62>
 8004484:	464a      	mov	r2, r9
 8004486:	9b01      	ldr	r3, [sp, #4]
 8004488:	3b01      	subs	r3, #1
 800448a:	9301      	str	r3, [sp, #4]
 800448c:	4691      	mov	r9, r2
 800448e:	e7e0      	b.n	8004452 <SPI_WaitFlagStateUntilTimeout+0x2e>
 8004490:	682a      	ldr	r2, [r5, #0]
 8004492:	6853      	ldr	r3, [r2, #4]
 8004494:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 8004498:	6053      	str	r3, [r2, #4]
 800449a:	686b      	ldr	r3, [r5, #4]
 800449c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80044a0:	d00b      	beq.n	80044ba <SPI_WaitFlagStateUntilTimeout+0x96>
 80044a2:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80044a4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80044a8:	d014      	beq.n	80044d4 <SPI_WaitFlagStateUntilTimeout+0xb0>
 80044aa:	2301      	movs	r3, #1
 80044ac:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
 80044b0:	2300      	movs	r3, #0
 80044b2:	f885 305c 	strb.w	r3, [r5, #92]	; 0x5c
 80044b6:	2003      	movs	r0, #3
 80044b8:	e018      	b.n	80044ec <SPI_WaitFlagStateUntilTimeout+0xc8>
 80044ba:	68ab      	ldr	r3, [r5, #8]
 80044bc:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80044c0:	d002      	beq.n	80044c8 <SPI_WaitFlagStateUntilTimeout+0xa4>
 80044c2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80044c6:	d1ec      	bne.n	80044a2 <SPI_WaitFlagStateUntilTimeout+0x7e>
 80044c8:	682a      	ldr	r2, [r5, #0]
 80044ca:	6813      	ldr	r3, [r2, #0]
 80044cc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80044d0:	6013      	str	r3, [r2, #0]
 80044d2:	e7e6      	b.n	80044a2 <SPI_WaitFlagStateUntilTimeout+0x7e>
 80044d4:	682a      	ldr	r2, [r5, #0]
 80044d6:	6813      	ldr	r3, [r2, #0]
 80044d8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80044dc:	6013      	str	r3, [r2, #0]
 80044de:	682a      	ldr	r2, [r5, #0]
 80044e0:	6813      	ldr	r3, [r2, #0]
 80044e2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80044e6:	6013      	str	r3, [r2, #0]
 80044e8:	e7df      	b.n	80044aa <SPI_WaitFlagStateUntilTimeout+0x86>
 80044ea:	2000      	movs	r0, #0
 80044ec:	b002      	add	sp, #8
 80044ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80044f2:	bf00      	nop
 80044f4:	20000104 	.word	0x20000104

080044f8 <SPI_WaitFifoStateUntilTimeout>:
 80044f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80044fc:	b082      	sub	sp, #8
 80044fe:	4606      	mov	r6, r0
 8004500:	460c      	mov	r4, r1
 8004502:	4615      	mov	r5, r2
 8004504:	461f      	mov	r7, r3
 8004506:	2300      	movs	r3, #0
 8004508:	f88d 3003 	strb.w	r3, [sp, #3]
 800450c:	f7fe ff40 	bl	8003390 <HAL_GetTick>
 8004510:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004512:	1a1b      	subs	r3, r3, r0
 8004514:	eb03 0807 	add.w	r8, r3, r7
 8004518:	f7fe ff3a 	bl	8003390 <HAL_GetTick>
 800451c:	4681      	mov	r9, r0
 800451e:	f8d6 a000 	ldr.w	sl, [r6]
 8004522:	4b31      	ldr	r3, [pc, #196]	; (80045e8 <SPI_WaitFifoStateUntilTimeout+0xf0>)
 8004524:	681b      	ldr	r3, [r3, #0]
 8004526:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800452a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 800452e:	0d1b      	lsrs	r3, r3, #20
 8004530:	fb08 f303 	mul.w	r3, r8, r3
 8004534:	9301      	str	r3, [sp, #4]
 8004536:	e002      	b.n	800453e <SPI_WaitFifoStateUntilTimeout+0x46>
 8004538:	f1b7 3fff 	cmp.w	r7, #4294967295	; 0xffffffff
 800453c:	d112      	bne.n	8004564 <SPI_WaitFifoStateUntilTimeout+0x6c>
 800453e:	6833      	ldr	r3, [r6, #0]
 8004540:	689b      	ldr	r3, [r3, #8]
 8004542:	ea03 0c04 	and.w	ip, r3, r4
 8004546:	45ac      	cmp	ip, r5
 8004548:	d04a      	beq.n	80045e0 <SPI_WaitFifoStateUntilTimeout+0xe8>
 800454a:	f5b4 6fc0 	cmp.w	r4, #1536	; 0x600
 800454e:	d1f3      	bne.n	8004538 <SPI_WaitFifoStateUntilTimeout+0x40>
 8004550:	2d00      	cmp	r5, #0
 8004552:	d1f1      	bne.n	8004538 <SPI_WaitFifoStateUntilTimeout+0x40>
 8004554:	f89a 300c 	ldrb.w	r3, [sl, #12]
 8004558:	b2db      	uxtb	r3, r3
 800455a:	f88d 3003 	strb.w	r3, [sp, #3]
 800455e:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8004562:	e7e9      	b.n	8004538 <SPI_WaitFifoStateUntilTimeout+0x40>
 8004564:	f7fe ff14 	bl	8003390 <HAL_GetTick>
 8004568:	eba0 0009 	sub.w	r0, r0, r9
 800456c:	4540      	cmp	r0, r8
 800456e:	d20a      	bcs.n	8004586 <SPI_WaitFifoStateUntilTimeout+0x8e>
 8004570:	f1b8 0f00 	cmp.w	r8, #0
 8004574:	d007      	beq.n	8004586 <SPI_WaitFifoStateUntilTimeout+0x8e>
 8004576:	9a01      	ldr	r2, [sp, #4]
 8004578:	b102      	cbz	r2, 800457c <SPI_WaitFifoStateUntilTimeout+0x84>
 800457a:	4642      	mov	r2, r8
 800457c:	9b01      	ldr	r3, [sp, #4]
 800457e:	3b01      	subs	r3, #1
 8004580:	9301      	str	r3, [sp, #4]
 8004582:	4690      	mov	r8, r2
 8004584:	e7db      	b.n	800453e <SPI_WaitFifoStateUntilTimeout+0x46>
 8004586:	6832      	ldr	r2, [r6, #0]
 8004588:	6853      	ldr	r3, [r2, #4]
 800458a:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 800458e:	6053      	str	r3, [r2, #4]
 8004590:	6873      	ldr	r3, [r6, #4]
 8004592:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004596:	d00b      	beq.n	80045b0 <SPI_WaitFifoStateUntilTimeout+0xb8>
 8004598:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 800459a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800459e:	d014      	beq.n	80045ca <SPI_WaitFifoStateUntilTimeout+0xd2>
 80045a0:	2301      	movs	r3, #1
 80045a2:	f886 305d 	strb.w	r3, [r6, #93]	; 0x5d
 80045a6:	2300      	movs	r3, #0
 80045a8:	f886 305c 	strb.w	r3, [r6, #92]	; 0x5c
 80045ac:	2003      	movs	r0, #3
 80045ae:	e018      	b.n	80045e2 <SPI_WaitFifoStateUntilTimeout+0xea>
 80045b0:	68b3      	ldr	r3, [r6, #8]
 80045b2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80045b6:	d002      	beq.n	80045be <SPI_WaitFifoStateUntilTimeout+0xc6>
 80045b8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80045bc:	d1ec      	bne.n	8004598 <SPI_WaitFifoStateUntilTimeout+0xa0>
 80045be:	6832      	ldr	r2, [r6, #0]
 80045c0:	6813      	ldr	r3, [r2, #0]
 80045c2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80045c6:	6013      	str	r3, [r2, #0]
 80045c8:	e7e6      	b.n	8004598 <SPI_WaitFifoStateUntilTimeout+0xa0>
 80045ca:	6832      	ldr	r2, [r6, #0]
 80045cc:	6813      	ldr	r3, [r2, #0]
 80045ce:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80045d2:	6013      	str	r3, [r2, #0]
 80045d4:	6832      	ldr	r2, [r6, #0]
 80045d6:	6813      	ldr	r3, [r2, #0]
 80045d8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80045dc:	6013      	str	r3, [r2, #0]
 80045de:	e7df      	b.n	80045a0 <SPI_WaitFifoStateUntilTimeout+0xa8>
 80045e0:	2000      	movs	r0, #0
 80045e2:	b002      	add	sp, #8
 80045e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80045e8:	20000104 	.word	0x20000104

080045ec <SPI_EndRxTxTransaction>:
 80045ec:	b570      	push	{r4, r5, r6, lr}
 80045ee:	b082      	sub	sp, #8
 80045f0:	4604      	mov	r4, r0
 80045f2:	460d      	mov	r5, r1
 80045f4:	4616      	mov	r6, r2
 80045f6:	9200      	str	r2, [sp, #0]
 80045f8:	460b      	mov	r3, r1
 80045fa:	2200      	movs	r2, #0
 80045fc:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 8004600:	f7ff ff7a 	bl	80044f8 <SPI_WaitFifoStateUntilTimeout>
 8004604:	b9b0      	cbnz	r0, 8004634 <SPI_EndRxTxTransaction+0x48>
 8004606:	9600      	str	r6, [sp, #0]
 8004608:	462b      	mov	r3, r5
 800460a:	2200      	movs	r2, #0
 800460c:	2180      	movs	r1, #128	; 0x80
 800460e:	4620      	mov	r0, r4
 8004610:	f7ff ff08 	bl	8004424 <SPI_WaitFlagStateUntilTimeout>
 8004614:	b9a8      	cbnz	r0, 8004642 <SPI_EndRxTxTransaction+0x56>
 8004616:	9600      	str	r6, [sp, #0]
 8004618:	462b      	mov	r3, r5
 800461a:	2200      	movs	r2, #0
 800461c:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8004620:	4620      	mov	r0, r4
 8004622:	f7ff ff69 	bl	80044f8 <SPI_WaitFifoStateUntilTimeout>
 8004626:	b150      	cbz	r0, 800463e <SPI_EndRxTxTransaction+0x52>
 8004628:	6e23      	ldr	r3, [r4, #96]	; 0x60
 800462a:	f043 0320 	orr.w	r3, r3, #32
 800462e:	6623      	str	r3, [r4, #96]	; 0x60
 8004630:	2003      	movs	r0, #3
 8004632:	e004      	b.n	800463e <SPI_EndRxTxTransaction+0x52>
 8004634:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8004636:	f043 0320 	orr.w	r3, r3, #32
 800463a:	6623      	str	r3, [r4, #96]	; 0x60
 800463c:	2003      	movs	r0, #3
 800463e:	b002      	add	sp, #8
 8004640:	bd70      	pop	{r4, r5, r6, pc}
 8004642:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8004644:	f043 0320 	orr.w	r3, r3, #32
 8004648:	6623      	str	r3, [r4, #96]	; 0x60
 800464a:	2003      	movs	r0, #3
 800464c:	e7f7      	b.n	800463e <SPI_EndRxTxTransaction+0x52>

0800464e <SPI_EndRxTransaction>:
 800464e:	b570      	push	{r4, r5, r6, lr}
 8004650:	b082      	sub	sp, #8
 8004652:	4604      	mov	r4, r0
 8004654:	460d      	mov	r5, r1
 8004656:	4616      	mov	r6, r2
 8004658:	6843      	ldr	r3, [r0, #4]
 800465a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800465e:	d00d      	beq.n	800467c <SPI_EndRxTransaction+0x2e>
 8004660:	9600      	str	r6, [sp, #0]
 8004662:	462b      	mov	r3, r5
 8004664:	2200      	movs	r2, #0
 8004666:	2180      	movs	r1, #128	; 0x80
 8004668:	4620      	mov	r0, r4
 800466a:	f7ff fedb 	bl	8004424 <SPI_WaitFlagStateUntilTimeout>
 800466e:	b990      	cbnz	r0, 8004696 <SPI_EndRxTransaction+0x48>
 8004670:	6863      	ldr	r3, [r4, #4]
 8004672:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004676:	d014      	beq.n	80046a2 <SPI_EndRxTransaction+0x54>
 8004678:	b002      	add	sp, #8
 800467a:	bd70      	pop	{r4, r5, r6, pc}
 800467c:	6883      	ldr	r3, [r0, #8]
 800467e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004682:	d002      	beq.n	800468a <SPI_EndRxTransaction+0x3c>
 8004684:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004688:	d1ea      	bne.n	8004660 <SPI_EndRxTransaction+0x12>
 800468a:	6822      	ldr	r2, [r4, #0]
 800468c:	6813      	ldr	r3, [r2, #0]
 800468e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004692:	6013      	str	r3, [r2, #0]
 8004694:	e7e4      	b.n	8004660 <SPI_EndRxTransaction+0x12>
 8004696:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8004698:	f043 0320 	orr.w	r3, r3, #32
 800469c:	6623      	str	r3, [r4, #96]	; 0x60
 800469e:	2003      	movs	r0, #3
 80046a0:	e7ea      	b.n	8004678 <SPI_EndRxTransaction+0x2a>
 80046a2:	68a3      	ldr	r3, [r4, #8]
 80046a4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80046a8:	d002      	beq.n	80046b0 <SPI_EndRxTransaction+0x62>
 80046aa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80046ae:	d1e3      	bne.n	8004678 <SPI_EndRxTransaction+0x2a>
 80046b0:	9600      	str	r6, [sp, #0]
 80046b2:	462b      	mov	r3, r5
 80046b4:	2200      	movs	r2, #0
 80046b6:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80046ba:	4620      	mov	r0, r4
 80046bc:	f7ff ff1c 	bl	80044f8 <SPI_WaitFifoStateUntilTimeout>
 80046c0:	2800      	cmp	r0, #0
 80046c2:	d0d9      	beq.n	8004678 <SPI_EndRxTransaction+0x2a>
 80046c4:	6e23      	ldr	r3, [r4, #96]	; 0x60
 80046c6:	f043 0320 	orr.w	r3, r3, #32
 80046ca:	6623      	str	r3, [r4, #96]	; 0x60
 80046cc:	2003      	movs	r0, #3
 80046ce:	e7d3      	b.n	8004678 <SPI_EndRxTransaction+0x2a>

080046d0 <HAL_SPI_Init>:
 80046d0:	2800      	cmp	r0, #0
 80046d2:	d06f      	beq.n	80047b4 <HAL_SPI_Init+0xe4>
 80046d4:	b510      	push	{r4, lr}
 80046d6:	4604      	mov	r4, r0
 80046d8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80046da:	b933      	cbnz	r3, 80046ea <HAL_SPI_Init+0x1a>
 80046dc:	6843      	ldr	r3, [r0, #4]
 80046de:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80046e2:	d005      	beq.n	80046f0 <HAL_SPI_Init+0x20>
 80046e4:	2300      	movs	r3, #0
 80046e6:	61c3      	str	r3, [r0, #28]
 80046e8:	e002      	b.n	80046f0 <HAL_SPI_Init+0x20>
 80046ea:	2300      	movs	r3, #0
 80046ec:	6103      	str	r3, [r0, #16]
 80046ee:	6143      	str	r3, [r0, #20]
 80046f0:	2300      	movs	r3, #0
 80046f2:	62a3      	str	r3, [r4, #40]	; 0x28
 80046f4:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 80046f8:	2b00      	cmp	r3, #0
 80046fa:	d052      	beq.n	80047a2 <HAL_SPI_Init+0xd2>
 80046fc:	2302      	movs	r3, #2
 80046fe:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8004702:	6822      	ldr	r2, [r4, #0]
 8004704:	6813      	ldr	r3, [r2, #0]
 8004706:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800470a:	6013      	str	r3, [r2, #0]
 800470c:	68e3      	ldr	r3, [r4, #12]
 800470e:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004712:	d94c      	bls.n	80047ae <HAL_SPI_Init+0xde>
 8004714:	2200      	movs	r2, #0
 8004716:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 800471a:	d004      	beq.n	8004726 <HAL_SPI_Init+0x56>
 800471c:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004720:	d001      	beq.n	8004726 <HAL_SPI_Init+0x56>
 8004722:	2300      	movs	r3, #0
 8004724:	62a3      	str	r3, [r4, #40]	; 0x28
 8004726:	6863      	ldr	r3, [r4, #4]
 8004728:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800472c:	68a1      	ldr	r1, [r4, #8]
 800472e:	f401 4104 	and.w	r1, r1, #33792	; 0x8400
 8004732:	430b      	orrs	r3, r1
 8004734:	6921      	ldr	r1, [r4, #16]
 8004736:	f001 0102 	and.w	r1, r1, #2
 800473a:	430b      	orrs	r3, r1
 800473c:	6961      	ldr	r1, [r4, #20]
 800473e:	f001 0101 	and.w	r1, r1, #1
 8004742:	430b      	orrs	r3, r1
 8004744:	69a1      	ldr	r1, [r4, #24]
 8004746:	f401 7100 	and.w	r1, r1, #512	; 0x200
 800474a:	430b      	orrs	r3, r1
 800474c:	69e1      	ldr	r1, [r4, #28]
 800474e:	f001 0138 	and.w	r1, r1, #56	; 0x38
 8004752:	430b      	orrs	r3, r1
 8004754:	6a21      	ldr	r1, [r4, #32]
 8004756:	f001 0180 	and.w	r1, r1, #128	; 0x80
 800475a:	430b      	orrs	r3, r1
 800475c:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800475e:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8004762:	6820      	ldr	r0, [r4, #0]
 8004764:	430b      	orrs	r3, r1
 8004766:	6003      	str	r3, [r0, #0]
 8004768:	8b63      	ldrh	r3, [r4, #26]
 800476a:	f003 0304 	and.w	r3, r3, #4
 800476e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8004770:	f001 0110 	and.w	r1, r1, #16
 8004774:	430b      	orrs	r3, r1
 8004776:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004778:	f001 0108 	and.w	r1, r1, #8
 800477c:	430b      	orrs	r3, r1
 800477e:	68e1      	ldr	r1, [r4, #12]
 8004780:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
 8004784:	430b      	orrs	r3, r1
 8004786:	6821      	ldr	r1, [r4, #0]
 8004788:	4313      	orrs	r3, r2
 800478a:	604b      	str	r3, [r1, #4]
 800478c:	6822      	ldr	r2, [r4, #0]
 800478e:	69d3      	ldr	r3, [r2, #28]
 8004790:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004794:	61d3      	str	r3, [r2, #28]
 8004796:	2000      	movs	r0, #0
 8004798:	6620      	str	r0, [r4, #96]	; 0x60
 800479a:	2301      	movs	r3, #1
 800479c:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 80047a0:	bd10      	pop	{r4, pc}
 80047a2:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
 80047a6:	4620      	mov	r0, r4
 80047a8:	f7fe fd7a 	bl	80032a0 <HAL_SPI_MspInit>
 80047ac:	e7a6      	b.n	80046fc <HAL_SPI_Init+0x2c>
 80047ae:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80047b2:	e7b0      	b.n	8004716 <HAL_SPI_Init+0x46>
 80047b4:	2001      	movs	r0, #1
 80047b6:	4770      	bx	lr

080047b8 <HAL_SPI_Transmit>:
 80047b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80047bc:	b083      	sub	sp, #12
 80047be:	461d      	mov	r5, r3
 80047c0:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
 80047c4:	2b01      	cmp	r3, #1
 80047c6:	f000 80f4 	beq.w	80049b2 <HAL_SPI_Transmit+0x1fa>
 80047ca:	4604      	mov	r4, r0
 80047cc:	4688      	mov	r8, r1
 80047ce:	4691      	mov	r9, r2
 80047d0:	2301      	movs	r3, #1
 80047d2:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 80047d6:	f7fe fddb 	bl	8003390 <HAL_GetTick>
 80047da:	4607      	mov	r7, r0
 80047dc:	f894 605d 	ldrb.w	r6, [r4, #93]	; 0x5d
 80047e0:	b2f6      	uxtb	r6, r6
 80047e2:	2e01      	cmp	r6, #1
 80047e4:	f040 80dd 	bne.w	80049a2 <HAL_SPI_Transmit+0x1ea>
 80047e8:	f1b8 0f00 	cmp.w	r8, #0
 80047ec:	f000 80da 	beq.w	80049a4 <HAL_SPI_Transmit+0x1ec>
 80047f0:	f1b9 0f00 	cmp.w	r9, #0
 80047f4:	f000 80d6 	beq.w	80049a4 <HAL_SPI_Transmit+0x1ec>
 80047f8:	2303      	movs	r3, #3
 80047fa:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 80047fe:	2300      	movs	r3, #0
 8004800:	6623      	str	r3, [r4, #96]	; 0x60
 8004802:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
 8004806:	f8a4 903c 	strh.w	r9, [r4, #60]	; 0x3c
 800480a:	f8a4 903e 	strh.w	r9, [r4, #62]	; 0x3e
 800480e:	6423      	str	r3, [r4, #64]	; 0x40
 8004810:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
 8004814:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 8004818:	6523      	str	r3, [r4, #80]	; 0x50
 800481a:	64e3      	str	r3, [r4, #76]	; 0x4c
 800481c:	68a3      	ldr	r3, [r4, #8]
 800481e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004822:	d01e      	beq.n	8004862 <HAL_SPI_Transmit+0xaa>
 8004824:	6823      	ldr	r3, [r4, #0]
 8004826:	681a      	ldr	r2, [r3, #0]
 8004828:	f012 0f40 	tst.w	r2, #64	; 0x40
 800482c:	d103      	bne.n	8004836 <HAL_SPI_Transmit+0x7e>
 800482e:	681a      	ldr	r2, [r3, #0]
 8004830:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004834:	601a      	str	r2, [r3, #0]
 8004836:	68e3      	ldr	r3, [r4, #12]
 8004838:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800483c:	d944      	bls.n	80048c8 <HAL_SPI_Transmit+0x110>
 800483e:	6863      	ldr	r3, [r4, #4]
 8004840:	b113      	cbz	r3, 8004848 <HAL_SPI_Transmit+0x90>
 8004842:	f1b9 0f01 	cmp.w	r9, #1
 8004846:	d120      	bne.n	800488a <HAL_SPI_Transmit+0xd2>
 8004848:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800484a:	6823      	ldr	r3, [r4, #0]
 800484c:	8812      	ldrh	r2, [r2, #0]
 800484e:	60da      	str	r2, [r3, #12]
 8004850:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004852:	3302      	adds	r3, #2
 8004854:	63a3      	str	r3, [r4, #56]	; 0x38
 8004856:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004858:	b29b      	uxth	r3, r3
 800485a:	3b01      	subs	r3, #1
 800485c:	b29b      	uxth	r3, r3
 800485e:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8004860:	e013      	b.n	800488a <HAL_SPI_Transmit+0xd2>
 8004862:	6822      	ldr	r2, [r4, #0]
 8004864:	6813      	ldr	r3, [r2, #0]
 8004866:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800486a:	6013      	str	r3, [r2, #0]
 800486c:	6822      	ldr	r2, [r4, #0]
 800486e:	6813      	ldr	r3, [r2, #0]
 8004870:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004874:	6013      	str	r3, [r2, #0]
 8004876:	e7d5      	b.n	8004824 <HAL_SPI_Transmit+0x6c>
 8004878:	f7fe fd8a 	bl	8003390 <HAL_GetTick>
 800487c:	1bc0      	subs	r0, r0, r7
 800487e:	42a8      	cmp	r0, r5
 8004880:	d302      	bcc.n	8004888 <HAL_SPI_Transmit+0xd0>
 8004882:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 8004886:	d11a      	bne.n	80048be <HAL_SPI_Transmit+0x106>
 8004888:	b1cd      	cbz	r5, 80048be <HAL_SPI_Transmit+0x106>
 800488a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800488c:	b29b      	uxth	r3, r3
 800488e:	2b00      	cmp	r3, #0
 8004890:	d06f      	beq.n	8004972 <HAL_SPI_Transmit+0x1ba>
 8004892:	6823      	ldr	r3, [r4, #0]
 8004894:	689a      	ldr	r2, [r3, #8]
 8004896:	f012 0f02 	tst.w	r2, #2
 800489a:	d0ed      	beq.n	8004878 <HAL_SPI_Transmit+0xc0>
 800489c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800489e:	8812      	ldrh	r2, [r2, #0]
 80048a0:	60da      	str	r2, [r3, #12]
 80048a2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80048a4:	3302      	adds	r3, #2
 80048a6:	63a3      	str	r3, [r4, #56]	; 0x38
 80048a8:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
 80048ac:	fa1f fc8c 	uxth.w	ip, ip
 80048b0:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
 80048b4:	fa1f fc8c 	uxth.w	ip, ip
 80048b8:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
 80048bc:	e7e5      	b.n	800488a <HAL_SPI_Transmit+0xd2>
 80048be:	2301      	movs	r3, #1
 80048c0:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 80048c4:	2603      	movs	r6, #3
 80048c6:	e06d      	b.n	80049a4 <HAL_SPI_Transmit+0x1ec>
 80048c8:	6863      	ldr	r3, [r4, #4]
 80048ca:	b113      	cbz	r3, 80048d2 <HAL_SPI_Transmit+0x11a>
 80048cc:	f1b9 0f01 	cmp.w	r9, #1
 80048d0:	d132      	bne.n	8004938 <HAL_SPI_Transmit+0x180>
 80048d2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80048d4:	b29b      	uxth	r3, r3
 80048d6:	2b01      	cmp	r3, #1
 80048d8:	d90c      	bls.n	80048f4 <HAL_SPI_Transmit+0x13c>
 80048da:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80048dc:	6823      	ldr	r3, [r4, #0]
 80048de:	8812      	ldrh	r2, [r2, #0]
 80048e0:	60da      	str	r2, [r3, #12]
 80048e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80048e4:	3302      	adds	r3, #2
 80048e6:	63a3      	str	r3, [r4, #56]	; 0x38
 80048e8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80048ea:	b29b      	uxth	r3, r3
 80048ec:	3b02      	subs	r3, #2
 80048ee:	b29b      	uxth	r3, r3
 80048f0:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80048f2:	e021      	b.n	8004938 <HAL_SPI_Transmit+0x180>
 80048f4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80048f6:	6823      	ldr	r3, [r4, #0]
 80048f8:	7812      	ldrb	r2, [r2, #0]
 80048fa:	731a      	strb	r2, [r3, #12]
 80048fc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80048fe:	3301      	adds	r3, #1
 8004900:	63a3      	str	r3, [r4, #56]	; 0x38
 8004902:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004904:	b29b      	uxth	r3, r3
 8004906:	3b01      	subs	r3, #1
 8004908:	b29b      	uxth	r3, r3
 800490a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800490c:	e014      	b.n	8004938 <HAL_SPI_Transmit+0x180>
 800490e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004910:	781b      	ldrb	r3, [r3, #0]
 8004912:	7313      	strb	r3, [r2, #12]
 8004914:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004916:	3301      	adds	r3, #1
 8004918:	63a3      	str	r3, [r4, #56]	; 0x38
 800491a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800491c:	b29b      	uxth	r3, r3
 800491e:	3b01      	subs	r3, #1
 8004920:	b29b      	uxth	r3, r3
 8004922:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8004924:	e008      	b.n	8004938 <HAL_SPI_Transmit+0x180>
 8004926:	f7fe fd33 	bl	8003390 <HAL_GetTick>
 800492a:	1bc0      	subs	r0, r0, r7
 800492c:	42a8      	cmp	r0, r5
 800492e:	d302      	bcc.n	8004936 <HAL_SPI_Transmit+0x17e>
 8004930:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 8004934:	d118      	bne.n	8004968 <HAL_SPI_Transmit+0x1b0>
 8004936:	b1bd      	cbz	r5, 8004968 <HAL_SPI_Transmit+0x1b0>
 8004938:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800493a:	b29b      	uxth	r3, r3
 800493c:	b1cb      	cbz	r3, 8004972 <HAL_SPI_Transmit+0x1ba>
 800493e:	6822      	ldr	r2, [r4, #0]
 8004940:	6893      	ldr	r3, [r2, #8]
 8004942:	f013 0f02 	tst.w	r3, #2
 8004946:	d0ee      	beq.n	8004926 <HAL_SPI_Transmit+0x16e>
 8004948:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800494a:	b29b      	uxth	r3, r3
 800494c:	2b01      	cmp	r3, #1
 800494e:	d9de      	bls.n	800490e <HAL_SPI_Transmit+0x156>
 8004950:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004952:	881b      	ldrh	r3, [r3, #0]
 8004954:	60d3      	str	r3, [r2, #12]
 8004956:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004958:	3302      	adds	r3, #2
 800495a:	63a3      	str	r3, [r4, #56]	; 0x38
 800495c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800495e:	b29b      	uxth	r3, r3
 8004960:	3b02      	subs	r3, #2
 8004962:	b29b      	uxth	r3, r3
 8004964:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8004966:	e7e7      	b.n	8004938 <HAL_SPI_Transmit+0x180>
 8004968:	2301      	movs	r3, #1
 800496a:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 800496e:	2603      	movs	r6, #3
 8004970:	e018      	b.n	80049a4 <HAL_SPI_Transmit+0x1ec>
 8004972:	463a      	mov	r2, r7
 8004974:	4629      	mov	r1, r5
 8004976:	4620      	mov	r0, r4
 8004978:	f7ff fe38 	bl	80045ec <SPI_EndRxTxTransaction>
 800497c:	b108      	cbz	r0, 8004982 <HAL_SPI_Transmit+0x1ca>
 800497e:	2320      	movs	r3, #32
 8004980:	6623      	str	r3, [r4, #96]	; 0x60
 8004982:	68a3      	ldr	r3, [r4, #8]
 8004984:	b933      	cbnz	r3, 8004994 <HAL_SPI_Transmit+0x1dc>
 8004986:	9301      	str	r3, [sp, #4]
 8004988:	6823      	ldr	r3, [r4, #0]
 800498a:	68da      	ldr	r2, [r3, #12]
 800498c:	9201      	str	r2, [sp, #4]
 800498e:	689b      	ldr	r3, [r3, #8]
 8004990:	9301      	str	r3, [sp, #4]
 8004992:	9b01      	ldr	r3, [sp, #4]
 8004994:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8004996:	b92b      	cbnz	r3, 80049a4 <HAL_SPI_Transmit+0x1ec>
 8004998:	2301      	movs	r3, #1
 800499a:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 800499e:	2600      	movs	r6, #0
 80049a0:	e000      	b.n	80049a4 <HAL_SPI_Transmit+0x1ec>
 80049a2:	2602      	movs	r6, #2
 80049a4:	2300      	movs	r3, #0
 80049a6:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
 80049aa:	4630      	mov	r0, r6
 80049ac:	b003      	add	sp, #12
 80049ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80049b2:	2602      	movs	r6, #2
 80049b4:	e7f9      	b.n	80049aa <HAL_SPI_Transmit+0x1f2>

080049b6 <HAL_SPI_TransmitReceive>:
 80049b6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80049ba:	461f      	mov	r7, r3
 80049bc:	9d08      	ldr	r5, [sp, #32]
 80049be:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
 80049c2:	2b01      	cmp	r3, #1
 80049c4:	f000 816b 	beq.w	8004c9e <HAL_SPI_TransmitReceive+0x2e8>
 80049c8:	4604      	mov	r4, r0
 80049ca:	4688      	mov	r8, r1
 80049cc:	4691      	mov	r9, r2
 80049ce:	2301      	movs	r3, #1
 80049d0:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 80049d4:	f7fe fcdc 	bl	8003390 <HAL_GetTick>
 80049d8:	4606      	mov	r6, r0
 80049da:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 80049de:	b2db      	uxtb	r3, r3
 80049e0:	6862      	ldr	r2, [r4, #4]
 80049e2:	2b01      	cmp	r3, #1
 80049e4:	d00a      	beq.n	80049fc <HAL_SPI_TransmitReceive+0x46>
 80049e6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80049ea:	f040 8146 	bne.w	8004c7a <HAL_SPI_TransmitReceive+0x2c4>
 80049ee:	68a2      	ldr	r2, [r4, #8]
 80049f0:	2a00      	cmp	r2, #0
 80049f2:	f040 8148 	bne.w	8004c86 <HAL_SPI_TransmitReceive+0x2d0>
 80049f6:	2b04      	cmp	r3, #4
 80049f8:	f040 8147 	bne.w	8004c8a <HAL_SPI_TransmitReceive+0x2d4>
 80049fc:	f1b8 0f00 	cmp.w	r8, #0
 8004a00:	f000 8145 	beq.w	8004c8e <HAL_SPI_TransmitReceive+0x2d8>
 8004a04:	f1b9 0f00 	cmp.w	r9, #0
 8004a08:	f000 8143 	beq.w	8004c92 <HAL_SPI_TransmitReceive+0x2dc>
 8004a0c:	2f00      	cmp	r7, #0
 8004a0e:	f000 8142 	beq.w	8004c96 <HAL_SPI_TransmitReceive+0x2e0>
 8004a12:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 8004a16:	b2db      	uxtb	r3, r3
 8004a18:	2b04      	cmp	r3, #4
 8004a1a:	d002      	beq.n	8004a22 <HAL_SPI_TransmitReceive+0x6c>
 8004a1c:	2305      	movs	r3, #5
 8004a1e:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8004a22:	2300      	movs	r3, #0
 8004a24:	6623      	str	r3, [r4, #96]	; 0x60
 8004a26:	f8c4 9040 	str.w	r9, [r4, #64]	; 0x40
 8004a2a:	f8a4 7046 	strh.w	r7, [r4, #70]	; 0x46
 8004a2e:	f8a4 7044 	strh.w	r7, [r4, #68]	; 0x44
 8004a32:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
 8004a36:	87e7      	strh	r7, [r4, #62]	; 0x3e
 8004a38:	87a7      	strh	r7, [r4, #60]	; 0x3c
 8004a3a:	64e3      	str	r3, [r4, #76]	; 0x4c
 8004a3c:	6523      	str	r3, [r4, #80]	; 0x50
 8004a3e:	68e3      	ldr	r3, [r4, #12]
 8004a40:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004a44:	d801      	bhi.n	8004a4a <HAL_SPI_TransmitReceive+0x94>
 8004a46:	2f01      	cmp	r7, #1
 8004a48:	d923      	bls.n	8004a92 <HAL_SPI_TransmitReceive+0xdc>
 8004a4a:	6822      	ldr	r2, [r4, #0]
 8004a4c:	6853      	ldr	r3, [r2, #4]
 8004a4e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004a52:	6053      	str	r3, [r2, #4]
 8004a54:	6823      	ldr	r3, [r4, #0]
 8004a56:	681a      	ldr	r2, [r3, #0]
 8004a58:	f012 0f40 	tst.w	r2, #64	; 0x40
 8004a5c:	d103      	bne.n	8004a66 <HAL_SPI_TransmitReceive+0xb0>
 8004a5e:	681a      	ldr	r2, [r3, #0]
 8004a60:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004a64:	601a      	str	r2, [r3, #0]
 8004a66:	68e3      	ldr	r3, [r4, #12]
 8004a68:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004a6c:	d95c      	bls.n	8004b28 <HAL_SPI_TransmitReceive+0x172>
 8004a6e:	6863      	ldr	r3, [r4, #4]
 8004a70:	b10b      	cbz	r3, 8004a76 <HAL_SPI_TransmitReceive+0xc0>
 8004a72:	2f01      	cmp	r7, #1
 8004a74:	d10b      	bne.n	8004a8e <HAL_SPI_TransmitReceive+0xd8>
 8004a76:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8004a78:	6823      	ldr	r3, [r4, #0]
 8004a7a:	8812      	ldrh	r2, [r2, #0]
 8004a7c:	60da      	str	r2, [r3, #12]
 8004a7e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004a80:	3302      	adds	r3, #2
 8004a82:	63a3      	str	r3, [r4, #56]	; 0x38
 8004a84:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004a86:	b29b      	uxth	r3, r3
 8004a88:	3b01      	subs	r3, #1
 8004a8a:	b29b      	uxth	r3, r3
 8004a8c:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8004a8e:	2701      	movs	r7, #1
 8004a90:	e030      	b.n	8004af4 <HAL_SPI_TransmitReceive+0x13e>
 8004a92:	6822      	ldr	r2, [r4, #0]
 8004a94:	6853      	ldr	r3, [r2, #4]
 8004a96:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004a9a:	6053      	str	r3, [r2, #4]
 8004a9c:	e7da      	b.n	8004a54 <HAL_SPI_TransmitReceive+0x9e>
 8004a9e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8004aa0:	8812      	ldrh	r2, [r2, #0]
 8004aa2:	60da      	str	r2, [r3, #12]
 8004aa4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004aa6:	3302      	adds	r3, #2
 8004aa8:	63a3      	str	r3, [r4, #56]	; 0x38
 8004aaa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004aac:	b29b      	uxth	r3, r3
 8004aae:	3b01      	subs	r3, #1
 8004ab0:	b29b      	uxth	r3, r3
 8004ab2:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8004ab4:	2700      	movs	r7, #0
 8004ab6:	6823      	ldr	r3, [r4, #0]
 8004ab8:	689a      	ldr	r2, [r3, #8]
 8004aba:	f012 0f01 	tst.w	r2, #1
 8004abe:	d011      	beq.n	8004ae4 <HAL_SPI_TransmitReceive+0x12e>
 8004ac0:	f8b4 2046 	ldrh.w	r2, [r4, #70]	; 0x46
 8004ac4:	b292      	uxth	r2, r2
 8004ac6:	b16a      	cbz	r2, 8004ae4 <HAL_SPI_TransmitReceive+0x12e>
 8004ac8:	68da      	ldr	r2, [r3, #12]
 8004aca:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004acc:	801a      	strh	r2, [r3, #0]
 8004ace:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004ad0:	3302      	adds	r3, #2
 8004ad2:	6423      	str	r3, [r4, #64]	; 0x40
 8004ad4:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8004ad8:	b29b      	uxth	r3, r3
 8004ada:	3b01      	subs	r3, #1
 8004adc:	b29b      	uxth	r3, r3
 8004ade:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 8004ae2:	2701      	movs	r7, #1
 8004ae4:	f7fe fc54 	bl	8003390 <HAL_GetTick>
 8004ae8:	1b83      	subs	r3, r0, r6
 8004aea:	42ab      	cmp	r3, r5
 8004aec:	d302      	bcc.n	8004af4 <HAL_SPI_TransmitReceive+0x13e>
 8004aee:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 8004af2:	d114      	bne.n	8004b1e <HAL_SPI_TransmitReceive+0x168>
 8004af4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004af6:	b29b      	uxth	r3, r3
 8004af8:	b92b      	cbnz	r3, 8004b06 <HAL_SPI_TransmitReceive+0x150>
 8004afa:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8004afe:	b29b      	uxth	r3, r3
 8004b00:	2b00      	cmp	r3, #0
 8004b02:	f000 80ab 	beq.w	8004c5c <HAL_SPI_TransmitReceive+0x2a6>
 8004b06:	6823      	ldr	r3, [r4, #0]
 8004b08:	689a      	ldr	r2, [r3, #8]
 8004b0a:	f012 0f02 	tst.w	r2, #2
 8004b0e:	d0d2      	beq.n	8004ab6 <HAL_SPI_TransmitReceive+0x100>
 8004b10:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8004b12:	b292      	uxth	r2, r2
 8004b14:	2a00      	cmp	r2, #0
 8004b16:	d0ce      	beq.n	8004ab6 <HAL_SPI_TransmitReceive+0x100>
 8004b18:	2f00      	cmp	r7, #0
 8004b1a:	d0cc      	beq.n	8004ab6 <HAL_SPI_TransmitReceive+0x100>
 8004b1c:	e7bf      	b.n	8004a9e <HAL_SPI_TransmitReceive+0xe8>
 8004b1e:	2301      	movs	r3, #1
 8004b20:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8004b24:	2003      	movs	r0, #3
 8004b26:	e0a9      	b.n	8004c7c <HAL_SPI_TransmitReceive+0x2c6>
 8004b28:	6863      	ldr	r3, [r4, #4]
 8004b2a:	b10b      	cbz	r3, 8004b30 <HAL_SPI_TransmitReceive+0x17a>
 8004b2c:	2f01      	cmp	r7, #1
 8004b2e:	d10f      	bne.n	8004b50 <HAL_SPI_TransmitReceive+0x19a>
 8004b30:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004b32:	b29b      	uxth	r3, r3
 8004b34:	2b01      	cmp	r3, #1
 8004b36:	d90d      	bls.n	8004b54 <HAL_SPI_TransmitReceive+0x19e>
 8004b38:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8004b3a:	6823      	ldr	r3, [r4, #0]
 8004b3c:	8812      	ldrh	r2, [r2, #0]
 8004b3e:	60da      	str	r2, [r3, #12]
 8004b40:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004b42:	3302      	adds	r3, #2
 8004b44:	63a3      	str	r3, [r4, #56]	; 0x38
 8004b46:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004b48:	b29b      	uxth	r3, r3
 8004b4a:	3b02      	subs	r3, #2
 8004b4c:	b29b      	uxth	r3, r3
 8004b4e:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8004b50:	2701      	movs	r7, #1
 8004b52:	e049      	b.n	8004be8 <HAL_SPI_TransmitReceive+0x232>
 8004b54:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8004b56:	6823      	ldr	r3, [r4, #0]
 8004b58:	7812      	ldrb	r2, [r2, #0]
 8004b5a:	731a      	strb	r2, [r3, #12]
 8004b5c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004b5e:	3301      	adds	r3, #1
 8004b60:	63a3      	str	r3, [r4, #56]	; 0x38
 8004b62:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004b64:	b29b      	uxth	r3, r3
 8004b66:	3b01      	subs	r3, #1
 8004b68:	b29b      	uxth	r3, r3
 8004b6a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8004b6c:	e7f0      	b.n	8004b50 <HAL_SPI_TransmitReceive+0x19a>
 8004b6e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8004b70:	b292      	uxth	r2, r2
 8004b72:	2a01      	cmp	r2, #1
 8004b74:	d90c      	bls.n	8004b90 <HAL_SPI_TransmitReceive+0x1da>
 8004b76:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8004b78:	8812      	ldrh	r2, [r2, #0]
 8004b7a:	60da      	str	r2, [r3, #12]
 8004b7c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004b7e:	3302      	adds	r3, #2
 8004b80:	63a3      	str	r3, [r4, #56]	; 0x38
 8004b82:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004b84:	b29b      	uxth	r3, r3
 8004b86:	3b02      	subs	r3, #2
 8004b88:	b29b      	uxth	r3, r3
 8004b8a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8004b8c:	2700      	movs	r7, #0
 8004b8e:	e03d      	b.n	8004c0c <HAL_SPI_TransmitReceive+0x256>
 8004b90:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8004b92:	7812      	ldrb	r2, [r2, #0]
 8004b94:	731a      	strb	r2, [r3, #12]
 8004b96:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004b98:	3301      	adds	r3, #1
 8004b9a:	63a3      	str	r3, [r4, #56]	; 0x38
 8004b9c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004b9e:	b29b      	uxth	r3, r3
 8004ba0:	3b01      	subs	r3, #1
 8004ba2:	b29b      	uxth	r3, r3
 8004ba4:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8004ba6:	2700      	movs	r7, #0
 8004ba8:	e030      	b.n	8004c0c <HAL_SPI_TransmitReceive+0x256>
 8004baa:	6822      	ldr	r2, [r4, #0]
 8004bac:	6853      	ldr	r3, [r2, #4]
 8004bae:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004bb2:	6053      	str	r3, [r2, #4]
 8004bb4:	2701      	movs	r7, #1
 8004bb6:	e00d      	b.n	8004bd4 <HAL_SPI_TransmitReceive+0x21e>
 8004bb8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004bba:	7b1b      	ldrb	r3, [r3, #12]
 8004bbc:	7013      	strb	r3, [r2, #0]
 8004bbe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004bc0:	3301      	adds	r3, #1
 8004bc2:	6423      	str	r3, [r4, #64]	; 0x40
 8004bc4:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8004bc8:	b29b      	uxth	r3, r3
 8004bca:	3b01      	subs	r3, #1
 8004bcc:	b29b      	uxth	r3, r3
 8004bce:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 8004bd2:	2701      	movs	r7, #1
 8004bd4:	f7fe fbdc 	bl	8003390 <HAL_GetTick>
 8004bd8:	1b80      	subs	r0, r0, r6
 8004bda:	42a8      	cmp	r0, r5
 8004bdc:	d302      	bcc.n	8004be4 <HAL_SPI_TransmitReceive+0x22e>
 8004bde:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 8004be2:	d136      	bne.n	8004c52 <HAL_SPI_TransmitReceive+0x29c>
 8004be4:	2d00      	cmp	r5, #0
 8004be6:	d034      	beq.n	8004c52 <HAL_SPI_TransmitReceive+0x29c>
 8004be8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004bea:	b29b      	uxth	r3, r3
 8004bec:	b923      	cbnz	r3, 8004bf8 <HAL_SPI_TransmitReceive+0x242>
 8004bee:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8004bf2:	b29b      	uxth	r3, r3
 8004bf4:	2b00      	cmp	r3, #0
 8004bf6:	d031      	beq.n	8004c5c <HAL_SPI_TransmitReceive+0x2a6>
 8004bf8:	6823      	ldr	r3, [r4, #0]
 8004bfa:	689a      	ldr	r2, [r3, #8]
 8004bfc:	f012 0f02 	tst.w	r2, #2
 8004c00:	d004      	beq.n	8004c0c <HAL_SPI_TransmitReceive+0x256>
 8004c02:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8004c04:	b292      	uxth	r2, r2
 8004c06:	b10a      	cbz	r2, 8004c0c <HAL_SPI_TransmitReceive+0x256>
 8004c08:	2f00      	cmp	r7, #0
 8004c0a:	d1b0      	bne.n	8004b6e <HAL_SPI_TransmitReceive+0x1b8>
 8004c0c:	6823      	ldr	r3, [r4, #0]
 8004c0e:	689a      	ldr	r2, [r3, #8]
 8004c10:	f012 0f01 	tst.w	r2, #1
 8004c14:	d0de      	beq.n	8004bd4 <HAL_SPI_TransmitReceive+0x21e>
 8004c16:	f8b4 2046 	ldrh.w	r2, [r4, #70]	; 0x46
 8004c1a:	b292      	uxth	r2, r2
 8004c1c:	2a00      	cmp	r2, #0
 8004c1e:	d0d9      	beq.n	8004bd4 <HAL_SPI_TransmitReceive+0x21e>
 8004c20:	f8b4 2046 	ldrh.w	r2, [r4, #70]	; 0x46
 8004c24:	b292      	uxth	r2, r2
 8004c26:	2a01      	cmp	r2, #1
 8004c28:	d9c6      	bls.n	8004bb8 <HAL_SPI_TransmitReceive+0x202>
 8004c2a:	68da      	ldr	r2, [r3, #12]
 8004c2c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004c2e:	801a      	strh	r2, [r3, #0]
 8004c30:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004c32:	3302      	adds	r3, #2
 8004c34:	6423      	str	r3, [r4, #64]	; 0x40
 8004c36:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8004c3a:	b29b      	uxth	r3, r3
 8004c3c:	3b02      	subs	r3, #2
 8004c3e:	b29b      	uxth	r3, r3
 8004c40:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 8004c44:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8004c48:	b29b      	uxth	r3, r3
 8004c4a:	2b01      	cmp	r3, #1
 8004c4c:	d9ad      	bls.n	8004baa <HAL_SPI_TransmitReceive+0x1f4>
 8004c4e:	2701      	movs	r7, #1
 8004c50:	e7c0      	b.n	8004bd4 <HAL_SPI_TransmitReceive+0x21e>
 8004c52:	2301      	movs	r3, #1
 8004c54:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8004c58:	2003      	movs	r0, #3
 8004c5a:	e00f      	b.n	8004c7c <HAL_SPI_TransmitReceive+0x2c6>
 8004c5c:	4632      	mov	r2, r6
 8004c5e:	4629      	mov	r1, r5
 8004c60:	4620      	mov	r0, r4
 8004c62:	f7ff fcc3 	bl	80045ec <SPI_EndRxTxTransaction>
 8004c66:	b110      	cbz	r0, 8004c6e <HAL_SPI_TransmitReceive+0x2b8>
 8004c68:	2320      	movs	r3, #32
 8004c6a:	6623      	str	r3, [r4, #96]	; 0x60
 8004c6c:	2001      	movs	r0, #1
 8004c6e:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8004c70:	b99b      	cbnz	r3, 8004c9a <HAL_SPI_TransmitReceive+0x2e4>
 8004c72:	2301      	movs	r3, #1
 8004c74:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8004c78:	e000      	b.n	8004c7c <HAL_SPI_TransmitReceive+0x2c6>
 8004c7a:	2002      	movs	r0, #2
 8004c7c:	2300      	movs	r3, #0
 8004c7e:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
 8004c82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004c86:	2002      	movs	r0, #2
 8004c88:	e7f8      	b.n	8004c7c <HAL_SPI_TransmitReceive+0x2c6>
 8004c8a:	2002      	movs	r0, #2
 8004c8c:	e7f6      	b.n	8004c7c <HAL_SPI_TransmitReceive+0x2c6>
 8004c8e:	2001      	movs	r0, #1
 8004c90:	e7f4      	b.n	8004c7c <HAL_SPI_TransmitReceive+0x2c6>
 8004c92:	2001      	movs	r0, #1
 8004c94:	e7f2      	b.n	8004c7c <HAL_SPI_TransmitReceive+0x2c6>
 8004c96:	2001      	movs	r0, #1
 8004c98:	e7f0      	b.n	8004c7c <HAL_SPI_TransmitReceive+0x2c6>
 8004c9a:	2001      	movs	r0, #1
 8004c9c:	e7ee      	b.n	8004c7c <HAL_SPI_TransmitReceive+0x2c6>
 8004c9e:	2002      	movs	r0, #2
 8004ca0:	e7ef      	b.n	8004c82 <HAL_SPI_TransmitReceive+0x2cc>

08004ca2 <HAL_SPI_Receive>:
 8004ca2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004ca6:	b083      	sub	sp, #12
 8004ca8:	4604      	mov	r4, r0
 8004caa:	f890 605d 	ldrb.w	r6, [r0, #93]	; 0x5d
 8004cae:	b2f6      	uxtb	r6, r6
 8004cb0:	2e01      	cmp	r6, #1
 8004cb2:	f040 80c0 	bne.w	8004e36 <HAL_SPI_Receive+0x194>
 8004cb6:	4688      	mov	r8, r1
 8004cb8:	4691      	mov	r9, r2
 8004cba:	461d      	mov	r5, r3
 8004cbc:	6843      	ldr	r3, [r0, #4]
 8004cbe:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004cc2:	d03d      	beq.n	8004d40 <HAL_SPI_Receive+0x9e>
 8004cc4:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
 8004cc8:	2b01      	cmp	r3, #1
 8004cca:	f000 80bc 	beq.w	8004e46 <HAL_SPI_Receive+0x1a4>
 8004cce:	2301      	movs	r3, #1
 8004cd0:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
 8004cd4:	f7fe fb5c 	bl	8003390 <HAL_GetTick>
 8004cd8:	4607      	mov	r7, r0
 8004cda:	f1b8 0f00 	cmp.w	r8, #0
 8004cde:	f000 80ab 	beq.w	8004e38 <HAL_SPI_Receive+0x196>
 8004ce2:	f1b9 0f00 	cmp.w	r9, #0
 8004ce6:	f000 80a7 	beq.w	8004e38 <HAL_SPI_Receive+0x196>
 8004cea:	2304      	movs	r3, #4
 8004cec:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8004cf0:	2300      	movs	r3, #0
 8004cf2:	6623      	str	r3, [r4, #96]	; 0x60
 8004cf4:	f8c4 8040 	str.w	r8, [r4, #64]	; 0x40
 8004cf8:	f8a4 9044 	strh.w	r9, [r4, #68]	; 0x44
 8004cfc:	f8a4 9046 	strh.w	r9, [r4, #70]	; 0x46
 8004d00:	63a3      	str	r3, [r4, #56]	; 0x38
 8004d02:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8004d04:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8004d06:	64e3      	str	r3, [r4, #76]	; 0x4c
 8004d08:	6523      	str	r3, [r4, #80]	; 0x50
 8004d0a:	68e3      	ldr	r3, [r4, #12]
 8004d0c:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004d10:	d923      	bls.n	8004d5a <HAL_SPI_Receive+0xb8>
 8004d12:	6822      	ldr	r2, [r4, #0]
 8004d14:	6853      	ldr	r3, [r2, #4]
 8004d16:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004d1a:	6053      	str	r3, [r2, #4]
 8004d1c:	68a3      	ldr	r3, [r4, #8]
 8004d1e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004d22:	d020      	beq.n	8004d66 <HAL_SPI_Receive+0xc4>
 8004d24:	6823      	ldr	r3, [r4, #0]
 8004d26:	681a      	ldr	r2, [r3, #0]
 8004d28:	f012 0f40 	tst.w	r2, #64	; 0x40
 8004d2c:	d103      	bne.n	8004d36 <HAL_SPI_Receive+0x94>
 8004d2e:	681a      	ldr	r2, [r3, #0]
 8004d30:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004d34:	601a      	str	r2, [r3, #0]
 8004d36:	68e3      	ldr	r3, [r4, #12]
 8004d38:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004d3c:	d927      	bls.n	8004d8e <HAL_SPI_Receive+0xec>
 8004d3e:	e04c      	b.n	8004dda <HAL_SPI_Receive+0x138>
 8004d40:	6883      	ldr	r3, [r0, #8]
 8004d42:	2b00      	cmp	r3, #0
 8004d44:	d1be      	bne.n	8004cc4 <HAL_SPI_Receive+0x22>
 8004d46:	2304      	movs	r3, #4
 8004d48:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
 8004d4c:	9500      	str	r5, [sp, #0]
 8004d4e:	4613      	mov	r3, r2
 8004d50:	460a      	mov	r2, r1
 8004d52:	f7ff fe30 	bl	80049b6 <HAL_SPI_TransmitReceive>
 8004d56:	4606      	mov	r6, r0
 8004d58:	e071      	b.n	8004e3e <HAL_SPI_Receive+0x19c>
 8004d5a:	6822      	ldr	r2, [r4, #0]
 8004d5c:	6853      	ldr	r3, [r2, #4]
 8004d5e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004d62:	6053      	str	r3, [r2, #4]
 8004d64:	e7da      	b.n	8004d1c <HAL_SPI_Receive+0x7a>
 8004d66:	6822      	ldr	r2, [r4, #0]
 8004d68:	6813      	ldr	r3, [r2, #0]
 8004d6a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004d6e:	6013      	str	r3, [r2, #0]
 8004d70:	6822      	ldr	r2, [r4, #0]
 8004d72:	6813      	ldr	r3, [r2, #0]
 8004d74:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004d78:	6013      	str	r3, [r2, #0]
 8004d7a:	e7d3      	b.n	8004d24 <HAL_SPI_Receive+0x82>
 8004d7c:	f7fe fb08 	bl	8003390 <HAL_GetTick>
 8004d80:	1bc0      	subs	r0, r0, r7
 8004d82:	42a8      	cmp	r0, r5
 8004d84:	d302      	bcc.n	8004d8c <HAL_SPI_Receive+0xea>
 8004d86:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 8004d8a:	d118      	bne.n	8004dbe <HAL_SPI_Receive+0x11c>
 8004d8c:	b1bd      	cbz	r5, 8004dbe <HAL_SPI_Receive+0x11c>
 8004d8e:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8004d92:	b29b      	uxth	r3, r3
 8004d94:	2b00      	cmp	r3, #0
 8004d96:	d03f      	beq.n	8004e18 <HAL_SPI_Receive+0x176>
 8004d98:	6823      	ldr	r3, [r4, #0]
 8004d9a:	689a      	ldr	r2, [r3, #8]
 8004d9c:	f012 0f01 	tst.w	r2, #1
 8004da0:	d0ec      	beq.n	8004d7c <HAL_SPI_Receive+0xda>
 8004da2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004da4:	7b1b      	ldrb	r3, [r3, #12]
 8004da6:	7013      	strb	r3, [r2, #0]
 8004da8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004daa:	3301      	adds	r3, #1
 8004dac:	6423      	str	r3, [r4, #64]	; 0x40
 8004dae:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8004db2:	b29b      	uxth	r3, r3
 8004db4:	3b01      	subs	r3, #1
 8004db6:	b29b      	uxth	r3, r3
 8004db8:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 8004dbc:	e7e7      	b.n	8004d8e <HAL_SPI_Receive+0xec>
 8004dbe:	2301      	movs	r3, #1
 8004dc0:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8004dc4:	2603      	movs	r6, #3
 8004dc6:	e037      	b.n	8004e38 <HAL_SPI_Receive+0x196>
 8004dc8:	f7fe fae2 	bl	8003390 <HAL_GetTick>
 8004dcc:	1bc0      	subs	r0, r0, r7
 8004dce:	42a8      	cmp	r0, r5
 8004dd0:	d302      	bcc.n	8004dd8 <HAL_SPI_Receive+0x136>
 8004dd2:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 8004dd6:	d11a      	bne.n	8004e0e <HAL_SPI_Receive+0x16c>
 8004dd8:	b1cd      	cbz	r5, 8004e0e <HAL_SPI_Receive+0x16c>
 8004dda:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8004dde:	b29b      	uxth	r3, r3
 8004de0:	b1d3      	cbz	r3, 8004e18 <HAL_SPI_Receive+0x176>
 8004de2:	6823      	ldr	r3, [r4, #0]
 8004de4:	689a      	ldr	r2, [r3, #8]
 8004de6:	f012 0f01 	tst.w	r2, #1
 8004dea:	d0ed      	beq.n	8004dc8 <HAL_SPI_Receive+0x126>
 8004dec:	68da      	ldr	r2, [r3, #12]
 8004dee:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004df0:	801a      	strh	r2, [r3, #0]
 8004df2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004df4:	3302      	adds	r3, #2
 8004df6:	6423      	str	r3, [r4, #64]	; 0x40
 8004df8:	f8b4 c046 	ldrh.w	ip, [r4, #70]	; 0x46
 8004dfc:	fa1f fc8c 	uxth.w	ip, ip
 8004e00:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
 8004e04:	fa1f fc8c 	uxth.w	ip, ip
 8004e08:	f8a4 c046 	strh.w	ip, [r4, #70]	; 0x46
 8004e0c:	e7e5      	b.n	8004dda <HAL_SPI_Receive+0x138>
 8004e0e:	2301      	movs	r3, #1
 8004e10:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8004e14:	2603      	movs	r6, #3
 8004e16:	e00f      	b.n	8004e38 <HAL_SPI_Receive+0x196>
 8004e18:	463a      	mov	r2, r7
 8004e1a:	4629      	mov	r1, r5
 8004e1c:	4620      	mov	r0, r4
 8004e1e:	f7ff fc16 	bl	800464e <SPI_EndRxTransaction>
 8004e22:	b108      	cbz	r0, 8004e28 <HAL_SPI_Receive+0x186>
 8004e24:	2320      	movs	r3, #32
 8004e26:	6623      	str	r3, [r4, #96]	; 0x60
 8004e28:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8004e2a:	b92b      	cbnz	r3, 8004e38 <HAL_SPI_Receive+0x196>
 8004e2c:	2301      	movs	r3, #1
 8004e2e:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 8004e32:	2600      	movs	r6, #0
 8004e34:	e000      	b.n	8004e38 <HAL_SPI_Receive+0x196>
 8004e36:	2602      	movs	r6, #2
 8004e38:	2300      	movs	r3, #0
 8004e3a:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
 8004e3e:	4630      	mov	r0, r6
 8004e40:	b003      	add	sp, #12
 8004e42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004e46:	2602      	movs	r6, #2
 8004e48:	e7f9      	b.n	8004e3e <HAL_SPI_Receive+0x19c>

08004e4a <HAL_SPI_GetState>:
 8004e4a:	f890 005d 	ldrb.w	r0, [r0, #93]	; 0x5d
 8004e4e:	4770      	bx	lr

08004e50 <TIM_TI1_ConfigInputStage>:
 8004e50:	b410      	push	{r4}
 8004e52:	6a03      	ldr	r3, [r0, #32]
 8004e54:	6a04      	ldr	r4, [r0, #32]
 8004e56:	f024 0401 	bic.w	r4, r4, #1
 8004e5a:	6204      	str	r4, [r0, #32]
 8004e5c:	6984      	ldr	r4, [r0, #24]
 8004e5e:	f024 0cf0 	bic.w	ip, r4, #240	; 0xf0
 8004e62:	ea4c 1202 	orr.w	r2, ip, r2, lsl #4
 8004e66:	f023 030a 	bic.w	r3, r3, #10
 8004e6a:	430b      	orrs	r3, r1
 8004e6c:	6182      	str	r2, [r0, #24]
 8004e6e:	6203      	str	r3, [r0, #32]
 8004e70:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004e74:	4770      	bx	lr

08004e76 <TIM_TI2_ConfigInputStage>:
 8004e76:	b410      	push	{r4}
 8004e78:	6a03      	ldr	r3, [r0, #32]
 8004e7a:	6a04      	ldr	r4, [r0, #32]
 8004e7c:	f024 0410 	bic.w	r4, r4, #16
 8004e80:	6204      	str	r4, [r0, #32]
 8004e82:	6984      	ldr	r4, [r0, #24]
 8004e84:	f424 4c70 	bic.w	ip, r4, #61440	; 0xf000
 8004e88:	ea4c 3202 	orr.w	r2, ip, r2, lsl #12
 8004e8c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8004e90:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8004e94:	6182      	str	r2, [r0, #24]
 8004e96:	6203      	str	r3, [r0, #32]
 8004e98:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004e9c:	4770      	bx	lr

08004e9e <TIM_ITRx_SetConfig>:
 8004e9e:	6883      	ldr	r3, [r0, #8]
 8004ea0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004ea4:	430b      	orrs	r3, r1
 8004ea6:	f043 0307 	orr.w	r3, r3, #7
 8004eaa:	6083      	str	r3, [r0, #8]
 8004eac:	4770      	bx	lr
	...

08004eb0 <TIM_Base_SetConfig>:
 8004eb0:	6803      	ldr	r3, [r0, #0]
 8004eb2:	4a30      	ldr	r2, [pc, #192]	; (8004f74 <TIM_Base_SetConfig+0xc4>)
 8004eb4:	4290      	cmp	r0, r2
 8004eb6:	d00e      	beq.n	8004ed6 <TIM_Base_SetConfig+0x26>
 8004eb8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004ebc:	d00b      	beq.n	8004ed6 <TIM_Base_SetConfig+0x26>
 8004ebe:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8004ec2:	4290      	cmp	r0, r2
 8004ec4:	d007      	beq.n	8004ed6 <TIM_Base_SetConfig+0x26>
 8004ec6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004eca:	4290      	cmp	r0, r2
 8004ecc:	d003      	beq.n	8004ed6 <TIM_Base_SetConfig+0x26>
 8004ece:	f502 3296 	add.w	r2, r2, #76800	; 0x12c00
 8004ed2:	4290      	cmp	r0, r2
 8004ed4:	d103      	bne.n	8004ede <TIM_Base_SetConfig+0x2e>
 8004ed6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004eda:	684a      	ldr	r2, [r1, #4]
 8004edc:	4313      	orrs	r3, r2
 8004ede:	4a25      	ldr	r2, [pc, #148]	; (8004f74 <TIM_Base_SetConfig+0xc4>)
 8004ee0:	4290      	cmp	r0, r2
 8004ee2:	d01a      	beq.n	8004f1a <TIM_Base_SetConfig+0x6a>
 8004ee4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004ee8:	d017      	beq.n	8004f1a <TIM_Base_SetConfig+0x6a>
 8004eea:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8004eee:	4290      	cmp	r0, r2
 8004ef0:	d013      	beq.n	8004f1a <TIM_Base_SetConfig+0x6a>
 8004ef2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004ef6:	4290      	cmp	r0, r2
 8004ef8:	d00f      	beq.n	8004f1a <TIM_Base_SetConfig+0x6a>
 8004efa:	f502 3296 	add.w	r2, r2, #76800	; 0x12c00
 8004efe:	4290      	cmp	r0, r2
 8004f00:	d00b      	beq.n	8004f1a <TIM_Base_SetConfig+0x6a>
 8004f02:	f502 6240 	add.w	r2, r2, #3072	; 0xc00
 8004f06:	4290      	cmp	r0, r2
 8004f08:	d007      	beq.n	8004f1a <TIM_Base_SetConfig+0x6a>
 8004f0a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004f0e:	4290      	cmp	r0, r2
 8004f10:	d003      	beq.n	8004f1a <TIM_Base_SetConfig+0x6a>
 8004f12:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004f16:	4290      	cmp	r0, r2
 8004f18:	d103      	bne.n	8004f22 <TIM_Base_SetConfig+0x72>
 8004f1a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004f1e:	68ca      	ldr	r2, [r1, #12]
 8004f20:	4313      	orrs	r3, r2
 8004f22:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004f26:	694a      	ldr	r2, [r1, #20]
 8004f28:	4313      	orrs	r3, r2
 8004f2a:	6003      	str	r3, [r0, #0]
 8004f2c:	688b      	ldr	r3, [r1, #8]
 8004f2e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004f30:	680b      	ldr	r3, [r1, #0]
 8004f32:	6283      	str	r3, [r0, #40]	; 0x28
 8004f34:	4b0f      	ldr	r3, [pc, #60]	; (8004f74 <TIM_Base_SetConfig+0xc4>)
 8004f36:	4298      	cmp	r0, r3
 8004f38:	d00f      	beq.n	8004f5a <TIM_Base_SetConfig+0xaa>
 8004f3a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004f3e:	4298      	cmp	r0, r3
 8004f40:	d00b      	beq.n	8004f5a <TIM_Base_SetConfig+0xaa>
 8004f42:	f503 6340 	add.w	r3, r3, #3072	; 0xc00
 8004f46:	4298      	cmp	r0, r3
 8004f48:	d007      	beq.n	8004f5a <TIM_Base_SetConfig+0xaa>
 8004f4a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004f4e:	4298      	cmp	r0, r3
 8004f50:	d003      	beq.n	8004f5a <TIM_Base_SetConfig+0xaa>
 8004f52:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004f56:	4298      	cmp	r0, r3
 8004f58:	d101      	bne.n	8004f5e <TIM_Base_SetConfig+0xae>
 8004f5a:	690b      	ldr	r3, [r1, #16]
 8004f5c:	6303      	str	r3, [r0, #48]	; 0x30
 8004f5e:	2301      	movs	r3, #1
 8004f60:	6143      	str	r3, [r0, #20]
 8004f62:	6903      	ldr	r3, [r0, #16]
 8004f64:	f013 0f01 	tst.w	r3, #1
 8004f68:	d003      	beq.n	8004f72 <TIM_Base_SetConfig+0xc2>
 8004f6a:	6903      	ldr	r3, [r0, #16]
 8004f6c:	f023 0301 	bic.w	r3, r3, #1
 8004f70:	6103      	str	r3, [r0, #16]
 8004f72:	4770      	bx	lr
 8004f74:	40012c00 	.word	0x40012c00

08004f78 <HAL_TIM_Base_Init>:
 8004f78:	b360      	cbz	r0, 8004fd4 <HAL_TIM_Base_Init+0x5c>
 8004f7a:	b510      	push	{r4, lr}
 8004f7c:	4604      	mov	r4, r0
 8004f7e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004f82:	b313      	cbz	r3, 8004fca <HAL_TIM_Base_Init+0x52>
 8004f84:	2302      	movs	r3, #2
 8004f86:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004f8a:	4621      	mov	r1, r4
 8004f8c:	f851 0b04 	ldr.w	r0, [r1], #4
 8004f90:	f7ff ff8e 	bl	8004eb0 <TIM_Base_SetConfig>
 8004f94:	2301      	movs	r3, #1
 8004f96:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 8004f9a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8004f9e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8004fa2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8004fa6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 8004faa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004fae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004fb2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8004fb6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004fba:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 8004fbe:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
 8004fc2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004fc6:	2000      	movs	r0, #0
 8004fc8:	bd10      	pop	{r4, pc}
 8004fca:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 8004fce:	f000 fecb 	bl	8005d68 <HAL_TIM_Base_MspInit>
 8004fd2:	e7d7      	b.n	8004f84 <HAL_TIM_Base_Init+0xc>
 8004fd4:	2001      	movs	r0, #1
 8004fd6:	4770      	bx	lr

08004fd8 <TIM_ETR_SetConfig>:
 8004fd8:	b410      	push	{r4}
 8004fda:	6884      	ldr	r4, [r0, #8]
 8004fdc:	f424 4c7f 	bic.w	ip, r4, #65280	; 0xff00
 8004fe0:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 8004fe4:	430a      	orrs	r2, r1
 8004fe6:	ea42 020c 	orr.w	r2, r2, ip
 8004fea:	6082      	str	r2, [r0, #8]
 8004fec:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004ff0:	4770      	bx	lr
	...

08004ff4 <HAL_TIM_ConfigClockSource>:
 8004ff4:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8004ff8:	2b01      	cmp	r3, #1
 8004ffa:	d076      	beq.n	80050ea <HAL_TIM_ConfigClockSource+0xf6>
 8004ffc:	b510      	push	{r4, lr}
 8004ffe:	4604      	mov	r4, r0
 8005000:	2301      	movs	r3, #1
 8005002:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 8005006:	2302      	movs	r3, #2
 8005008:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
 800500c:	6802      	ldr	r2, [r0, #0]
 800500e:	6890      	ldr	r0, [r2, #8]
 8005010:	4b37      	ldr	r3, [pc, #220]	; (80050f0 <HAL_TIM_ConfigClockSource+0xfc>)
 8005012:	4003      	ands	r3, r0
 8005014:	6093      	str	r3, [r2, #8]
 8005016:	680b      	ldr	r3, [r1, #0]
 8005018:	2b60      	cmp	r3, #96	; 0x60
 800501a:	d04c      	beq.n	80050b6 <HAL_TIM_ConfigClockSource+0xc2>
 800501c:	d829      	bhi.n	8005072 <HAL_TIM_ConfigClockSource+0x7e>
 800501e:	2b40      	cmp	r3, #64	; 0x40
 8005020:	d054      	beq.n	80050cc <HAL_TIM_ConfigClockSource+0xd8>
 8005022:	d90c      	bls.n	800503e <HAL_TIM_ConfigClockSource+0x4a>
 8005024:	2b50      	cmp	r3, #80	; 0x50
 8005026:	d122      	bne.n	800506e <HAL_TIM_ConfigClockSource+0x7a>
 8005028:	68ca      	ldr	r2, [r1, #12]
 800502a:	6849      	ldr	r1, [r1, #4]
 800502c:	6820      	ldr	r0, [r4, #0]
 800502e:	f7ff ff0f 	bl	8004e50 <TIM_TI1_ConfigInputStage>
 8005032:	2150      	movs	r1, #80	; 0x50
 8005034:	6820      	ldr	r0, [r4, #0]
 8005036:	f7ff ff32 	bl	8004e9e <TIM_ITRx_SetConfig>
 800503a:	2000      	movs	r0, #0
 800503c:	e005      	b.n	800504a <HAL_TIM_ConfigClockSource+0x56>
 800503e:	2b20      	cmp	r3, #32
 8005040:	d00d      	beq.n	800505e <HAL_TIM_ConfigClockSource+0x6a>
 8005042:	d909      	bls.n	8005058 <HAL_TIM_ConfigClockSource+0x64>
 8005044:	2b30      	cmp	r3, #48	; 0x30
 8005046:	d00a      	beq.n	800505e <HAL_TIM_ConfigClockSource+0x6a>
 8005048:	2001      	movs	r0, #1
 800504a:	2301      	movs	r3, #1
 800504c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8005050:	2300      	movs	r3, #0
 8005052:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8005056:	bd10      	pop	{r4, pc}
 8005058:	b10b      	cbz	r3, 800505e <HAL_TIM_ConfigClockSource+0x6a>
 800505a:	2b10      	cmp	r3, #16
 800505c:	d105      	bne.n	800506a <HAL_TIM_ConfigClockSource+0x76>
 800505e:	4619      	mov	r1, r3
 8005060:	6820      	ldr	r0, [r4, #0]
 8005062:	f7ff ff1c 	bl	8004e9e <TIM_ITRx_SetConfig>
 8005066:	2000      	movs	r0, #0
 8005068:	e7ef      	b.n	800504a <HAL_TIM_ConfigClockSource+0x56>
 800506a:	2001      	movs	r0, #1
 800506c:	e7ed      	b.n	800504a <HAL_TIM_ConfigClockSource+0x56>
 800506e:	2001      	movs	r0, #1
 8005070:	e7eb      	b.n	800504a <HAL_TIM_ConfigClockSource+0x56>
 8005072:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005076:	d034      	beq.n	80050e2 <HAL_TIM_ConfigClockSource+0xee>
 8005078:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800507c:	d10c      	bne.n	8005098 <HAL_TIM_ConfigClockSource+0xa4>
 800507e:	68cb      	ldr	r3, [r1, #12]
 8005080:	684a      	ldr	r2, [r1, #4]
 8005082:	6889      	ldr	r1, [r1, #8]
 8005084:	6820      	ldr	r0, [r4, #0]
 8005086:	f7ff ffa7 	bl	8004fd8 <TIM_ETR_SetConfig>
 800508a:	6822      	ldr	r2, [r4, #0]
 800508c:	6893      	ldr	r3, [r2, #8]
 800508e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005092:	6093      	str	r3, [r2, #8]
 8005094:	2000      	movs	r0, #0
 8005096:	e7d8      	b.n	800504a <HAL_TIM_ConfigClockSource+0x56>
 8005098:	2b70      	cmp	r3, #112	; 0x70
 800509a:	d124      	bne.n	80050e6 <HAL_TIM_ConfigClockSource+0xf2>
 800509c:	68cb      	ldr	r3, [r1, #12]
 800509e:	684a      	ldr	r2, [r1, #4]
 80050a0:	6889      	ldr	r1, [r1, #8]
 80050a2:	6820      	ldr	r0, [r4, #0]
 80050a4:	f7ff ff98 	bl	8004fd8 <TIM_ETR_SetConfig>
 80050a8:	6822      	ldr	r2, [r4, #0]
 80050aa:	6893      	ldr	r3, [r2, #8]
 80050ac:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80050b0:	6093      	str	r3, [r2, #8]
 80050b2:	2000      	movs	r0, #0
 80050b4:	e7c9      	b.n	800504a <HAL_TIM_ConfigClockSource+0x56>
 80050b6:	68ca      	ldr	r2, [r1, #12]
 80050b8:	6849      	ldr	r1, [r1, #4]
 80050ba:	6820      	ldr	r0, [r4, #0]
 80050bc:	f7ff fedb 	bl	8004e76 <TIM_TI2_ConfigInputStage>
 80050c0:	2160      	movs	r1, #96	; 0x60
 80050c2:	6820      	ldr	r0, [r4, #0]
 80050c4:	f7ff feeb 	bl	8004e9e <TIM_ITRx_SetConfig>
 80050c8:	2000      	movs	r0, #0
 80050ca:	e7be      	b.n	800504a <HAL_TIM_ConfigClockSource+0x56>
 80050cc:	68ca      	ldr	r2, [r1, #12]
 80050ce:	6849      	ldr	r1, [r1, #4]
 80050d0:	6820      	ldr	r0, [r4, #0]
 80050d2:	f7ff febd 	bl	8004e50 <TIM_TI1_ConfigInputStage>
 80050d6:	2140      	movs	r1, #64	; 0x40
 80050d8:	6820      	ldr	r0, [r4, #0]
 80050da:	f7ff fee0 	bl	8004e9e <TIM_ITRx_SetConfig>
 80050de:	2000      	movs	r0, #0
 80050e0:	e7b3      	b.n	800504a <HAL_TIM_ConfigClockSource+0x56>
 80050e2:	2000      	movs	r0, #0
 80050e4:	e7b1      	b.n	800504a <HAL_TIM_ConfigClockSource+0x56>
 80050e6:	2001      	movs	r0, #1
 80050e8:	e7af      	b.n	800504a <HAL_TIM_ConfigClockSource+0x56>
 80050ea:	2002      	movs	r0, #2
 80050ec:	4770      	bx	lr
 80050ee:	bf00      	nop
 80050f0:	fffe0088 	.word	0xfffe0088

080050f4 <HAL_TIMEx_MasterConfigSynchronization>:
 80050f4:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80050f8:	2b01      	cmp	r3, #1
 80050fa:	d03e      	beq.n	800517a <HAL_TIMEx_MasterConfigSynchronization+0x86>
 80050fc:	b430      	push	{r4, r5}
 80050fe:	2301      	movs	r3, #1
 8005100:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 8005104:	2302      	movs	r3, #2
 8005106:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
 800510a:	6802      	ldr	r2, [r0, #0]
 800510c:	6853      	ldr	r3, [r2, #4]
 800510e:	6894      	ldr	r4, [r2, #8]
 8005110:	4d1b      	ldr	r5, [pc, #108]	; (8005180 <HAL_TIMEx_MasterConfigSynchronization+0x8c>)
 8005112:	42aa      	cmp	r2, r5
 8005114:	d003      	beq.n	800511e <HAL_TIMEx_MasterConfigSynchronization+0x2a>
 8005116:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 800511a:	42aa      	cmp	r2, r5
 800511c:	d103      	bne.n	8005126 <HAL_TIMEx_MasterConfigSynchronization+0x32>
 800511e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8005122:	684d      	ldr	r5, [r1, #4]
 8005124:	432b      	orrs	r3, r5
 8005126:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800512a:	680d      	ldr	r5, [r1, #0]
 800512c:	432b      	orrs	r3, r5
 800512e:	6053      	str	r3, [r2, #4]
 8005130:	6803      	ldr	r3, [r0, #0]
 8005132:	4a13      	ldr	r2, [pc, #76]	; (8005180 <HAL_TIMEx_MasterConfigSynchronization+0x8c>)
 8005134:	4293      	cmp	r3, r2
 8005136:	d012      	beq.n	800515e <HAL_TIMEx_MasterConfigSynchronization+0x6a>
 8005138:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800513c:	d00f      	beq.n	800515e <HAL_TIMEx_MasterConfigSynchronization+0x6a>
 800513e:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8005142:	4293      	cmp	r3, r2
 8005144:	d00b      	beq.n	800515e <HAL_TIMEx_MasterConfigSynchronization+0x6a>
 8005146:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800514a:	4293      	cmp	r3, r2
 800514c:	d007      	beq.n	800515e <HAL_TIMEx_MasterConfigSynchronization+0x6a>
 800514e:	f502 3296 	add.w	r2, r2, #76800	; 0x12c00
 8005152:	4293      	cmp	r3, r2
 8005154:	d003      	beq.n	800515e <HAL_TIMEx_MasterConfigSynchronization+0x6a>
 8005156:	f502 6240 	add.w	r2, r2, #3072	; 0xc00
 800515a:	4293      	cmp	r3, r2
 800515c:	d104      	bne.n	8005168 <HAL_TIMEx_MasterConfigSynchronization+0x74>
 800515e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8005162:	688a      	ldr	r2, [r1, #8]
 8005164:	4314      	orrs	r4, r2
 8005166:	609c      	str	r4, [r3, #8]
 8005168:	2301      	movs	r3, #1
 800516a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
 800516e:	2300      	movs	r3, #0
 8005170:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 8005174:	4618      	mov	r0, r3
 8005176:	bc30      	pop	{r4, r5}
 8005178:	4770      	bx	lr
 800517a:	2002      	movs	r0, #2
 800517c:	4770      	bx	lr
 800517e:	bf00      	nop
 8005180:	40012c00 	.word	0x40012c00

08005184 <UART_EndTxTransfer>:
 8005184:	6802      	ldr	r2, [r0, #0]
 8005186:	e852 3f00 	ldrex	r3, [r2]
 800518a:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800518e:	e842 3100 	strex	r1, r3, [r2]
 8005192:	2900      	cmp	r1, #0
 8005194:	d1f6      	bne.n	8005184 <UART_EndTxTransfer>
 8005196:	2320      	movs	r3, #32
 8005198:	67c3      	str	r3, [r0, #124]	; 0x7c
 800519a:	4770      	bx	lr

0800519c <UART_EndRxTransfer>:
 800519c:	6802      	ldr	r2, [r0, #0]
 800519e:	e852 3f00 	ldrex	r3, [r2]
 80051a2:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80051a6:	e842 3100 	strex	r1, r3, [r2]
 80051aa:	2900      	cmp	r1, #0
 80051ac:	d1f6      	bne.n	800519c <UART_EndRxTransfer>
 80051ae:	6802      	ldr	r2, [r0, #0]
 80051b0:	f102 0308 	add.w	r3, r2, #8
 80051b4:	e853 3f00 	ldrex	r3, [r3]
 80051b8:	f023 0301 	bic.w	r3, r3, #1
 80051bc:	3208      	adds	r2, #8
 80051be:	e842 3100 	strex	r1, r3, [r2]
 80051c2:	2900      	cmp	r1, #0
 80051c4:	d1f3      	bne.n	80051ae <UART_EndRxTransfer+0x12>
 80051c6:	6e03      	ldr	r3, [r0, #96]	; 0x60
 80051c8:	2b01      	cmp	r3, #1
 80051ca:	d006      	beq.n	80051da <UART_EndRxTransfer+0x3e>
 80051cc:	2320      	movs	r3, #32
 80051ce:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80
 80051d2:	2300      	movs	r3, #0
 80051d4:	6603      	str	r3, [r0, #96]	; 0x60
 80051d6:	6683      	str	r3, [r0, #104]	; 0x68
 80051d8:	4770      	bx	lr
 80051da:	6802      	ldr	r2, [r0, #0]
 80051dc:	e852 3f00 	ldrex	r3, [r2]
 80051e0:	f023 0310 	bic.w	r3, r3, #16
 80051e4:	e842 3100 	strex	r1, r3, [r2]
 80051e8:	2900      	cmp	r1, #0
 80051ea:	d1f6      	bne.n	80051da <UART_EndRxTransfer+0x3e>
 80051ec:	e7ee      	b.n	80051cc <UART_EndRxTransfer+0x30>

080051ee <HAL_UART_TxCpltCallback>:
 80051ee:	4770      	bx	lr

080051f0 <UART_EndTransmit_IT>:
 80051f0:	b508      	push	{r3, lr}
 80051f2:	6802      	ldr	r2, [r0, #0]
 80051f4:	e852 3f00 	ldrex	r3, [r2]
 80051f8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80051fc:	e842 3100 	strex	r1, r3, [r2]
 8005200:	2900      	cmp	r1, #0
 8005202:	d1f6      	bne.n	80051f2 <UART_EndTransmit_IT+0x2>
 8005204:	2320      	movs	r3, #32
 8005206:	67c3      	str	r3, [r0, #124]	; 0x7c
 8005208:	2300      	movs	r3, #0
 800520a:	66c3      	str	r3, [r0, #108]	; 0x6c
 800520c:	f7ff ffef 	bl	80051ee <HAL_UART_TxCpltCallback>
 8005210:	bd08      	pop	{r3, pc}

08005212 <HAL_UART_RxHalfCpltCallback>:
 8005212:	4770      	bx	lr

08005214 <HAL_UART_ErrorCallback>:
 8005214:	4770      	bx	lr

08005216 <UART_DMAError>:
 8005216:	b538      	push	{r3, r4, r5, lr}
 8005218:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800521a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 800521c:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80
 8005220:	6823      	ldr	r3, [r4, #0]
 8005222:	689b      	ldr	r3, [r3, #8]
 8005224:	f013 0f80 	tst.w	r3, #128	; 0x80
 8005228:	d001      	beq.n	800522e <UART_DMAError+0x18>
 800522a:	2a21      	cmp	r2, #33	; 0x21
 800522c:	d010      	beq.n	8005250 <UART_DMAError+0x3a>
 800522e:	6823      	ldr	r3, [r4, #0]
 8005230:	689b      	ldr	r3, [r3, #8]
 8005232:	f013 0f40 	tst.w	r3, #64	; 0x40
 8005236:	d001      	beq.n	800523c <UART_DMAError+0x26>
 8005238:	2d22      	cmp	r5, #34	; 0x22
 800523a:	d010      	beq.n	800525e <UART_DMAError+0x48>
 800523c:	f8d4 3084 	ldr.w	r3, [r4, #132]	; 0x84
 8005240:	f043 0310 	orr.w	r3, r3, #16
 8005244:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8005248:	4620      	mov	r0, r4
 800524a:	f7ff ffe3 	bl	8005214 <HAL_UART_ErrorCallback>
 800524e:	bd38      	pop	{r3, r4, r5, pc}
 8005250:	2300      	movs	r3, #0
 8005252:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8005256:	4620      	mov	r0, r4
 8005258:	f7ff ff94 	bl	8005184 <UART_EndTxTransfer>
 800525c:	e7e7      	b.n	800522e <UART_DMAError+0x18>
 800525e:	2300      	movs	r3, #0
 8005260:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8005264:	4620      	mov	r0, r4
 8005266:	f7ff ff99 	bl	800519c <UART_EndRxTransfer>
 800526a:	e7e7      	b.n	800523c <UART_DMAError+0x26>

0800526c <UART_DMAAbortOnError>:
 800526c:	b508      	push	{r3, lr}
 800526e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005270:	2300      	movs	r3, #0
 8005272:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8005276:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800527a:	f7ff ffcb 	bl	8005214 <HAL_UART_ErrorCallback>
 800527e:	bd08      	pop	{r3, pc}

08005280 <HAL_UARTEx_RxEventCallback>:
 8005280:	4770      	bx	lr
	...

08005284 <HAL_UART_IRQHandler>:
 8005284:	b570      	push	{r4, r5, r6, lr}
 8005286:	4604      	mov	r4, r0
 8005288:	6801      	ldr	r1, [r0, #0]
 800528a:	69cb      	ldr	r3, [r1, #28]
 800528c:	6808      	ldr	r0, [r1, #0]
 800528e:	688d      	ldr	r5, [r1, #8]
 8005290:	f640 020f 	movw	r2, #2063	; 0x80f
 8005294:	401a      	ands	r2, r3
 8005296:	d105      	bne.n	80052a4 <HAL_UART_IRQHandler+0x20>
 8005298:	f013 0f20 	tst.w	r3, #32
 800529c:	d002      	beq.n	80052a4 <HAL_UART_IRQHandler+0x20>
 800529e:	f010 0f20 	tst.w	r0, #32
 80052a2:	d120      	bne.n	80052e6 <HAL_UART_IRQHandler+0x62>
 80052a4:	b12a      	cbz	r2, 80052b2 <HAL_UART_IRQHandler+0x2e>
 80052a6:	f015 0201 	ands.w	r2, r5, #1
 80052aa:	d122      	bne.n	80052f2 <HAL_UART_IRQHandler+0x6e>
 80052ac:	4eae      	ldr	r6, [pc, #696]	; (8005568 <HAL_UART_IRQHandler+0x2e4>)
 80052ae:	4230      	tst	r0, r6
 80052b0:	d11f      	bne.n	80052f2 <HAL_UART_IRQHandler+0x6e>
 80052b2:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80052b4:	2a01      	cmp	r2, #1
 80052b6:	f000 80ab 	beq.w	8005410 <HAL_UART_IRQHandler+0x18c>
 80052ba:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80052be:	d003      	beq.n	80052c8 <HAL_UART_IRQHandler+0x44>
 80052c0:	f415 0f80 	tst.w	r5, #4194304	; 0x400000
 80052c4:	f040 813d 	bne.w	8005542 <HAL_UART_IRQHandler+0x2be>
 80052c8:	f013 0f80 	tst.w	r3, #128	; 0x80
 80052cc:	d003      	beq.n	80052d6 <HAL_UART_IRQHandler+0x52>
 80052ce:	f010 0f80 	tst.w	r0, #128	; 0x80
 80052d2:	f040 813d 	bne.w	8005550 <HAL_UART_IRQHandler+0x2cc>
 80052d6:	f013 0f40 	tst.w	r3, #64	; 0x40
 80052da:	d003      	beq.n	80052e4 <HAL_UART_IRQHandler+0x60>
 80052dc:	f010 0f40 	tst.w	r0, #64	; 0x40
 80052e0:	f040 813d 	bne.w	800555e <HAL_UART_IRQHandler+0x2da>
 80052e4:	bd70      	pop	{r4, r5, r6, pc}
 80052e6:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 80052e8:	2b00      	cmp	r3, #0
 80052ea:	d0fb      	beq.n	80052e4 <HAL_UART_IRQHandler+0x60>
 80052ec:	4620      	mov	r0, r4
 80052ee:	4798      	blx	r3
 80052f0:	e7f8      	b.n	80052e4 <HAL_UART_IRQHandler+0x60>
 80052f2:	f013 0f01 	tst.w	r3, #1
 80052f6:	d009      	beq.n	800530c <HAL_UART_IRQHandler+0x88>
 80052f8:	f410 7f80 	tst.w	r0, #256	; 0x100
 80052fc:	d006      	beq.n	800530c <HAL_UART_IRQHandler+0x88>
 80052fe:	2501      	movs	r5, #1
 8005300:	620d      	str	r5, [r1, #32]
 8005302:	f8d4 1084 	ldr.w	r1, [r4, #132]	; 0x84
 8005306:	4329      	orrs	r1, r5
 8005308:	f8c4 1084 	str.w	r1, [r4, #132]	; 0x84
 800530c:	f013 0f02 	tst.w	r3, #2
 8005310:	d009      	beq.n	8005326 <HAL_UART_IRQHandler+0xa2>
 8005312:	b142      	cbz	r2, 8005326 <HAL_UART_IRQHandler+0xa2>
 8005314:	6821      	ldr	r1, [r4, #0]
 8005316:	2502      	movs	r5, #2
 8005318:	620d      	str	r5, [r1, #32]
 800531a:	f8d4 1084 	ldr.w	r1, [r4, #132]	; 0x84
 800531e:	f041 0104 	orr.w	r1, r1, #4
 8005322:	f8c4 1084 	str.w	r1, [r4, #132]	; 0x84
 8005326:	f013 0f04 	tst.w	r3, #4
 800532a:	d009      	beq.n	8005340 <HAL_UART_IRQHandler+0xbc>
 800532c:	b142      	cbz	r2, 8005340 <HAL_UART_IRQHandler+0xbc>
 800532e:	6821      	ldr	r1, [r4, #0]
 8005330:	2504      	movs	r5, #4
 8005332:	620d      	str	r5, [r1, #32]
 8005334:	f8d4 1084 	ldr.w	r1, [r4, #132]	; 0x84
 8005338:	f041 0102 	orr.w	r1, r1, #2
 800533c:	f8c4 1084 	str.w	r1, [r4, #132]	; 0x84
 8005340:	f013 0f08 	tst.w	r3, #8
 8005344:	d00b      	beq.n	800535e <HAL_UART_IRQHandler+0xda>
 8005346:	f010 0f20 	tst.w	r0, #32
 800534a:	d100      	bne.n	800534e <HAL_UART_IRQHandler+0xca>
 800534c:	b13a      	cbz	r2, 800535e <HAL_UART_IRQHandler+0xda>
 800534e:	6822      	ldr	r2, [r4, #0]
 8005350:	2108      	movs	r1, #8
 8005352:	6211      	str	r1, [r2, #32]
 8005354:	f8d4 2084 	ldr.w	r2, [r4, #132]	; 0x84
 8005358:	430a      	orrs	r2, r1
 800535a:	f8c4 2084 	str.w	r2, [r4, #132]	; 0x84
 800535e:	f413 6f00 	tst.w	r3, #2048	; 0x800
 8005362:	d00c      	beq.n	800537e <HAL_UART_IRQHandler+0xfa>
 8005364:	f010 6f80 	tst.w	r0, #67108864	; 0x4000000
 8005368:	d009      	beq.n	800537e <HAL_UART_IRQHandler+0xfa>
 800536a:	6822      	ldr	r2, [r4, #0]
 800536c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8005370:	6211      	str	r1, [r2, #32]
 8005372:	f8d4 2084 	ldr.w	r2, [r4, #132]	; 0x84
 8005376:	f042 0220 	orr.w	r2, r2, #32
 800537a:	f8c4 2084 	str.w	r2, [r4, #132]	; 0x84
 800537e:	f8d4 2084 	ldr.w	r2, [r4, #132]	; 0x84
 8005382:	2a00      	cmp	r2, #0
 8005384:	d0ae      	beq.n	80052e4 <HAL_UART_IRQHandler+0x60>
 8005386:	f013 0f20 	tst.w	r3, #32
 800538a:	d006      	beq.n	800539a <HAL_UART_IRQHandler+0x116>
 800538c:	f010 0f20 	tst.w	r0, #32
 8005390:	d003      	beq.n	800539a <HAL_UART_IRQHandler+0x116>
 8005392:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8005394:	b10b      	cbz	r3, 800539a <HAL_UART_IRQHandler+0x116>
 8005396:	4620      	mov	r0, r4
 8005398:	4798      	blx	r3
 800539a:	f8d4 2084 	ldr.w	r2, [r4, #132]	; 0x84
 800539e:	6823      	ldr	r3, [r4, #0]
 80053a0:	689b      	ldr	r3, [r3, #8]
 80053a2:	f013 0f40 	tst.w	r3, #64	; 0x40
 80053a6:	d102      	bne.n	80053ae <HAL_UART_IRQHandler+0x12a>
 80053a8:	f012 0f28 	tst.w	r2, #40	; 0x28
 80053ac:	d029      	beq.n	8005402 <HAL_UART_IRQHandler+0x17e>
 80053ae:	4620      	mov	r0, r4
 80053b0:	f7ff fef4 	bl	800519c <UART_EndRxTransfer>
 80053b4:	6823      	ldr	r3, [r4, #0]
 80053b6:	689b      	ldr	r3, [r3, #8]
 80053b8:	f013 0f40 	tst.w	r3, #64	; 0x40
 80053bc:	d01d      	beq.n	80053fa <HAL_UART_IRQHandler+0x176>
 80053be:	6822      	ldr	r2, [r4, #0]
 80053c0:	f102 0308 	add.w	r3, r2, #8
 80053c4:	e853 3f00 	ldrex	r3, [r3]
 80053c8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80053cc:	3208      	adds	r2, #8
 80053ce:	e842 3100 	strex	r1, r3, [r2]
 80053d2:	2900      	cmp	r1, #0
 80053d4:	d1f3      	bne.n	80053be <HAL_UART_IRQHandler+0x13a>
 80053d6:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80053d8:	b15b      	cbz	r3, 80053f2 <HAL_UART_IRQHandler+0x16e>
 80053da:	4a64      	ldr	r2, [pc, #400]	; (800556c <HAL_UART_IRQHandler+0x2e8>)
 80053dc:	635a      	str	r2, [r3, #52]	; 0x34
 80053de:	6f60      	ldr	r0, [r4, #116]	; 0x74
 80053e0:	f7fe f91f 	bl	8003622 <HAL_DMA_Abort_IT>
 80053e4:	2800      	cmp	r0, #0
 80053e6:	f43f af7d 	beq.w	80052e4 <HAL_UART_IRQHandler+0x60>
 80053ea:	6f60      	ldr	r0, [r4, #116]	; 0x74
 80053ec:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80053ee:	4798      	blx	r3
 80053f0:	e778      	b.n	80052e4 <HAL_UART_IRQHandler+0x60>
 80053f2:	4620      	mov	r0, r4
 80053f4:	f7ff ff0e 	bl	8005214 <HAL_UART_ErrorCallback>
 80053f8:	e774      	b.n	80052e4 <HAL_UART_IRQHandler+0x60>
 80053fa:	4620      	mov	r0, r4
 80053fc:	f7ff ff0a 	bl	8005214 <HAL_UART_ErrorCallback>
 8005400:	e770      	b.n	80052e4 <HAL_UART_IRQHandler+0x60>
 8005402:	4620      	mov	r0, r4
 8005404:	f7ff ff06 	bl	8005214 <HAL_UART_ErrorCallback>
 8005408:	2300      	movs	r3, #0
 800540a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800540e:	e769      	b.n	80052e4 <HAL_UART_IRQHandler+0x60>
 8005410:	f013 0f10 	tst.w	r3, #16
 8005414:	f43f af51 	beq.w	80052ba <HAL_UART_IRQHandler+0x36>
 8005418:	f010 0f10 	tst.w	r0, #16
 800541c:	f43f af4d 	beq.w	80052ba <HAL_UART_IRQHandler+0x36>
 8005420:	2310      	movs	r3, #16
 8005422:	620b      	str	r3, [r1, #32]
 8005424:	6823      	ldr	r3, [r4, #0]
 8005426:	689b      	ldr	r3, [r3, #8]
 8005428:	f013 0f40 	tst.w	r3, #64	; 0x40
 800542c:	d04f      	beq.n	80054ce <HAL_UART_IRQHandler+0x24a>
 800542e:	6f62      	ldr	r2, [r4, #116]	; 0x74
 8005430:	6813      	ldr	r3, [r2, #0]
 8005432:	685b      	ldr	r3, [r3, #4]
 8005434:	b29b      	uxth	r3, r3
 8005436:	2b00      	cmp	r3, #0
 8005438:	f43f af54 	beq.w	80052e4 <HAL_UART_IRQHandler+0x60>
 800543c:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
 8005440:	4299      	cmp	r1, r3
 8005442:	f67f af4f 	bls.w	80052e4 <HAL_UART_IRQHandler+0x60>
 8005446:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800544a:	6993      	ldr	r3, [r2, #24]
 800544c:	2b20      	cmp	r3, #32
 800544e:	d031      	beq.n	80054b4 <HAL_UART_IRQHandler+0x230>
 8005450:	6822      	ldr	r2, [r4, #0]
 8005452:	e852 3f00 	ldrex	r3, [r2]
 8005456:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800545a:	e842 3100 	strex	r1, r3, [r2]
 800545e:	2900      	cmp	r1, #0
 8005460:	d1f6      	bne.n	8005450 <HAL_UART_IRQHandler+0x1cc>
 8005462:	6822      	ldr	r2, [r4, #0]
 8005464:	f102 0308 	add.w	r3, r2, #8
 8005468:	e853 3f00 	ldrex	r3, [r3]
 800546c:	f023 0301 	bic.w	r3, r3, #1
 8005470:	3208      	adds	r2, #8
 8005472:	e842 3100 	strex	r1, r3, [r2]
 8005476:	2900      	cmp	r1, #0
 8005478:	d1f3      	bne.n	8005462 <HAL_UART_IRQHandler+0x1de>
 800547a:	6822      	ldr	r2, [r4, #0]
 800547c:	f102 0308 	add.w	r3, r2, #8
 8005480:	e853 3f00 	ldrex	r3, [r3]
 8005484:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005488:	3208      	adds	r2, #8
 800548a:	e842 3100 	strex	r1, r3, [r2]
 800548e:	2900      	cmp	r1, #0
 8005490:	d1f3      	bne.n	800547a <HAL_UART_IRQHandler+0x1f6>
 8005492:	2320      	movs	r3, #32
 8005494:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8005498:	2300      	movs	r3, #0
 800549a:	6623      	str	r3, [r4, #96]	; 0x60
 800549c:	6822      	ldr	r2, [r4, #0]
 800549e:	e852 3f00 	ldrex	r3, [r2]
 80054a2:	f023 0310 	bic.w	r3, r3, #16
 80054a6:	e842 3100 	strex	r1, r3, [r2]
 80054aa:	2900      	cmp	r1, #0
 80054ac:	d1f6      	bne.n	800549c <HAL_UART_IRQHandler+0x218>
 80054ae:	6f60      	ldr	r0, [r4, #116]	; 0x74
 80054b0:	f7fe f892 	bl	80035d8 <HAL_DMA_Abort>
 80054b4:	2302      	movs	r3, #2
 80054b6:	6663      	str	r3, [r4, #100]	; 0x64
 80054b8:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
 80054bc:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80054c0:	b29b      	uxth	r3, r3
 80054c2:	1ac9      	subs	r1, r1, r3
 80054c4:	b289      	uxth	r1, r1
 80054c6:	4620      	mov	r0, r4
 80054c8:	f7ff feda 	bl	8005280 <HAL_UARTEx_RxEventCallback>
 80054cc:	e70a      	b.n	80052e4 <HAL_UART_IRQHandler+0x60>
 80054ce:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
 80054d2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80054d6:	b29b      	uxth	r3, r3
 80054d8:	1ac9      	subs	r1, r1, r3
 80054da:	b289      	uxth	r1, r1
 80054dc:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80054e0:	b29b      	uxth	r3, r3
 80054e2:	2b00      	cmp	r3, #0
 80054e4:	f43f aefe 	beq.w	80052e4 <HAL_UART_IRQHandler+0x60>
 80054e8:	2900      	cmp	r1, #0
 80054ea:	f43f aefb 	beq.w	80052e4 <HAL_UART_IRQHandler+0x60>
 80054ee:	6822      	ldr	r2, [r4, #0]
 80054f0:	e852 3f00 	ldrex	r3, [r2]
 80054f4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80054f8:	e842 3000 	strex	r0, r3, [r2]
 80054fc:	2800      	cmp	r0, #0
 80054fe:	d1f6      	bne.n	80054ee <HAL_UART_IRQHandler+0x26a>
 8005500:	6822      	ldr	r2, [r4, #0]
 8005502:	f102 0308 	add.w	r3, r2, #8
 8005506:	e853 3f00 	ldrex	r3, [r3]
 800550a:	f023 0301 	bic.w	r3, r3, #1
 800550e:	3208      	adds	r2, #8
 8005510:	e842 3000 	strex	r0, r3, [r2]
 8005514:	2800      	cmp	r0, #0
 8005516:	d1f3      	bne.n	8005500 <HAL_UART_IRQHandler+0x27c>
 8005518:	2320      	movs	r3, #32
 800551a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 800551e:	2300      	movs	r3, #0
 8005520:	6623      	str	r3, [r4, #96]	; 0x60
 8005522:	66a3      	str	r3, [r4, #104]	; 0x68
 8005524:	6822      	ldr	r2, [r4, #0]
 8005526:	e852 3f00 	ldrex	r3, [r2]
 800552a:	f023 0310 	bic.w	r3, r3, #16
 800552e:	e842 3000 	strex	r0, r3, [r2]
 8005532:	2800      	cmp	r0, #0
 8005534:	d1f6      	bne.n	8005524 <HAL_UART_IRQHandler+0x2a0>
 8005536:	2302      	movs	r3, #2
 8005538:	6663      	str	r3, [r4, #100]	; 0x64
 800553a:	4620      	mov	r0, r4
 800553c:	f7ff fea0 	bl	8005280 <HAL_UARTEx_RxEventCallback>
 8005540:	e6d0      	b.n	80052e4 <HAL_UART_IRQHandler+0x60>
 8005542:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8005546:	620b      	str	r3, [r1, #32]
 8005548:	4620      	mov	r0, r4
 800554a:	f000 fb4f 	bl	8005bec <HAL_UARTEx_WakeupCallback>
 800554e:	e6c9      	b.n	80052e4 <HAL_UART_IRQHandler+0x60>
 8005550:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8005552:	2b00      	cmp	r3, #0
 8005554:	f43f aec6 	beq.w	80052e4 <HAL_UART_IRQHandler+0x60>
 8005558:	4620      	mov	r0, r4
 800555a:	4798      	blx	r3
 800555c:	e6c2      	b.n	80052e4 <HAL_UART_IRQHandler+0x60>
 800555e:	4620      	mov	r0, r4
 8005560:	f7ff fe46 	bl	80051f0 <UART_EndTransmit_IT>
 8005564:	e6be      	b.n	80052e4 <HAL_UART_IRQHandler+0x60>
 8005566:	bf00      	nop
 8005568:	04000120 	.word	0x04000120
 800556c:	0800526d 	.word	0x0800526d

08005570 <UART_DMARxHalfCplt>:
 8005570:	b508      	push	{r3, lr}
 8005572:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005574:	2301      	movs	r3, #1
 8005576:	6643      	str	r3, [r0, #100]	; 0x64
 8005578:	6e03      	ldr	r3, [r0, #96]	; 0x60
 800557a:	2b01      	cmp	r3, #1
 800557c:	d002      	beq.n	8005584 <UART_DMARxHalfCplt+0x14>
 800557e:	f7ff fe48 	bl	8005212 <HAL_UART_RxHalfCpltCallback>
 8005582:	bd08      	pop	{r3, pc}
 8005584:	f8b0 1058 	ldrh.w	r1, [r0, #88]	; 0x58
 8005588:	0849      	lsrs	r1, r1, #1
 800558a:	f7ff fe79 	bl	8005280 <HAL_UARTEx_RxEventCallback>
 800558e:	e7f8      	b.n	8005582 <UART_DMARxHalfCplt+0x12>

08005590 <UART_DMAReceiveCplt>:
 8005590:	b508      	push	{r3, lr}
 8005592:	4603      	mov	r3, r0
 8005594:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005596:	699b      	ldr	r3, [r3, #24]
 8005598:	2b20      	cmp	r3, #32
 800559a:	d029      	beq.n	80055f0 <UART_DMAReceiveCplt+0x60>
 800559c:	2300      	movs	r3, #0
 800559e:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80055a2:	6802      	ldr	r2, [r0, #0]
 80055a4:	e852 3f00 	ldrex	r3, [r2]
 80055a8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80055ac:	e842 3100 	strex	r1, r3, [r2]
 80055b0:	2900      	cmp	r1, #0
 80055b2:	d1f6      	bne.n	80055a2 <UART_DMAReceiveCplt+0x12>
 80055b4:	6802      	ldr	r2, [r0, #0]
 80055b6:	f102 0308 	add.w	r3, r2, #8
 80055ba:	e853 3f00 	ldrex	r3, [r3]
 80055be:	f023 0301 	bic.w	r3, r3, #1
 80055c2:	3208      	adds	r2, #8
 80055c4:	e842 3100 	strex	r1, r3, [r2]
 80055c8:	2900      	cmp	r1, #0
 80055ca:	d1f3      	bne.n	80055b4 <UART_DMAReceiveCplt+0x24>
 80055cc:	6802      	ldr	r2, [r0, #0]
 80055ce:	f102 0308 	add.w	r3, r2, #8
 80055d2:	e853 3f00 	ldrex	r3, [r3]
 80055d6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80055da:	3208      	adds	r2, #8
 80055dc:	e842 3100 	strex	r1, r3, [r2]
 80055e0:	2900      	cmp	r1, #0
 80055e2:	d1f3      	bne.n	80055cc <UART_DMAReceiveCplt+0x3c>
 80055e4:	2320      	movs	r3, #32
 80055e6:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80
 80055ea:	6e03      	ldr	r3, [r0, #96]	; 0x60
 80055ec:	2b01      	cmp	r3, #1
 80055ee:	d007      	beq.n	8005600 <UART_DMAReceiveCplt+0x70>
 80055f0:	2300      	movs	r3, #0
 80055f2:	6643      	str	r3, [r0, #100]	; 0x64
 80055f4:	6e03      	ldr	r3, [r0, #96]	; 0x60
 80055f6:	2b01      	cmp	r3, #1
 80055f8:	d00c      	beq.n	8005614 <UART_DMAReceiveCplt+0x84>
 80055fa:	f7fd fc85 	bl	8002f08 <HAL_UART_RxCpltCallback>
 80055fe:	bd08      	pop	{r3, pc}
 8005600:	6802      	ldr	r2, [r0, #0]
 8005602:	e852 3f00 	ldrex	r3, [r2]
 8005606:	f023 0310 	bic.w	r3, r3, #16
 800560a:	e842 3100 	strex	r1, r3, [r2]
 800560e:	2900      	cmp	r1, #0
 8005610:	d1f6      	bne.n	8005600 <UART_DMAReceiveCplt+0x70>
 8005612:	e7ed      	b.n	80055f0 <UART_DMAReceiveCplt+0x60>
 8005614:	f8b0 1058 	ldrh.w	r1, [r0, #88]	; 0x58
 8005618:	f7ff fe32 	bl	8005280 <HAL_UARTEx_RxEventCallback>
 800561c:	e7ef      	b.n	80055fe <UART_DMAReceiveCplt+0x6e>
	...

08005620 <UART_SetConfig>:
 8005620:	b510      	push	{r4, lr}
 8005622:	4604      	mov	r4, r0
 8005624:	6883      	ldr	r3, [r0, #8]
 8005626:	6902      	ldr	r2, [r0, #16]
 8005628:	4313      	orrs	r3, r2
 800562a:	6942      	ldr	r2, [r0, #20]
 800562c:	4313      	orrs	r3, r2
 800562e:	69c2      	ldr	r2, [r0, #28]
 8005630:	431a      	orrs	r2, r3
 8005632:	6801      	ldr	r1, [r0, #0]
 8005634:	680b      	ldr	r3, [r1, #0]
 8005636:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 800563a:	f023 030c 	bic.w	r3, r3, #12
 800563e:	4313      	orrs	r3, r2
 8005640:	600b      	str	r3, [r1, #0]
 8005642:	6802      	ldr	r2, [r0, #0]
 8005644:	6853      	ldr	r3, [r2, #4]
 8005646:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800564a:	68c1      	ldr	r1, [r0, #12]
 800564c:	430b      	orrs	r3, r1
 800564e:	6053      	str	r3, [r2, #4]
 8005650:	6982      	ldr	r2, [r0, #24]
 8005652:	6a03      	ldr	r3, [r0, #32]
 8005654:	431a      	orrs	r2, r3
 8005656:	6801      	ldr	r1, [r0, #0]
 8005658:	688b      	ldr	r3, [r1, #8]
 800565a:	f423 6330 	bic.w	r3, r3, #2816	; 0xb00
 800565e:	4313      	orrs	r3, r2
 8005660:	608b      	str	r3, [r1, #8]
 8005662:	6803      	ldr	r3, [r0, #0]
 8005664:	4a7b      	ldr	r2, [pc, #492]	; (8005854 <UART_SetConfig+0x234>)
 8005666:	4293      	cmp	r3, r2
 8005668:	d00d      	beq.n	8005686 <UART_SetConfig+0x66>
 800566a:	4a7b      	ldr	r2, [pc, #492]	; (8005858 <UART_SetConfig+0x238>)
 800566c:	4293      	cmp	r3, r2
 800566e:	d01c      	beq.n	80056aa <UART_SetConfig+0x8a>
 8005670:	4a7a      	ldr	r2, [pc, #488]	; (800585c <UART_SetConfig+0x23c>)
 8005672:	4293      	cmp	r3, r2
 8005674:	d03a      	beq.n	80056ec <UART_SetConfig+0xcc>
 8005676:	4a7a      	ldr	r2, [pc, #488]	; (8005860 <UART_SetConfig+0x240>)
 8005678:	4293      	cmp	r3, r2
 800567a:	d04a      	beq.n	8005712 <UART_SetConfig+0xf2>
 800567c:	4a79      	ldr	r2, [pc, #484]	; (8005864 <UART_SetConfig+0x244>)
 800567e:	4293      	cmp	r3, r2
 8005680:	d05a      	beq.n	8005738 <UART_SetConfig+0x118>
 8005682:	2310      	movs	r3, #16
 8005684:	e01f      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005686:	4b78      	ldr	r3, [pc, #480]	; (8005868 <UART_SetConfig+0x248>)
 8005688:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800568a:	f003 0303 	and.w	r3, r3, #3
 800568e:	2b03      	cmp	r3, #3
 8005690:	d809      	bhi.n	80056a6 <UART_SetConfig+0x86>
 8005692:	e8df f003 	tbb	[pc, r3]
 8005696:	0402      	.short	0x0402
 8005698:	6406      	.short	0x6406
 800569a:	2301      	movs	r3, #1
 800569c:	e013      	b.n	80056c6 <UART_SetConfig+0xa6>
 800569e:	2304      	movs	r3, #4
 80056a0:	e011      	b.n	80056c6 <UART_SetConfig+0xa6>
 80056a2:	2308      	movs	r3, #8
 80056a4:	e00f      	b.n	80056c6 <UART_SetConfig+0xa6>
 80056a6:	2310      	movs	r3, #16
 80056a8:	e00d      	b.n	80056c6 <UART_SetConfig+0xa6>
 80056aa:	4b6f      	ldr	r3, [pc, #444]	; (8005868 <UART_SetConfig+0x248>)
 80056ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80056ae:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80056b2:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80056b6:	d054      	beq.n	8005762 <UART_SetConfig+0x142>
 80056b8:	d813      	bhi.n	80056e2 <UART_SetConfig+0xc2>
 80056ba:	2b00      	cmp	r3, #0
 80056bc:	d053      	beq.n	8005766 <UART_SetConfig+0x146>
 80056be:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80056c2:	d152      	bne.n	800576a <UART_SetConfig+0x14a>
 80056c4:	2304      	movs	r3, #4
 80056c6:	69e0      	ldr	r0, [r4, #28]
 80056c8:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 80056cc:	d069      	beq.n	80057a2 <UART_SetConfig+0x182>
 80056ce:	2b08      	cmp	r3, #8
 80056d0:	f200 80b9 	bhi.w	8005846 <UART_SetConfig+0x226>
 80056d4:	e8df f003 	tbb	[pc, r3]
 80056d8:	b790a892 	.word	0xb790a892
 80056dc:	b7b7b7ab 	.word	0xb7b7b7ab
 80056e0:	ae          	.byte	0xae
 80056e1:	00          	.byte	0x00
 80056e2:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80056e6:	d142      	bne.n	800576e <UART_SetConfig+0x14e>
 80056e8:	2302      	movs	r3, #2
 80056ea:	e7ec      	b.n	80056c6 <UART_SetConfig+0xa6>
 80056ec:	4b5e      	ldr	r3, [pc, #376]	; (8005868 <UART_SetConfig+0x248>)
 80056ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80056f0:	f403 2340 	and.w	r3, r3, #786432	; 0xc0000
 80056f4:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 80056f8:	d03b      	beq.n	8005772 <UART_SetConfig+0x152>
 80056fa:	d805      	bhi.n	8005708 <UART_SetConfig+0xe8>
 80056fc:	b3db      	cbz	r3, 8005776 <UART_SetConfig+0x156>
 80056fe:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8005702:	d13a      	bne.n	800577a <UART_SetConfig+0x15a>
 8005704:	2304      	movs	r3, #4
 8005706:	e7de      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005708:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 800570c:	d137      	bne.n	800577e <UART_SetConfig+0x15e>
 800570e:	2302      	movs	r3, #2
 8005710:	e7d9      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005712:	4b55      	ldr	r3, [pc, #340]	; (8005868 <UART_SetConfig+0x248>)
 8005714:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005716:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 800571a:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800571e:	d030      	beq.n	8005782 <UART_SetConfig+0x162>
 8005720:	d805      	bhi.n	800572e <UART_SetConfig+0x10e>
 8005722:	b383      	cbz	r3, 8005786 <UART_SetConfig+0x166>
 8005724:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005728:	d12f      	bne.n	800578a <UART_SetConfig+0x16a>
 800572a:	2304      	movs	r3, #4
 800572c:	e7cb      	b.n	80056c6 <UART_SetConfig+0xa6>
 800572e:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8005732:	d12c      	bne.n	800578e <UART_SetConfig+0x16e>
 8005734:	2302      	movs	r3, #2
 8005736:	e7c6      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005738:	4b4b      	ldr	r3, [pc, #300]	; (8005868 <UART_SetConfig+0x248>)
 800573a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800573c:	f403 0340 	and.w	r3, r3, #12582912	; 0xc00000
 8005740:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8005744:	d025      	beq.n	8005792 <UART_SetConfig+0x172>
 8005746:	d805      	bhi.n	8005754 <UART_SetConfig+0x134>
 8005748:	b32b      	cbz	r3, 8005796 <UART_SetConfig+0x176>
 800574a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800574e:	d124      	bne.n	800579a <UART_SetConfig+0x17a>
 8005750:	2304      	movs	r3, #4
 8005752:	e7b8      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005754:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8005758:	d121      	bne.n	800579e <UART_SetConfig+0x17e>
 800575a:	2302      	movs	r3, #2
 800575c:	e7b3      	b.n	80056c6 <UART_SetConfig+0xa6>
 800575e:	2302      	movs	r3, #2
 8005760:	e7b1      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005762:	2308      	movs	r3, #8
 8005764:	e7af      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005766:	2300      	movs	r3, #0
 8005768:	e7ad      	b.n	80056c6 <UART_SetConfig+0xa6>
 800576a:	2310      	movs	r3, #16
 800576c:	e7ab      	b.n	80056c6 <UART_SetConfig+0xa6>
 800576e:	2310      	movs	r3, #16
 8005770:	e7a9      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005772:	2308      	movs	r3, #8
 8005774:	e7a7      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005776:	2300      	movs	r3, #0
 8005778:	e7a5      	b.n	80056c6 <UART_SetConfig+0xa6>
 800577a:	2310      	movs	r3, #16
 800577c:	e7a3      	b.n	80056c6 <UART_SetConfig+0xa6>
 800577e:	2310      	movs	r3, #16
 8005780:	e7a1      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005782:	2308      	movs	r3, #8
 8005784:	e79f      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005786:	2300      	movs	r3, #0
 8005788:	e79d      	b.n	80056c6 <UART_SetConfig+0xa6>
 800578a:	2310      	movs	r3, #16
 800578c:	e79b      	b.n	80056c6 <UART_SetConfig+0xa6>
 800578e:	2310      	movs	r3, #16
 8005790:	e799      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005792:	2308      	movs	r3, #8
 8005794:	e797      	b.n	80056c6 <UART_SetConfig+0xa6>
 8005796:	2300      	movs	r3, #0
 8005798:	e795      	b.n	80056c6 <UART_SetConfig+0xa6>
 800579a:	2310      	movs	r3, #16
 800579c:	e793      	b.n	80056c6 <UART_SetConfig+0xa6>
 800579e:	2310      	movs	r3, #16
 80057a0:	e791      	b.n	80056c6 <UART_SetConfig+0xa6>
 80057a2:	2b08      	cmp	r3, #8
 80057a4:	d849      	bhi.n	800583a <UART_SetConfig+0x21a>
 80057a6:	e8df f003 	tbb	[pc, r3]
 80057aa:	1f05      	.short	0x1f05
 80057ac:	48224825 	.word	0x48224825
 80057b0:	4848      	.short	0x4848
 80057b2:	09          	.byte	0x09
 80057b3:	00          	.byte	0x00
 80057b4:	f7fe fcda 	bl	800416c <HAL_RCC_GetPCLK1Freq>
 80057b8:	2800      	cmp	r0, #0
 80057ba:	d040      	beq.n	800583e <UART_SetConfig+0x21e>
 80057bc:	6862      	ldr	r2, [r4, #4]
 80057be:	0853      	lsrs	r3, r2, #1
 80057c0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80057c4:	fbb0 f0f2 	udiv	r0, r0, r2
 80057c8:	f1a0 0210 	sub.w	r2, r0, #16
 80057cc:	f64f 73ef 	movw	r3, #65519	; 0xffef
 80057d0:	429a      	cmp	r2, r3
 80057d2:	d836      	bhi.n	8005842 <UART_SetConfig+0x222>
 80057d4:	b283      	uxth	r3, r0
 80057d6:	f023 030f 	bic.w	r3, r3, #15
 80057da:	f3c0 0042 	ubfx	r0, r0, #1, #3
 80057de:	4318      	orrs	r0, r3
 80057e0:	6823      	ldr	r3, [r4, #0]
 80057e2:	60d8      	str	r0, [r3, #12]
 80057e4:	2000      	movs	r0, #0
 80057e6:	e01b      	b.n	8005820 <UART_SetConfig+0x200>
 80057e8:	f7fe fcd6 	bl	8004198 <HAL_RCC_GetPCLK2Freq>
 80057ec:	e7e4      	b.n	80057b8 <UART_SetConfig+0x198>
 80057ee:	f7fe fbb3 	bl	8003f58 <HAL_RCC_GetSysClockFreq>
 80057f2:	e7e1      	b.n	80057b8 <UART_SetConfig+0x198>
 80057f4:	481d      	ldr	r0, [pc, #116]	; (800586c <UART_SetConfig+0x24c>)
 80057f6:	e7e1      	b.n	80057bc <UART_SetConfig+0x19c>
 80057f8:	481c      	ldr	r0, [pc, #112]	; (800586c <UART_SetConfig+0x24c>)
 80057fa:	e002      	b.n	8005802 <UART_SetConfig+0x1e2>
 80057fc:	f7fe fcb6 	bl	800416c <HAL_RCC_GetPCLK1Freq>
 8005800:	b318      	cbz	r0, 800584a <UART_SetConfig+0x22a>
 8005802:	6863      	ldr	r3, [r4, #4]
 8005804:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8005808:	fbb0 f0f3 	udiv	r0, r0, r3
 800580c:	f1a0 0210 	sub.w	r2, r0, #16
 8005810:	f64f 73ef 	movw	r3, #65519	; 0xffef
 8005814:	429a      	cmp	r2, r3
 8005816:	d81a      	bhi.n	800584e <UART_SetConfig+0x22e>
 8005818:	6823      	ldr	r3, [r4, #0]
 800581a:	b280      	uxth	r0, r0
 800581c:	60d8      	str	r0, [r3, #12]
 800581e:	2000      	movs	r0, #0
 8005820:	2300      	movs	r3, #0
 8005822:	66a3      	str	r3, [r4, #104]	; 0x68
 8005824:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005826:	bd10      	pop	{r4, pc}
 8005828:	f7fe fcb6 	bl	8004198 <HAL_RCC_GetPCLK2Freq>
 800582c:	e7e8      	b.n	8005800 <UART_SetConfig+0x1e0>
 800582e:	f7fe fb93 	bl	8003f58 <HAL_RCC_GetSysClockFreq>
 8005832:	e7e5      	b.n	8005800 <UART_SetConfig+0x1e0>
 8005834:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8005838:	e7e3      	b.n	8005802 <UART_SetConfig+0x1e2>
 800583a:	2001      	movs	r0, #1
 800583c:	e7f0      	b.n	8005820 <UART_SetConfig+0x200>
 800583e:	2000      	movs	r0, #0
 8005840:	e7ee      	b.n	8005820 <UART_SetConfig+0x200>
 8005842:	2001      	movs	r0, #1
 8005844:	e7ec      	b.n	8005820 <UART_SetConfig+0x200>
 8005846:	2001      	movs	r0, #1
 8005848:	e7ea      	b.n	8005820 <UART_SetConfig+0x200>
 800584a:	2000      	movs	r0, #0
 800584c:	e7e8      	b.n	8005820 <UART_SetConfig+0x200>
 800584e:	2001      	movs	r0, #1
 8005850:	e7e6      	b.n	8005820 <UART_SetConfig+0x200>
 8005852:	bf00      	nop
 8005854:	40013800 	.word	0x40013800
 8005858:	40004400 	.word	0x40004400
 800585c:	40004800 	.word	0x40004800
 8005860:	40004c00 	.word	0x40004c00
 8005864:	40005000 	.word	0x40005000
 8005868:	40021000 	.word	0x40021000
 800586c:	007a1200 	.word	0x007a1200

08005870 <UART_AdvFeatureConfig>:
 8005870:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8005872:	f013 0f08 	tst.w	r3, #8
 8005876:	d006      	beq.n	8005886 <UART_AdvFeatureConfig+0x16>
 8005878:	6802      	ldr	r2, [r0, #0]
 800587a:	6853      	ldr	r3, [r2, #4]
 800587c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8005880:	6b41      	ldr	r1, [r0, #52]	; 0x34
 8005882:	430b      	orrs	r3, r1
 8005884:	6053      	str	r3, [r2, #4]
 8005886:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8005888:	f013 0f01 	tst.w	r3, #1
 800588c:	d006      	beq.n	800589c <UART_AdvFeatureConfig+0x2c>
 800588e:	6802      	ldr	r2, [r0, #0]
 8005890:	6853      	ldr	r3, [r2, #4]
 8005892:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8005896:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8005898:	430b      	orrs	r3, r1
 800589a:	6053      	str	r3, [r2, #4]
 800589c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800589e:	f013 0f02 	tst.w	r3, #2
 80058a2:	d006      	beq.n	80058b2 <UART_AdvFeatureConfig+0x42>
 80058a4:	6802      	ldr	r2, [r0, #0]
 80058a6:	6853      	ldr	r3, [r2, #4]
 80058a8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80058ac:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80058ae:	430b      	orrs	r3, r1
 80058b0:	6053      	str	r3, [r2, #4]
 80058b2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80058b4:	f013 0f04 	tst.w	r3, #4
 80058b8:	d006      	beq.n	80058c8 <UART_AdvFeatureConfig+0x58>
 80058ba:	6802      	ldr	r2, [r0, #0]
 80058bc:	6853      	ldr	r3, [r2, #4]
 80058be:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80058c2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80058c4:	430b      	orrs	r3, r1
 80058c6:	6053      	str	r3, [r2, #4]
 80058c8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80058ca:	f013 0f10 	tst.w	r3, #16
 80058ce:	d006      	beq.n	80058de <UART_AdvFeatureConfig+0x6e>
 80058d0:	6802      	ldr	r2, [r0, #0]
 80058d2:	6893      	ldr	r3, [r2, #8]
 80058d4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80058d8:	6b81      	ldr	r1, [r0, #56]	; 0x38
 80058da:	430b      	orrs	r3, r1
 80058dc:	6093      	str	r3, [r2, #8]
 80058de:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80058e0:	f013 0f20 	tst.w	r3, #32
 80058e4:	d006      	beq.n	80058f4 <UART_AdvFeatureConfig+0x84>
 80058e6:	6802      	ldr	r2, [r0, #0]
 80058e8:	6893      	ldr	r3, [r2, #8]
 80058ea:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80058ee:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
 80058f0:	430b      	orrs	r3, r1
 80058f2:	6093      	str	r3, [r2, #8]
 80058f4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80058f6:	f013 0f40 	tst.w	r3, #64	; 0x40
 80058fa:	d00a      	beq.n	8005912 <UART_AdvFeatureConfig+0xa2>
 80058fc:	6802      	ldr	r2, [r0, #0]
 80058fe:	6853      	ldr	r3, [r2, #4]
 8005900:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8005904:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8005906:	430b      	orrs	r3, r1
 8005908:	6053      	str	r3, [r2, #4]
 800590a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800590c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005910:	d00b      	beq.n	800592a <UART_AdvFeatureConfig+0xba>
 8005912:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8005914:	f013 0f80 	tst.w	r3, #128	; 0x80
 8005918:	d006      	beq.n	8005928 <UART_AdvFeatureConfig+0xb8>
 800591a:	6802      	ldr	r2, [r0, #0]
 800591c:	6853      	ldr	r3, [r2, #4]
 800591e:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8005922:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8005924:	430b      	orrs	r3, r1
 8005926:	6053      	str	r3, [r2, #4]
 8005928:	4770      	bx	lr
 800592a:	6802      	ldr	r2, [r0, #0]
 800592c:	6853      	ldr	r3, [r2, #4]
 800592e:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8005932:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8005934:	430b      	orrs	r3, r1
 8005936:	6053      	str	r3, [r2, #4]
 8005938:	e7eb      	b.n	8005912 <UART_AdvFeatureConfig+0xa2>

0800593a <UART_WaitOnFlagUntilTimeout>:
 800593a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800593e:	4605      	mov	r5, r0
 8005940:	460e      	mov	r6, r1
 8005942:	4617      	mov	r7, r2
 8005944:	4699      	mov	r9, r3
 8005946:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800594a:	682c      	ldr	r4, [r5, #0]
 800594c:	69e4      	ldr	r4, [r4, #28]
 800594e:	ea36 0304 	bics.w	r3, r6, r4
 8005952:	bf0c      	ite	eq
 8005954:	f04f 0c01 	moveq.w	ip, #1
 8005958:	f04f 0c00 	movne.w	ip, #0
 800595c:	45bc      	cmp	ip, r7
 800595e:	d136      	bne.n	80059ce <UART_WaitOnFlagUntilTimeout+0x94>
 8005960:	f1b8 3fff 	cmp.w	r8, #4294967295	; 0xffffffff
 8005964:	d0f1      	beq.n	800594a <UART_WaitOnFlagUntilTimeout+0x10>
 8005966:	f7fd fd13 	bl	8003390 <HAL_GetTick>
 800596a:	eba0 0009 	sub.w	r0, r0, r9
 800596e:	4540      	cmp	r0, r8
 8005970:	d830      	bhi.n	80059d4 <UART_WaitOnFlagUntilTimeout+0x9a>
 8005972:	f1b8 0f00 	cmp.w	r8, #0
 8005976:	d02f      	beq.n	80059d8 <UART_WaitOnFlagUntilTimeout+0x9e>
 8005978:	682b      	ldr	r3, [r5, #0]
 800597a:	681a      	ldr	r2, [r3, #0]
 800597c:	f012 0f04 	tst.w	r2, #4
 8005980:	d0e3      	beq.n	800594a <UART_WaitOnFlagUntilTimeout+0x10>
 8005982:	2e80      	cmp	r6, #128	; 0x80
 8005984:	d0e1      	beq.n	800594a <UART_WaitOnFlagUntilTimeout+0x10>
 8005986:	2e40      	cmp	r6, #64	; 0x40
 8005988:	d0df      	beq.n	800594a <UART_WaitOnFlagUntilTimeout+0x10>
 800598a:	69da      	ldr	r2, [r3, #28]
 800598c:	f012 0f08 	tst.w	r2, #8
 8005990:	d111      	bne.n	80059b6 <UART_WaitOnFlagUntilTimeout+0x7c>
 8005992:	69da      	ldr	r2, [r3, #28]
 8005994:	f412 6f00 	tst.w	r2, #2048	; 0x800
 8005998:	d0d7      	beq.n	800594a <UART_WaitOnFlagUntilTimeout+0x10>
 800599a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800599e:	621a      	str	r2, [r3, #32]
 80059a0:	4628      	mov	r0, r5
 80059a2:	f7ff fbfb 	bl	800519c <UART_EndRxTransfer>
 80059a6:	2320      	movs	r3, #32
 80059a8:	f8c5 3084 	str.w	r3, [r5, #132]	; 0x84
 80059ac:	2300      	movs	r3, #0
 80059ae:	f885 3078 	strb.w	r3, [r5, #120]	; 0x78
 80059b2:	2003      	movs	r0, #3
 80059b4:	e00c      	b.n	80059d0 <UART_WaitOnFlagUntilTimeout+0x96>
 80059b6:	2408      	movs	r4, #8
 80059b8:	621c      	str	r4, [r3, #32]
 80059ba:	4628      	mov	r0, r5
 80059bc:	f7ff fbee 	bl	800519c <UART_EndRxTransfer>
 80059c0:	f8c5 4084 	str.w	r4, [r5, #132]	; 0x84
 80059c4:	2300      	movs	r3, #0
 80059c6:	f885 3078 	strb.w	r3, [r5, #120]	; 0x78
 80059ca:	2001      	movs	r0, #1
 80059cc:	e000      	b.n	80059d0 <UART_WaitOnFlagUntilTimeout+0x96>
 80059ce:	2000      	movs	r0, #0
 80059d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80059d4:	2003      	movs	r0, #3
 80059d6:	e7fb      	b.n	80059d0 <UART_WaitOnFlagUntilTimeout+0x96>
 80059d8:	2003      	movs	r0, #3
 80059da:	e7f9      	b.n	80059d0 <UART_WaitOnFlagUntilTimeout+0x96>

080059dc <UART_CheckIdleState>:
 80059dc:	b530      	push	{r4, r5, lr}
 80059de:	b083      	sub	sp, #12
 80059e0:	4604      	mov	r4, r0
 80059e2:	2300      	movs	r3, #0
 80059e4:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
 80059e8:	f7fd fcd2 	bl	8003390 <HAL_GetTick>
 80059ec:	4605      	mov	r5, r0
 80059ee:	6822      	ldr	r2, [r4, #0]
 80059f0:	6812      	ldr	r2, [r2, #0]
 80059f2:	f012 0f08 	tst.w	r2, #8
 80059f6:	d10f      	bne.n	8005a18 <UART_CheckIdleState+0x3c>
 80059f8:	6823      	ldr	r3, [r4, #0]
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	f013 0f04 	tst.w	r3, #4
 8005a00:	d126      	bne.n	8005a50 <UART_CheckIdleState+0x74>
 8005a02:	2320      	movs	r3, #32
 8005a04:	67e3      	str	r3, [r4, #124]	; 0x7c
 8005a06:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8005a0a:	2000      	movs	r0, #0
 8005a0c:	6620      	str	r0, [r4, #96]	; 0x60
 8005a0e:	6660      	str	r0, [r4, #100]	; 0x64
 8005a10:	f884 0078 	strb.w	r0, [r4, #120]	; 0x78
 8005a14:	b003      	add	sp, #12
 8005a16:	bd30      	pop	{r4, r5, pc}
 8005a18:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8005a1c:	9300      	str	r3, [sp, #0]
 8005a1e:	4603      	mov	r3, r0
 8005a20:	2200      	movs	r2, #0
 8005a22:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8005a26:	4620      	mov	r0, r4
 8005a28:	f7ff ff87 	bl	800593a <UART_WaitOnFlagUntilTimeout>
 8005a2c:	2800      	cmp	r0, #0
 8005a2e:	d0e3      	beq.n	80059f8 <UART_CheckIdleState+0x1c>
 8005a30:	6822      	ldr	r2, [r4, #0]
 8005a32:	e852 3f00 	ldrex	r3, [r2]
 8005a36:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005a3a:	e842 3100 	strex	r1, r3, [r2]
 8005a3e:	2900      	cmp	r1, #0
 8005a40:	d1f6      	bne.n	8005a30 <UART_CheckIdleState+0x54>
 8005a42:	2320      	movs	r3, #32
 8005a44:	67e3      	str	r3, [r4, #124]	; 0x7c
 8005a46:	2300      	movs	r3, #0
 8005a48:	f884 3078 	strb.w	r3, [r4, #120]	; 0x78
 8005a4c:	2003      	movs	r0, #3
 8005a4e:	e7e1      	b.n	8005a14 <UART_CheckIdleState+0x38>
 8005a50:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8005a54:	9300      	str	r3, [sp, #0]
 8005a56:	462b      	mov	r3, r5
 8005a58:	2200      	movs	r2, #0
 8005a5a:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8005a5e:	4620      	mov	r0, r4
 8005a60:	f7ff ff6b 	bl	800593a <UART_WaitOnFlagUntilTimeout>
 8005a64:	2800      	cmp	r0, #0
 8005a66:	d0cc      	beq.n	8005a02 <UART_CheckIdleState+0x26>
 8005a68:	6822      	ldr	r2, [r4, #0]
 8005a6a:	e852 3f00 	ldrex	r3, [r2]
 8005a6e:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8005a72:	e842 3100 	strex	r1, r3, [r2]
 8005a76:	2900      	cmp	r1, #0
 8005a78:	d1f6      	bne.n	8005a68 <UART_CheckIdleState+0x8c>
 8005a7a:	6822      	ldr	r2, [r4, #0]
 8005a7c:	f102 0308 	add.w	r3, r2, #8
 8005a80:	e853 3f00 	ldrex	r3, [r3]
 8005a84:	f023 0301 	bic.w	r3, r3, #1
 8005a88:	3208      	adds	r2, #8
 8005a8a:	e842 3100 	strex	r1, r3, [r2]
 8005a8e:	2900      	cmp	r1, #0
 8005a90:	d1f3      	bne.n	8005a7a <UART_CheckIdleState+0x9e>
 8005a92:	2320      	movs	r3, #32
 8005a94:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8005a98:	2300      	movs	r3, #0
 8005a9a:	f884 3078 	strb.w	r3, [r4, #120]	; 0x78
 8005a9e:	2003      	movs	r0, #3
 8005aa0:	e7b8      	b.n	8005a14 <UART_CheckIdleState+0x38>

08005aa2 <HAL_UART_Init>:
 8005aa2:	b368      	cbz	r0, 8005b00 <HAL_UART_Init+0x5e>
 8005aa4:	b510      	push	{r4, lr}
 8005aa6:	4604      	mov	r4, r0
 8005aa8:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
 8005aaa:	b303      	cbz	r3, 8005aee <HAL_UART_Init+0x4c>
 8005aac:	2324      	movs	r3, #36	; 0x24
 8005aae:	67e3      	str	r3, [r4, #124]	; 0x7c
 8005ab0:	6822      	ldr	r2, [r4, #0]
 8005ab2:	6813      	ldr	r3, [r2, #0]
 8005ab4:	f023 0301 	bic.w	r3, r3, #1
 8005ab8:	6013      	str	r3, [r2, #0]
 8005aba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005abc:	b9e3      	cbnz	r3, 8005af8 <HAL_UART_Init+0x56>
 8005abe:	4620      	mov	r0, r4
 8005ac0:	f7ff fdae 	bl	8005620 <UART_SetConfig>
 8005ac4:	2801      	cmp	r0, #1
 8005ac6:	d011      	beq.n	8005aec <HAL_UART_Init+0x4a>
 8005ac8:	6822      	ldr	r2, [r4, #0]
 8005aca:	6853      	ldr	r3, [r2, #4]
 8005acc:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8005ad0:	6053      	str	r3, [r2, #4]
 8005ad2:	6822      	ldr	r2, [r4, #0]
 8005ad4:	6893      	ldr	r3, [r2, #8]
 8005ad6:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8005ada:	6093      	str	r3, [r2, #8]
 8005adc:	6822      	ldr	r2, [r4, #0]
 8005ade:	6813      	ldr	r3, [r2, #0]
 8005ae0:	f043 0301 	orr.w	r3, r3, #1
 8005ae4:	6013      	str	r3, [r2, #0]
 8005ae6:	4620      	mov	r0, r4
 8005ae8:	f7ff ff78 	bl	80059dc <UART_CheckIdleState>
 8005aec:	bd10      	pop	{r4, pc}
 8005aee:	f880 3078 	strb.w	r3, [r0, #120]	; 0x78
 8005af2:	f000 f96b 	bl	8005dcc <HAL_UART_MspInit>
 8005af6:	e7d9      	b.n	8005aac <HAL_UART_Init+0xa>
 8005af8:	4620      	mov	r0, r4
 8005afa:	f7ff feb9 	bl	8005870 <UART_AdvFeatureConfig>
 8005afe:	e7de      	b.n	8005abe <HAL_UART_Init+0x1c>
 8005b00:	2001      	movs	r0, #1
 8005b02:	4770      	bx	lr

08005b04 <UART_Start_Receive_DMA>:
 8005b04:	b510      	push	{r4, lr}
 8005b06:	4604      	mov	r4, r0
 8005b08:	4613      	mov	r3, r2
 8005b0a:	6541      	str	r1, [r0, #84]	; 0x54
 8005b0c:	f8a0 2058 	strh.w	r2, [r0, #88]	; 0x58
 8005b10:	2200      	movs	r2, #0
 8005b12:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
 8005b16:	2222      	movs	r2, #34	; 0x22
 8005b18:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8005b1c:	6f42      	ldr	r2, [r0, #116]	; 0x74
 8005b1e:	b18a      	cbz	r2, 8005b44 <UART_Start_Receive_DMA+0x40>
 8005b20:	491f      	ldr	r1, [pc, #124]	; (8005ba0 <UART_Start_Receive_DMA+0x9c>)
 8005b22:	6291      	str	r1, [r2, #40]	; 0x28
 8005b24:	6f42      	ldr	r2, [r0, #116]	; 0x74
 8005b26:	491f      	ldr	r1, [pc, #124]	; (8005ba4 <UART_Start_Receive_DMA+0xa0>)
 8005b28:	62d1      	str	r1, [r2, #44]	; 0x2c
 8005b2a:	6f42      	ldr	r2, [r0, #116]	; 0x74
 8005b2c:	491e      	ldr	r1, [pc, #120]	; (8005ba8 <UART_Start_Receive_DMA+0xa4>)
 8005b2e:	6311      	str	r1, [r2, #48]	; 0x30
 8005b30:	6f42      	ldr	r2, [r0, #116]	; 0x74
 8005b32:	2100      	movs	r1, #0
 8005b34:	6351      	str	r1, [r2, #52]	; 0x34
 8005b36:	6801      	ldr	r1, [r0, #0]
 8005b38:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8005b3a:	3124      	adds	r1, #36	; 0x24
 8005b3c:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8005b3e:	f7fd fd11 	bl	8003564 <HAL_DMA_Start_IT>
 8005b42:	bb20      	cbnz	r0, 8005b8e <UART_Start_Receive_DMA+0x8a>
 8005b44:	6923      	ldr	r3, [r4, #16]
 8005b46:	b143      	cbz	r3, 8005b5a <UART_Start_Receive_DMA+0x56>
 8005b48:	6822      	ldr	r2, [r4, #0]
 8005b4a:	e852 3f00 	ldrex	r3, [r2]
 8005b4e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005b52:	e842 3100 	strex	r1, r3, [r2]
 8005b56:	2900      	cmp	r1, #0
 8005b58:	d1f6      	bne.n	8005b48 <UART_Start_Receive_DMA+0x44>
 8005b5a:	6822      	ldr	r2, [r4, #0]
 8005b5c:	f102 0308 	add.w	r3, r2, #8
 8005b60:	e853 3f00 	ldrex	r3, [r3]
 8005b64:	f043 0301 	orr.w	r3, r3, #1
 8005b68:	3208      	adds	r2, #8
 8005b6a:	e842 3100 	strex	r1, r3, [r2]
 8005b6e:	2900      	cmp	r1, #0
 8005b70:	d1f3      	bne.n	8005b5a <UART_Start_Receive_DMA+0x56>
 8005b72:	6822      	ldr	r2, [r4, #0]
 8005b74:	f102 0308 	add.w	r3, r2, #8
 8005b78:	e853 3f00 	ldrex	r3, [r3]
 8005b7c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005b80:	3208      	adds	r2, #8
 8005b82:	e842 3100 	strex	r1, r3, [r2]
 8005b86:	2900      	cmp	r1, #0
 8005b88:	d1f3      	bne.n	8005b72 <UART_Start_Receive_DMA+0x6e>
 8005b8a:	2000      	movs	r0, #0
 8005b8c:	bd10      	pop	{r4, pc}
 8005b8e:	2310      	movs	r3, #16
 8005b90:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8005b94:	2320      	movs	r3, #32
 8005b96:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8005b9a:	2001      	movs	r0, #1
 8005b9c:	e7f6      	b.n	8005b8c <UART_Start_Receive_DMA+0x88>
 8005b9e:	bf00      	nop
 8005ba0:	08005591 	.word	0x08005591
 8005ba4:	08005571 	.word	0x08005571
 8005ba8:	08005217 	.word	0x08005217

08005bac <HAL_UART_Receive_DMA>:
 8005bac:	b538      	push	{r3, r4, r5, lr}
 8005bae:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
 8005bb2:	2b20      	cmp	r3, #32
 8005bb4:	d114      	bne.n	8005be0 <HAL_UART_Receive_DMA+0x34>
 8005bb6:	b1a9      	cbz	r1, 8005be4 <HAL_UART_Receive_DMA+0x38>
 8005bb8:	b1b2      	cbz	r2, 8005be8 <HAL_UART_Receive_DMA+0x3c>
 8005bba:	2300      	movs	r3, #0
 8005bbc:	6603      	str	r3, [r0, #96]	; 0x60
 8005bbe:	6803      	ldr	r3, [r0, #0]
 8005bc0:	685b      	ldr	r3, [r3, #4]
 8005bc2:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
 8005bc6:	d008      	beq.n	8005bda <HAL_UART_Receive_DMA+0x2e>
 8005bc8:	6804      	ldr	r4, [r0, #0]
 8005bca:	e854 3f00 	ldrex	r3, [r4]
 8005bce:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8005bd2:	e844 3500 	strex	r5, r3, [r4]
 8005bd6:	2d00      	cmp	r5, #0
 8005bd8:	d1f6      	bne.n	8005bc8 <HAL_UART_Receive_DMA+0x1c>
 8005bda:	f7ff ff93 	bl	8005b04 <UART_Start_Receive_DMA>
 8005bde:	e000      	b.n	8005be2 <HAL_UART_Receive_DMA+0x36>
 8005be0:	2002      	movs	r0, #2
 8005be2:	bd38      	pop	{r3, r4, r5, pc}
 8005be4:	2001      	movs	r0, #1
 8005be6:	e7fc      	b.n	8005be2 <HAL_UART_Receive_DMA+0x36>
 8005be8:	2001      	movs	r0, #1
 8005bea:	e7fa      	b.n	8005be2 <HAL_UART_Receive_DMA+0x36>

08005bec <HAL_UARTEx_WakeupCallback>:
 8005bec:	4770      	bx	lr

08005bee <NMI_Handler>:
 8005bee:	e7fe      	b.n	8005bee <NMI_Handler>

08005bf0 <HardFault_Handler>:
 8005bf0:	e7fe      	b.n	8005bf0 <HardFault_Handler>

08005bf2 <MemManage_Handler>:
 8005bf2:	e7fe      	b.n	8005bf2 <MemManage_Handler>

08005bf4 <BusFault_Handler>:
 8005bf4:	e7fe      	b.n	8005bf4 <BusFault_Handler>

08005bf6 <UsageFault_Handler>:
 8005bf6:	e7fe      	b.n	8005bf6 <UsageFault_Handler>

08005bf8 <SVC_Handler>:
 8005bf8:	4770      	bx	lr

08005bfa <DebugMon_Handler>:
 8005bfa:	4770      	bx	lr

08005bfc <PendSV_Handler>:
 8005bfc:	4770      	bx	lr

08005bfe <SysTick_Handler>:
 8005bfe:	b508      	push	{r3, lr}
 8005c00:	f7fd fbba 	bl	8003378 <HAL_IncTick>
 8005c04:	bd08      	pop	{r3, pc}
	...

08005c08 <DMA1_Channel5_IRQHandler>:
 8005c08:	b508      	push	{r3, lr}
 8005c0a:	4802      	ldr	r0, [pc, #8]	; (8005c14 <DMA1_Channel5_IRQHandler+0xc>)
 8005c0c:	f7fd fd2e 	bl	800366c <HAL_DMA_IRQHandler>
 8005c10:	bd08      	pop	{r3, pc}
 8005c12:	bf00      	nop
 8005c14:	200003e0 	.word	0x200003e0

08005c18 <USART1_IRQHandler>:
 8005c18:	b508      	push	{r3, lr}
 8005c1a:	4802      	ldr	r0, [pc, #8]	; (8005c24 <USART1_IRQHandler+0xc>)
 8005c1c:	f7ff fb32 	bl	8005284 <HAL_UART_IRQHandler>
 8005c20:	bd08      	pop	{r3, pc}
 8005c22:	bf00      	nop
 8005c24:	20000424 	.word	0x20000424

08005c28 <_getpid>:
 8005c28:	2001      	movs	r0, #1
 8005c2a:	4770      	bx	lr

08005c2c <_kill>:
 8005c2c:	b508      	push	{r3, lr}
 8005c2e:	f7fa fb19 	bl	8000264 <__errno>
 8005c32:	2316      	movs	r3, #22
 8005c34:	6003      	str	r3, [r0, #0]
 8005c36:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c3a:	bd08      	pop	{r3, pc}

08005c3c <_exit>:
 8005c3c:	b508      	push	{r3, lr}
 8005c3e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005c42:	f7ff fff3 	bl	8005c2c <_kill>
 8005c46:	e7fe      	b.n	8005c46 <_exit+0xa>

08005c48 <_read>:
 8005c48:	b570      	push	{r4, r5, r6, lr}
 8005c4a:	460c      	mov	r4, r1
 8005c4c:	4616      	mov	r6, r2
 8005c4e:	2500      	movs	r5, #0
 8005c50:	e006      	b.n	8005c60 <_read+0x18>
 8005c52:	f3af 8000 	nop.w
 8005c56:	4621      	mov	r1, r4
 8005c58:	f801 0b01 	strb.w	r0, [r1], #1
 8005c5c:	3501      	adds	r5, #1
 8005c5e:	460c      	mov	r4, r1
 8005c60:	42b5      	cmp	r5, r6
 8005c62:	dbf6      	blt.n	8005c52 <_read+0xa>
 8005c64:	4630      	mov	r0, r6
 8005c66:	bd70      	pop	{r4, r5, r6, pc}

08005c68 <_write>:
 8005c68:	b570      	push	{r4, r5, r6, lr}
 8005c6a:	460c      	mov	r4, r1
 8005c6c:	4616      	mov	r6, r2
 8005c6e:	2500      	movs	r5, #0
 8005c70:	e004      	b.n	8005c7c <_write+0x14>
 8005c72:	f814 0b01 	ldrb.w	r0, [r4], #1
 8005c76:	f3af 8000 	nop.w
 8005c7a:	3501      	adds	r5, #1
 8005c7c:	42b5      	cmp	r5, r6
 8005c7e:	dbf8      	blt.n	8005c72 <_write+0xa>
 8005c80:	4630      	mov	r0, r6
 8005c82:	bd70      	pop	{r4, r5, r6, pc}

08005c84 <_close>:
 8005c84:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c88:	4770      	bx	lr

08005c8a <_fstat>:
 8005c8a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8005c8e:	604b      	str	r3, [r1, #4]
 8005c90:	2000      	movs	r0, #0
 8005c92:	4770      	bx	lr

08005c94 <_isatty>:
 8005c94:	2001      	movs	r0, #1
 8005c96:	4770      	bx	lr

08005c98 <_lseek>:
 8005c98:	2000      	movs	r0, #0
 8005c9a:	4770      	bx	lr

08005c9c <_sbrk>:
 8005c9c:	b510      	push	{r4, lr}
 8005c9e:	4603      	mov	r3, r0
 8005ca0:	4a0c      	ldr	r2, [pc, #48]	; (8005cd4 <_sbrk+0x38>)
 8005ca2:	490d      	ldr	r1, [pc, #52]	; (8005cd8 <_sbrk+0x3c>)
 8005ca4:	480d      	ldr	r0, [pc, #52]	; (8005cdc <_sbrk+0x40>)
 8005ca6:	6800      	ldr	r0, [r0, #0]
 8005ca8:	b140      	cbz	r0, 8005cbc <_sbrk+0x20>
 8005caa:	480c      	ldr	r0, [pc, #48]	; (8005cdc <_sbrk+0x40>)
 8005cac:	6800      	ldr	r0, [r0, #0]
 8005cae:	4403      	add	r3, r0
 8005cb0:	1a52      	subs	r2, r2, r1
 8005cb2:	4293      	cmp	r3, r2
 8005cb4:	d806      	bhi.n	8005cc4 <_sbrk+0x28>
 8005cb6:	4a09      	ldr	r2, [pc, #36]	; (8005cdc <_sbrk+0x40>)
 8005cb8:	6013      	str	r3, [r2, #0]
 8005cba:	bd10      	pop	{r4, pc}
 8005cbc:	4807      	ldr	r0, [pc, #28]	; (8005cdc <_sbrk+0x40>)
 8005cbe:	4c08      	ldr	r4, [pc, #32]	; (8005ce0 <_sbrk+0x44>)
 8005cc0:	6004      	str	r4, [r0, #0]
 8005cc2:	e7f2      	b.n	8005caa <_sbrk+0xe>
 8005cc4:	f7fa face 	bl	8000264 <__errno>
 8005cc8:	230c      	movs	r3, #12
 8005cca:	6003      	str	r3, [r0, #0]
 8005ccc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005cd0:	e7f3      	b.n	8005cba <_sbrk+0x1e>
 8005cd2:	bf00      	nop
 8005cd4:	20008000 	.word	0x20008000
 8005cd8:	00000400 	.word	0x00000400
 8005cdc:	20000390 	.word	0x20000390
 8005ce0:	200004b0 	.word	0x200004b0

08005ce4 <SystemInit>:
 8005ce4:	4a03      	ldr	r2, [pc, #12]	; (8005cf4 <SystemInit+0x10>)
 8005ce6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8005cea:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8005cee:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8005cf2:	4770      	bx	lr
 8005cf4:	e000ed00 	.word	0xe000ed00

08005cf8 <MX_TIM2_Init>:
 8005cf8:	b500      	push	{lr}
 8005cfa:	b089      	sub	sp, #36	; 0x24
 8005cfc:	2300      	movs	r3, #0
 8005cfe:	9304      	str	r3, [sp, #16]
 8005d00:	9305      	str	r3, [sp, #20]
 8005d02:	9306      	str	r3, [sp, #24]
 8005d04:	9307      	str	r3, [sp, #28]
 8005d06:	9301      	str	r3, [sp, #4]
 8005d08:	9302      	str	r3, [sp, #8]
 8005d0a:	9303      	str	r3, [sp, #12]
 8005d0c:	4815      	ldr	r0, [pc, #84]	; (8005d64 <MX_TIM2_Init+0x6c>)
 8005d0e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005d12:	6002      	str	r2, [r0, #0]
 8005d14:	2247      	movs	r2, #71	; 0x47
 8005d16:	6042      	str	r2, [r0, #4]
 8005d18:	6083      	str	r3, [r0, #8]
 8005d1a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005d1e:	60c2      	str	r2, [r0, #12]
 8005d20:	6103      	str	r3, [r0, #16]
 8005d22:	6183      	str	r3, [r0, #24]
 8005d24:	f7ff f928 	bl	8004f78 <HAL_TIM_Base_Init>
 8005d28:	b990      	cbnz	r0, 8005d50 <MX_TIM2_Init+0x58>
 8005d2a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005d2e:	9304      	str	r3, [sp, #16]
 8005d30:	a904      	add	r1, sp, #16
 8005d32:	480c      	ldr	r0, [pc, #48]	; (8005d64 <MX_TIM2_Init+0x6c>)
 8005d34:	f7ff f95e 	bl	8004ff4 <HAL_TIM_ConfigClockSource>
 8005d38:	b968      	cbnz	r0, 8005d56 <MX_TIM2_Init+0x5e>
 8005d3a:	2300      	movs	r3, #0
 8005d3c:	9301      	str	r3, [sp, #4]
 8005d3e:	9303      	str	r3, [sp, #12]
 8005d40:	a901      	add	r1, sp, #4
 8005d42:	4808      	ldr	r0, [pc, #32]	; (8005d64 <MX_TIM2_Init+0x6c>)
 8005d44:	f7ff f9d6 	bl	80050f4 <HAL_TIMEx_MasterConfigSynchronization>
 8005d48:	b940      	cbnz	r0, 8005d5c <MX_TIM2_Init+0x64>
 8005d4a:	b009      	add	sp, #36	; 0x24
 8005d4c:	f85d fb04 	ldr.w	pc, [sp], #4
 8005d50:	f7fd f918 	bl	8002f84 <Error_Handler>
 8005d54:	e7e9      	b.n	8005d2a <MX_TIM2_Init+0x32>
 8005d56:	f7fd f915 	bl	8002f84 <Error_Handler>
 8005d5a:	e7ee      	b.n	8005d3a <MX_TIM2_Init+0x42>
 8005d5c:	f7fd f912 	bl	8002f84 <Error_Handler>
 8005d60:	e7f3      	b.n	8005d4a <MX_TIM2_Init+0x52>
 8005d62:	bf00      	nop
 8005d64:	20000394 	.word	0x20000394

08005d68 <HAL_TIM_Base_MspInit>:
 8005d68:	6803      	ldr	r3, [r0, #0]
 8005d6a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005d6e:	d000      	beq.n	8005d72 <HAL_TIM_Base_MspInit+0xa>
 8005d70:	4770      	bx	lr
 8005d72:	b082      	sub	sp, #8
 8005d74:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8005d78:	69da      	ldr	r2, [r3, #28]
 8005d7a:	f042 0201 	orr.w	r2, r2, #1
 8005d7e:	61da      	str	r2, [r3, #28]
 8005d80:	69db      	ldr	r3, [r3, #28]
 8005d82:	f003 0301 	and.w	r3, r3, #1
 8005d86:	9301      	str	r3, [sp, #4]
 8005d88:	9b01      	ldr	r3, [sp, #4]
 8005d8a:	b002      	add	sp, #8
 8005d8c:	4770      	bx	lr
	...

08005d90 <MX_USART1_UART_Init>:
 8005d90:	b508      	push	{r3, lr}
 8005d92:	480b      	ldr	r0, [pc, #44]	; (8005dc0 <MX_USART1_UART_Init+0x30>)
 8005d94:	4b0b      	ldr	r3, [pc, #44]	; (8005dc4 <MX_USART1_UART_Init+0x34>)
 8005d96:	6003      	str	r3, [r0, #0]
 8005d98:	4b0b      	ldr	r3, [pc, #44]	; (8005dc8 <MX_USART1_UART_Init+0x38>)
 8005d9a:	6043      	str	r3, [r0, #4]
 8005d9c:	2300      	movs	r3, #0
 8005d9e:	6083      	str	r3, [r0, #8]
 8005da0:	60c3      	str	r3, [r0, #12]
 8005da2:	6103      	str	r3, [r0, #16]
 8005da4:	2204      	movs	r2, #4
 8005da6:	6142      	str	r2, [r0, #20]
 8005da8:	6183      	str	r3, [r0, #24]
 8005daa:	61c3      	str	r3, [r0, #28]
 8005dac:	6203      	str	r3, [r0, #32]
 8005dae:	6243      	str	r3, [r0, #36]	; 0x24
 8005db0:	f7ff fe77 	bl	8005aa2 <HAL_UART_Init>
 8005db4:	b900      	cbnz	r0, 8005db8 <MX_USART1_UART_Init+0x28>
 8005db6:	bd08      	pop	{r3, pc}
 8005db8:	f7fd f8e4 	bl	8002f84 <Error_Handler>
 8005dbc:	e7fb      	b.n	8005db6 <MX_USART1_UART_Init+0x26>
 8005dbe:	bf00      	nop
 8005dc0:	20000424 	.word	0x20000424
 8005dc4:	40013800 	.word	0x40013800
 8005dc8:	00088b80 	.word	0x00088b80

08005dcc <HAL_UART_MspInit>:
 8005dcc:	b510      	push	{r4, lr}
 8005dce:	b088      	sub	sp, #32
 8005dd0:	2300      	movs	r3, #0
 8005dd2:	9303      	str	r3, [sp, #12]
 8005dd4:	9304      	str	r3, [sp, #16]
 8005dd6:	9305      	str	r3, [sp, #20]
 8005dd8:	9306      	str	r3, [sp, #24]
 8005dda:	9307      	str	r3, [sp, #28]
 8005ddc:	6802      	ldr	r2, [r0, #0]
 8005dde:	4b23      	ldr	r3, [pc, #140]	; (8005e6c <HAL_UART_MspInit+0xa0>)
 8005de0:	429a      	cmp	r2, r3
 8005de2:	d001      	beq.n	8005de8 <HAL_UART_MspInit+0x1c>
 8005de4:	b008      	add	sp, #32
 8005de6:	bd10      	pop	{r4, pc}
 8005de8:	4604      	mov	r4, r0
 8005dea:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 8005dee:	699a      	ldr	r2, [r3, #24]
 8005df0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005df4:	619a      	str	r2, [r3, #24]
 8005df6:	699a      	ldr	r2, [r3, #24]
 8005df8:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8005dfc:	9201      	str	r2, [sp, #4]
 8005dfe:	9a01      	ldr	r2, [sp, #4]
 8005e00:	695a      	ldr	r2, [r3, #20]
 8005e02:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8005e06:	615a      	str	r2, [r3, #20]
 8005e08:	695b      	ldr	r3, [r3, #20]
 8005e0a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005e0e:	9302      	str	r3, [sp, #8]
 8005e10:	9b02      	ldr	r3, [sp, #8]
 8005e12:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8005e16:	9303      	str	r3, [sp, #12]
 8005e18:	2302      	movs	r3, #2
 8005e1a:	9304      	str	r3, [sp, #16]
 8005e1c:	2303      	movs	r3, #3
 8005e1e:	9306      	str	r3, [sp, #24]
 8005e20:	2307      	movs	r3, #7
 8005e22:	9307      	str	r3, [sp, #28]
 8005e24:	a903      	add	r1, sp, #12
 8005e26:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005e2a:	f7fd fc79 	bl	8003720 <HAL_GPIO_Init>
 8005e2e:	4810      	ldr	r0, [pc, #64]	; (8005e70 <HAL_UART_MspInit+0xa4>)
 8005e30:	4b10      	ldr	r3, [pc, #64]	; (8005e74 <HAL_UART_MspInit+0xa8>)
 8005e32:	6003      	str	r3, [r0, #0]
 8005e34:	2300      	movs	r3, #0
 8005e36:	6043      	str	r3, [r0, #4]
 8005e38:	6083      	str	r3, [r0, #8]
 8005e3a:	2280      	movs	r2, #128	; 0x80
 8005e3c:	60c2      	str	r2, [r0, #12]
 8005e3e:	6103      	str	r3, [r0, #16]
 8005e40:	6143      	str	r3, [r0, #20]
 8005e42:	6183      	str	r3, [r0, #24]
 8005e44:	61c3      	str	r3, [r0, #28]
 8005e46:	f7fd fb65 	bl	8003514 <HAL_DMA_Init>
 8005e4a:	b958      	cbnz	r0, 8005e64 <HAL_UART_MspInit+0x98>
 8005e4c:	4b08      	ldr	r3, [pc, #32]	; (8005e70 <HAL_UART_MspInit+0xa4>)
 8005e4e:	6763      	str	r3, [r4, #116]	; 0x74
 8005e50:	625c      	str	r4, [r3, #36]	; 0x24
 8005e52:	2200      	movs	r2, #0
 8005e54:	4611      	mov	r1, r2
 8005e56:	2025      	movs	r0, #37	; 0x25
 8005e58:	f7fd fac6 	bl	80033e8 <HAL_NVIC_SetPriority>
 8005e5c:	2025      	movs	r0, #37	; 0x25
 8005e5e:	f7fd fafb 	bl	8003458 <HAL_NVIC_EnableIRQ>
 8005e62:	e7bf      	b.n	8005de4 <HAL_UART_MspInit+0x18>
 8005e64:	f7fd f88e 	bl	8002f84 <Error_Handler>
 8005e68:	e7f0      	b.n	8005e4c <HAL_UART_MspInit+0x80>
 8005e6a:	bf00      	nop
 8005e6c:	40013800 	.word	0x40013800
 8005e70:	200003e0 	.word	0x200003e0
 8005e74:	40020058 	.word	0x40020058

08005e78 <Reset_Handler>:
 8005e78:	f8df d034 	ldr.w	sp, [pc, #52]	; 8005eb0 <LoopForever+0x2>
 8005e7c:	f7ff ff32 	bl	8005ce4 <SystemInit>
 8005e80:	480c      	ldr	r0, [pc, #48]	; (8005eb4 <LoopForever+0x6>)
 8005e82:	490d      	ldr	r1, [pc, #52]	; (8005eb8 <LoopForever+0xa>)
 8005e84:	4a0d      	ldr	r2, [pc, #52]	; (8005ebc <LoopForever+0xe>)
 8005e86:	2300      	movs	r3, #0
 8005e88:	e002      	b.n	8005e90 <LoopCopyDataInit>

08005e8a <CopyDataInit>:
 8005e8a:	58d4      	ldr	r4, [r2, r3]
 8005e8c:	50c4      	str	r4, [r0, r3]
 8005e8e:	3304      	adds	r3, #4

08005e90 <LoopCopyDataInit>:
 8005e90:	18c4      	adds	r4, r0, r3
 8005e92:	428c      	cmp	r4, r1
 8005e94:	d3f9      	bcc.n	8005e8a <CopyDataInit>
 8005e96:	4a0a      	ldr	r2, [pc, #40]	; (8005ec0 <LoopForever+0x12>)
 8005e98:	4c0a      	ldr	r4, [pc, #40]	; (8005ec4 <LoopForever+0x16>)
 8005e9a:	2300      	movs	r3, #0
 8005e9c:	e001      	b.n	8005ea2 <LoopFillZerobss>

08005e9e <FillZerobss>:
 8005e9e:	6013      	str	r3, [r2, #0]
 8005ea0:	3204      	adds	r2, #4

08005ea2 <LoopFillZerobss>:
 8005ea2:	42a2      	cmp	r2, r4
 8005ea4:	d3fb      	bcc.n	8005e9e <FillZerobss>
 8005ea6:	f7fa fa05 	bl	80002b4 <__libc_init_array>
 8005eaa:	f7fd f8af 	bl	800300c <main>

08005eae <LoopForever>:
 8005eae:	e7fe      	b.n	8005eae <LoopForever>
 8005eb0:	20008000 	.word	0x20008000
 8005eb4:	20000000 	.word	0x20000000
 8005eb8:	20000108 	.word	0x20000108
 8005ebc:	0800613c 	.word	0x0800613c
 8005ec0:	20000108 	.word	0x20000108
 8005ec4:	200004ac 	.word	0x200004ac

08005ec8 <ADC1_2_IRQHandler>:
 8005ec8:	e7fe      	b.n	8005ec8 <ADC1_2_IRQHandler>
	...

08005ecc <_init>:
 8005ecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ece:	bf00      	nop
 8005ed0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005ed2:	bc08      	pop	{r3}
 8005ed4:	469e      	mov	lr, r3
 8005ed6:	4770      	bx	lr

08005ed8 <_fini>:
 8005ed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005eda:	bf00      	nop
 8005edc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005ede:	bc08      	pop	{r3}
 8005ee0:	469e      	mov	lr, r3
 8005ee2:	4770      	bx	lr
